 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 210
    4                      ; Text size: 4724
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   85  0000300c  6e646c65	
   85  00003010  5f746f5f	
   85  00003014  73686172	
   85  00003018  65645f6d	
   85  0000301c  656d6f72	
   85  00003020  795f7061	
   85  00003024  67653e20	
   85  00003028  3c68616e	
   85  0000302c  646c655f	
   85  00003030  746f5f70	
   85  00003034  6167655f	
   85  00003038  6d617070	
   85  0000303c  65645f73	
   85  00003040  656d6170	
   85  00003044  686f7265	
   85  00003048  3e0a00  	
   86  0000304b          	.align 2
   87  0000304c          	LC2_LF0:
   88  0000304c  4d617020	.ascii "Map failed in SO injection \n\000"
   88  00003050  6661696c	
   88  00003054  65642069	
   88  00003058  6e20534f	
   88  0000305c  20696e6a	
   88  00003060  65637469	
   88  00003064  6f6e200a	
   88  00003068  00      	
   89  00003069          	.align 2
   90  0000306c          	LC3_LF0:
   91  0000306c  534f3400	.ascii "SO4\000"
   92  00003070          	.align 2
   93  00003070          	LC4_LF0:
   94  00003070  28256429	.ascii "(%d) s + 2*O2 -> SO4 reacted, PID: %d\n\000"
   94  00003074  2073202b	
   94  00003078  20322a4f	
   94  0000307c  32202d3e	
   94  00003080  20534f34	
   94  00003084  20726561	
   94  00003088  63746564	
   94  0000308c  2c205049	
   94  00003090  443a2025	
   94  00003094  640a00  	
   95  00003097          	.align 2
   96  00003098          	LC5_LF0:
   97  00003098  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
   97  0000309c  73656d61	
   97  000030a0  70686f72	
   97  000030a4  6520735f	
   97  000030a8  70726f63	
   97  000030ac  735f636f	
   97  000030b0  6d706c65	
   97  000030b4  74656420	
   97  000030b8  28256429	
   97  000030bc  20696e20	
   97  000030c0  00      	
   98  000030c1          	.align 2
   99  000030c4          	LC6_LF0:
  100  000030c4  2c206578	.ascii ", exiting...\n\000"
  100  000030c8  6974696e	
  100  000030cc  672e2e2e	
  100  000030d0  0a00    	
  101  000030d2          	.text
  102  000010d4          	.align 2
  103  000010d4          	.proc _main
  104  000010d4          	.global _main
  105  000010d4          	_main:
  106                      ;  Function 'main'; 104 bytes of locals, 0 regs to save.
  107  000010d4  afbefffc	sw	-4(r29),r30; push fp
  108  000010d8  001df020	add	r30,r0,r29; fp = sp
  109  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  110  000010e0  2fbd0070	subui	r29,r29,#112; alloc local storage
  111  000010e4  8fc20000	lw	r2,(r30)
  112  000010e8  8fc40004	lw	r4,4(r30)
  113  000010ec  0c00117c	jal	___main
  114  000010f0  54000000	nop; not filled.
  115  000010f4  64410004	snei	r1,r2,#4
  116  000010f8  1020004c	beqz	r1,L14_LF0
  117  000010fc  54000000	nop; not filled.
  118  00001100  23bdfff8	addi	r29,r29,#-8
  119  00001104  3c070000	lhi	r7,((LC0_LF0)>>16)&0xffff
  120  00001108  24e73000	addui	r7,r7,(LC0_LF0)&0xffff
  121  0000110c  afa70000	sw	(r29),r7
  122  00001110  0c0002a8	jal	_Printf
  123  00001114  54000000	nop; not filled.
  124  00001118  8c870000	lw	r7,(r4)
  125  0000111c  afa70000	sw	(r29),r7
  126  00001120  0c000298	jal	_Printf
  127  00001124  54000000	nop; not filled.
  128  00001128  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  129  0000112c  24e73008	addui	r7,r7,(LC1_LF0)&0xffff
  130  00001130  afa70000	sw	(r29),r7
  131  00001134  0c000284	jal	_Printf
  132  00001138  54000000	nop; not filled.
  133  0000113c  0c000384	jal	_Exit
  134  00001140  54000000	nop; not filled.
  135  00001144  23bd0008	addi	r29,r29,#8
  136  00001148          	L14_LF0:
  137  00001148  23bdfff0	addi	r29,r29,#-16
  138  0000114c  8c870004	lw	r7,4(r4)
  139  00001150  afa70000	sw	(r29),r7
  140  00001154  20070000	addi	r7,r0,#0
  141  00001158  afa70004	sw	4(r29),r7
  142  0000115c  2007000a	addi	r7,r0,#10
  143  00001160  afa70008	sw	8(r29),r7
  144  00001164  0c000c08	jal	_dstrtol
  145  00001168  54000000	nop; not filled.
  146  0000116c  00012820	add	r5,r0,r1
  147  00001170  8c870008	lw	r7,8(r4)
  148  00001174  afa70000	sw	(r29),r7
  149  00001178  20070000	addi	r7,r0,#0
  150  0000117c  afa70004	sw	4(r29),r7
  151  00001180  2007000a	addi	r7,r0,#10
  152  00001184  afa70008	sw	8(r29),r7
  153  00001188  0c000be4	jal	_dstrtol
  154  0000118c  54000000	nop; not filled.
  155  00001190  00011020	add	r2,r0,r1
  156  00001194  8c87000c	lw	r7,12(r4)
  157  00001198  afa70000	sw	(r29),r7
  158  0000119c  20070000	addi	r7,r0,#0
  159  000011a0  afa70004	sw	4(r29),r7
  160  000011a4  2007000a	addi	r7,r0,#10
  161  000011a8  afa70008	sw	8(r29),r7
  162  000011ac  0c000bc0	jal	_dstrtol
  163  000011b0  54000000	nop; not filled.
  164  000011b4  00013020	add	r6,r0,r1
  165  000011b8  afa20000	sw	(r29),r2
  166  000011bc  0c00022c	jal	_shmat
  167  000011c0  54000000	nop; not filled.
  168  000011c4  00011820	add	r3,r0,r1
  169  000011c8  23bd0010	addi	r29,r29,#16
  170  000011cc  64610000	snei	r1,r3,#0
  171  000011d0  14200028	bnez	r1,L15_LF0
  172  000011d4  54000000	nop; not filled.
  173  000011d8  23bdfff8	addi	r29,r29,#-8
  174  000011dc  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  175  000011e0  24e7304c	addui	r7,r7,(LC2_LF0)&0xffff
  176  000011e4  afa70000	sw	(r29),r7
  177  000011e8  0c0001d0	jal	_Printf
  178  000011ec  54000000	nop; not filled.
  179  000011f0  0c0002d0	jal	_Exit
  180  000011f4  54000000	nop; not filled.
  181  000011f8  23bd0008	addi	r29,r29,#8
  182  000011fc          	L15_LF0:
  183  000011fc  23bdfff8	addi	r29,r29,#-8
  184  00001200  8c670004	lw	r7,4(r3)
  185  00001204  afa70000	sw	(r29),r7
  186  00001208  0c000270	jal	_mbox_open
  187  0000120c  54000000	nop; not filled.
  188  00001210  23bdfff8	addi	r29,r29,#-8
  189  00001214  8c670004	lw	r7,4(r3)
  190  00001218  afa70000	sw	(r29),r7
  191  0000121c  20070001	addi	r7,r0,#1
  192  00001220  afa70004	sw	4(r29),r7
  193  00001224  23c2ff90	addi	r2,r30,#-112
  194  00001228  afa20008	sw	8(r29),r2
  195  0000122c  0c000270	jal	_mbox_recv
  196  00001230  54000000	nop; not filled.
  197  00001234  8c670000	lw	r7,(r3)
  198  00001238  afa70000	sw	(r29),r7
  199  0000123c  0c000248	jal	_mbox_close
  200  00001240  54000000	nop; not filled.
  201  00001244  8c67000c	lw	r7,12(r3)
  202  00001248  afa70000	sw	(r29),r7
  203  0000124c  0c00022c	jal	_mbox_open
  204  00001250  54000000	nop; not filled.
  205  00001254  8c67000c	lw	r7,12(r3)
  206  00001258  afa70000	sw	(r29),r7
  207  0000125c  20070002	addi	r7,r0,#2
  208  00001260  afa70004	sw	4(r29),r7
  209  00001264  afa20008	sw	8(r29),r2
  210  00001268  0c000234	jal	_mbox_recv
  211  0000126c  54000000	nop; not filled.
  212  00001270  8c67000c	lw	r7,12(r3)
  213  00001274  afa70000	sw	(r29),r7
  214  00001278  20070002	addi	r7,r0,#2
  215  0000127c  afa70004	sw	4(r29),r7
  216  00001280  afa20008	sw	8(r29),r2
  217  00001284  0c000218	jal	_mbox_recv
  218  00001288  54000000	nop; not filled.
  219  0000128c  8c67000c	lw	r7,12(r3)
  220  00001290  afa70000	sw	(r29),r7
  221  00001294  0c0001f0	jal	_mbox_close
  222  00001298  54000000	nop; not filled.
  223  0000129c  8c670014	lw	r7,20(r3)
  224  000012a0  afa70000	sw	(r29),r7
  225  000012a4  0c0001d4	jal	_mbox_open
  226  000012a8  54000000	nop; not filled.
  227  000012ac  8c670014	lw	r7,20(r3)
  228  000012b0  afa70000	sw	(r29),r7
  229  000012b4  20070003	addi	r7,r0,#3
  230  000012b8  afa70004	sw	4(r29),r7
  231  000012bc  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  232  000012c0  24e7306c	addui	r7,r7,(LC3_LF0)&0xffff
  233  000012c4  afa70008	sw	8(r29),r7
  234  000012c8  0c0001c8	jal	_mbox_send
  235  000012cc  54000000	nop; not filled.
  236  000012d0  8c630014	lw	r3,20(r3)
  237  000012d4  afa30000	sw	(r29),r3
  238  000012d8  0c0001ac	jal	_mbox_close
  239  000012dc  54000000	nop; not filled.
  240  000012e0  0c0000e4	jal	_getpid
  241  000012e4  54000000	nop; not filled.
  242  000012e8  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  243  000012ec  24e73070	addui	r7,r7,(LC4_LF0)&0xffff
  244  000012f0  afa70000	sw	(r29),r7
  245  000012f4  afa60004	sw	4(r29),r6
  246  000012f8  afa10008	sw	8(r29),r1
  247  000012fc  0c0000bc	jal	_Printf
  248  00001300  54000000	nop; not filled.
  249  00001304  afa50000	sw	(r29),r5
  250  00001308  0c000104	jal	_sem_signal
  251  0000130c  54000000	nop; not filled.
  252  00001310  23bd0010	addi	r29,r29,#16
  253  00001314  64210001	snei	r1,r1,#1
  254  00001318  10200050	beqz	r1,L16_LF0
  255  0000131c  54000000	nop; not filled.
  256  00001320  23bdfff8	addi	r29,r29,#-8
  257  00001324  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  258  00001328  24e73098	addui	r7,r7,(LC5_LF0)&0xffff
  259  0000132c  afa70000	sw	(r29),r7
  260  00001330  afa50004	sw	4(r29),r5
  261  00001334  0c000084	jal	_Printf
  262  00001338  54000000	nop; not filled.
  263  0000133c  8c840000	lw	r4,(r4)
  264  00001340  afa40000	sw	(r29),r4
  265  00001344  0c000074	jal	_Printf
  266  00001348  54000000	nop; not filled.
  267  0000134c  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  268  00001350  24e730c4	addui	r7,r7,(LC6_LF0)&0xffff
  269  00001354  afa70000	sw	(r29),r7
  270  00001358  0c000060	jal	_Printf
  271  0000135c  54000000	nop; not filled.
  272  00001360  0c000160	jal	_Exit
  273  00001364  54000000	nop; not filled.
  274  00001368  23bd0008	addi	r29,r29,#8
  275  0000136c          	L16_LF0:
  276  0000136c  0c000ef0	jal	_exit
  277  00001370  54000000	nop
  278  00001374          	.endproc _main
  279                      ;;;
  280                      ;;; Stub functions for DLX traps.
  281                      ;;;
  282                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  283                      ;;;
  284                      ;;; The traps such as Open and Close
  285                      ;;; (note the capital letters) are for use by user programs.  The traps
  286                      ;;; with names such as open and close (lower case) are for use by the OS.
  287                      ;;;
  290  00001374          	.align 2
  292                      ;;; The following are the traps to be used by user-level programs
  293                      ;;;
  295  00001374          	.align 2
  296  00001374          	.proc _Open
  297  00001374          	.global _Open
  298  00001374          	_Open:
  299                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  300                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  301                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  302  00001374  44000213	trap	#0x213
  303  00001378  4be00000	jr	r31
  304  0000137c  54000000	nop
  305  00001380          	.endproc _Open
  307  00001380          	.proc _Close
  308  00001380          	.global _Close
  309  00001380          	_Close:
  310  00001380  44000214	trap	#0x214
  311  00001384  4be00000	jr	r31
  312  00001388  54000000	nop
  313  0000138c          	.endproc _Close
  315  0000138c          	.proc _Read
  316  0000138c          	.global _Read
  317  0000138c          	_Read:
  318  0000138c  44000210	trap	#0x210
  319  00001390  4be00000	jr	r31
  320  00001394  54000000	nop
  321  00001398          	.endproc _Read
  323  00001398          	.proc _Write
  324  00001398          	.global _Write
  325  00001398          	_Write:
  326  00001398  44000211	trap	#0x211
  327  0000139c  4be00000	jr	r31
  328  000013a0  54000000	nop
  329  000013a4          	.endproc _Write
  331  000013a4          	.proc _Lseek
  332  000013a4          	.global _Lseek
  333  000013a4          	_Lseek:
  334  000013a4  44000212	trap	#0x212
  335  000013a8  4be00000	jr	r31
  336  000013ac  54000000	nop
  337  000013b0          	.endproc _Lseek
  339  000013b0          	.proc _Putchar
  340  000013b0          	.global _Putchar
  341  000013b0          	_Putchar:
  342  000013b0  44000280	trap	#0x280
  343  000013b4  4be00000	jr	r31
  344  000013b8  54000000	nop
  345  000013bc          	.endproc _Putchar
  347  000013bc          	.proc _Printf
  348  000013bc          	.global _Printf
  349  000013bc          	_Printf:
  350  000013bc  44000201	trap	#0x201
  351  000013c0  4be00000	jr	r31
  352  000013c4  54000000	nop
  353  000013c8          	.endproc _Printf
  355  000013c8          	.proc _getpid
  356  000013c8          	.global _getpid
  357  000013c8          	_getpid:
  358  000013c8  44000431	trap	#0x431
  359  000013cc  4be00000	jr	r31
  360  000013d0  54000000	nop
  361  000013d4          	.endproc _getpid
  363  000013d4          	.proc _process_create
  364  000013d4          	.global _process_create
  365  000013d4          	_process_create:
  366  000013d4  44000432	trap	#0x432
  367  000013d8  4be00000	jr	r31
  368  000013dc  54000000	nop
  369  000013e0          	.endproc _process_create
  371  000013e0          	.proc _shmget
  372  000013e0          	.global _shmget
  373  000013e0          	_shmget:
  374  000013e0  44000440	trap	#0x440
  375  000013e4  4be00000	jr	r31
  376  000013e8  54000000	nop
  377  000013ec          	.endproc _shmget
  379  000013ec          	.proc _shmat
  380  000013ec          	.global _shmat
  381  000013ec          	_shmat:
  382  000013ec  44000441	trap	#0x441
  383  000013f0  4be00000	jr	r31
  384  000013f4  54000000	nop
  385  000013f8          	.endproc _shmat
  387  000013f8          	.proc _sem_create
  388  000013f8          	.global _sem_create
  389  000013f8          	_sem_create:
  390  000013f8  44000450	trap	#0x450
  391  000013fc  4be00000	jr	r31
  392  00001400  54000000	nop
  393  00001404          	.endproc _sem_create
  395  00001404          	.proc _sem_wait
  396  00001404          	.global _sem_wait
  397  00001404          	_sem_wait:
  398  00001404  44000451	trap	#0x451
  399  00001408  4be00000	jr	r31
  400  0000140c  54000000	nop
  401  00001410          	.endproc _sem_wait
  403  00001410          	.proc _sem_signal
  404  00001410          	.global _sem_signal
  405  00001410          	_sem_signal:
  406  00001410  44000452	trap	#0x452
  407  00001414  4be00000	jr	r31
  408  00001418  54000000	nop
  409  0000141c          	.endproc _sem_signal
  411  0000141c          	.proc _lock_create
  412  0000141c          	.global _lock_create
  413  0000141c          	_lock_create:
  414  0000141c  44000453	trap	#0x453
  415  00001420  4be00000	jr	r31
  416  00001424  54000000	nop
  417  00001428          	.endproc _lock_create
  419  00001428          	.proc _lock_acquire
  420  00001428          	.global _lock_acquire
  421  00001428          	_lock_acquire:
  422  00001428  44000454	trap	#0x454
  423  0000142c  4be00000	jr	r31
  424  00001430  54000000	nop
  425  00001434          	.endproc _lock_acquire
  427  00001434          	.proc _lock_release
  428  00001434          	.global _lock_release
  429  00001434          	_lock_release:
  430  00001434  44000455	trap	#0x455
  431  00001438  4be00000	jr	r31
  432  0000143c  54000000	nop
  433  00001440          	.endproc _lock_release
  435  00001440          	.proc _cond_create
  436  00001440          	.global _cond_create
  437  00001440          	_cond_create:
  438  00001440  44000456	trap	#0x456
  439  00001444  4be00000	jr	r31
  440  00001448  54000000	nop
  441  0000144c          	.endproc _cond_create
  443  0000144c          	.proc _cond_wait
  444  0000144c          	.global _cond_wait
  445  0000144c          	_cond_wait:
  446  0000144c  44000457	trap	#0x457
  447  00001450  4be00000	jr	r31
  448  00001454  54000000	nop
  449  00001458          	.endproc _cond_wait
  451  00001458          	.proc _cond_signal
  452  00001458          	.global _cond_signal
  453  00001458          	_cond_signal:
  454  00001458  44000458	trap	#0x458
  455  0000145c  4be00000	jr	r31
  456  00001460  54000000	nop
  457  00001464          	.endproc _cond_signal
  459  00001464          	.proc _cond_broadcast
  460  00001464          	.global _cond_broadcast
  461  00001464          	_cond_broadcast:
  462  00001464  44000459	trap	#0x459
  463  00001468  4be00000	jr	r31
  464  0000146c  54000000	nop
  465  00001470          	.endproc _cond_broadcast
  467  00001470          	.proc _mbox_create
  468  00001470          	.global _mbox_create
  469  00001470          	_mbox_create:
  470  00001470  44000460	trap	#0x460
  471  00001474  4be00000	jr	r31
  472  00001478  54000000	nop
  473  0000147c          	.endproc _mbox_create
  475  0000147c          	.proc _mbox_open
  476  0000147c          	.global _mbox_open
  477  0000147c          	_mbox_open:
  478  0000147c  44000461	trap	#0x461
  479  00001480  4be00000	jr	r31
  480  00001484  54000000	nop
  481  00001488          	.endproc _mbox_open
  483  00001488          	.proc _mbox_close
  484  00001488          	.global _mbox_close
  485  00001488          	_mbox_close:
  486  00001488  44000462	trap	#0x462
  487  0000148c  4be00000	jr	r31
  488  00001490  54000000	nop
  489  00001494          	.endproc _mbox_close
  491  00001494          	.proc _mbox_send
  492  00001494          	.global _mbox_send
  493  00001494          	_mbox_send:
  494  00001494  44000463	trap	#0x463
  495  00001498  4be00000	jr	r31
  496  0000149c  54000000	nop
  497  000014a0          	.endproc _mbox_send
  499  000014a0          	.proc _mbox_recv
  500  000014a0          	.global _mbox_recv
  501  000014a0          	_mbox_recv:
  502  000014a0  44000464	trap	#0x464
  503  000014a4  4be00000	jr	r31
  504  000014a8  54000000	nop
  505  000014ac          	.endproc _mbox_recv
  507  000014ac          	.proc _sleep
  508  000014ac          	.global _sleep
  509  000014ac          	_sleep:
  510  000014ac  44000465	trap	#0x465
  511  000014b0  4be00000	jr	r31
  512  000014b4  54000000	nop
  513  000014b8          	.endproc _sleep
  515  000014b8          	.proc _yield
  516  000014b8          	.global _yield
  517  000014b8          	_yield:
  518  000014b8  44000466	trap	#0x466
  519  000014bc  4be00000	jr	r31
  520  000014c0  54000000	nop
  521  000014c4          	.endproc _yield
  524  000014c4          	.proc _Exit
  525  000014c4          	.global _Exit
  526  000014c4          	_Exit:
  527  000014c4  44000500	trap	#0x500
  528  000014c8  4be00000	jr	r31
  529  000014cc  54000000	nop
  530  000014d0          	.endproc _Exit
  531                      ; Compiled by GCC
  533  000014d0          	.align 2
  534  000014d0          	.proc _isspace
  535  000014d0          	.global _isspace
  536  000014d0          	_isspace:
  537                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  538  000014d0  afbefffc	sw	-4(r29),r30; push fp
  539  000014d4  001df020	add	r30,r0,r29; fp = sp
  540  000014d8  afbffff8	sw	-8(r29),r31; push ret addr
  541  000014dc  2fbd0018	subui	r29,r29,#24; alloc local storage
  542  000014e0  afa20000	sw	0(r29),r2
  543  000014e4  afa30004	sw	4(r29),r3
  544  000014e8  afa40008	sw	8(r29),r4
  545  000014ec  83c20003	lb	r2,3(r30)
  546  000014f0  20010000	addi	r1,r0,#0
  547  000014f4  304300ff	andi	r3,r2,#0x00ff
  548  000014f8  60640020	seqi	r4,r3,#32
  549  000014fc  1480002c	bnez	r4,L3_LF2
  550  00001500  54000000	nop; delay slot nop
  551  00001504  304300ff	andi	r3,r2,#0x00ff
  552  00001508  60640009	seqi	r4,r3,#9
  553  0000150c  1480001c	bnez	r4,L3_LF2
  554  00001510  54000000	nop; delay slot nop
  555  00001514  304300ff	andi	r3,r2,#0x00ff
  556  00001518  6064000a	seqi	r4,r3,#10
  557  0000151c  1480000c	bnez	r4,L3_LF2
  558  00001520  54000000	nop; delay slot nop
  559  00001524  08000008	j	L2_LF2
  560  00001528  54000000	nop; delay slot nop
  561  0000152c          	L3_LF2:
  562  0000152c  20010001	addi	r1,r0,#1
  563  00001530          	L2_LF2:
  564  00001530  08000004	j	L1_LF2
  565  00001534  54000000	nop; delay slot nop
  566  00001538          	L1_LF2:
  567  00001538  8fa20000	lw	r2,0(r29)
  568  0000153c  8fa30004	lw	r3,4(r29)
  569  00001540  8fa40008	lw	r4,8(r29)
  570  00001544  8fdffff8	lw	r31,-8(r30)
  571  00001548  001ee820	add	r29,r0,r30
  572  0000154c  8fdefffc	lw	r30,-4(r30)
  573  00001550  4be00000	jr	r31
  574  00001554  54000000	nop
  575  00001558          	.endproc _isspace
  576  00001558          	.align 2
  577  00001558          	.proc _isxdigit
  578  00001558          	.global _isxdigit
  579  00001558          	_isxdigit:
  580                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  581  00001558  afbefffc	sw	-4(r29),r30; push fp
  582  0000155c  001df020	add	r30,r0,r29; fp = sp
  583  00001560  afbffff8	sw	-8(r29),r31; push ret addr
  584  00001564  2fbd0018	subui	r29,r29,#24; alloc local storage
  585  00001568  afa20000	sw	0(r29),r2
  586  0000156c  afa30004	sw	4(r29),r3
  587  00001570  afa40008	sw	8(r29),r4
  588  00001574  83c20003	lb	r2,3(r30)
  589  00001578  20010000	addi	r1,r0,#0
  590  0000157c  304300ff	andi	r3,r2,#0x00ff
  591  00001580  6c64002f	sgtui	r4,r3,#47
  592  00001584  1080001c	beqz	r4,L7_LF2
  593  00001588  54000000	nop; delay slot nop
  594  0000158c  304300ff	andi	r3,r2,#0x00ff
  595  00001590  70640039	sleui	r4,r3,#57
  596  00001594  1480005c	bnez	r4,L6_LF2
  597  00001598  54000000	nop; delay slot nop
  598  0000159c  08000004	j	L7_LF2
  599  000015a0  54000000	nop; delay slot nop
  600  000015a4          	L7_LF2:
  601  000015a4  304300ff	andi	r3,r2,#0x00ff
  602  000015a8  6c640060	sgtui	r4,r3,#96
  603  000015ac  1080001c	beqz	r4,L8_LF2
  604  000015b0  54000000	nop; delay slot nop
  605  000015b4  304300ff	andi	r3,r2,#0x00ff
  606  000015b8  70640066	sleui	r4,r3,#102
  607  000015bc  14800034	bnez	r4,L6_LF2
  608  000015c0  54000000	nop; delay slot nop
  609  000015c4  08000004	j	L8_LF2
  610  000015c8  54000000	nop; delay slot nop
  611  000015cc          	L8_LF2:
  612  000015cc  304300ff	andi	r3,r2,#0x00ff
  613  000015d0  6c640040	sgtui	r4,r3,#64
  614  000015d4  10800020	beqz	r4,L5_LF2
  615  000015d8  54000000	nop; delay slot nop
  616  000015dc  304300ff	andi	r3,r2,#0x00ff
  617  000015e0  70640041	sleui	r4,r3,#65
  618  000015e4  1480000c	bnez	r4,L6_LF2
  619  000015e8  54000000	nop; delay slot nop
  620  000015ec  08000008	j	L5_LF2
  621  000015f0  54000000	nop; delay slot nop
  622  000015f4          	L6_LF2:
  623  000015f4  20010001	addi	r1,r0,#1
  624  000015f8          	L5_LF2:
  625  000015f8  08000004	j	L4_LF2
  626  000015fc  54000000	nop; delay slot nop
  627  00001600          	L4_LF2:
  628  00001600  8fa20000	lw	r2,0(r29)
  629  00001604  8fa30004	lw	r3,4(r29)
  630  00001608  8fa40008	lw	r4,8(r29)
  631  0000160c  8fdffff8	lw	r31,-8(r30)
  632  00001610  001ee820	add	r29,r0,r30
  633  00001614  8fdefffc	lw	r30,-4(r30)
  634  00001618  4be00000	jr	r31
  635  0000161c  54000000	nop
  636  00001620          	.endproc _isxdigit
  637  00001620          	.align 2
  638  00001620          	.proc _dstrcpy
  639  00001620          	.global _dstrcpy
  640  00001620          	_dstrcpy:
  641                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  642  00001620  afbefffc	sw	-4(r29),r30; push fp
  643  00001624  001df020	add	r30,r0,r29; fp = sp
  644  00001628  afbffff8	sw	-8(r29),r31; push ret addr
  645  0000162c  2fbd0018	subui	r29,r29,#24; alloc local storage
  646  00001630  afa20000	sw	0(r29),r2
  647  00001634  afa30004	sw	4(r29),r3
  648  00001638  8fc10000	lw	r1,(r30)
  649  0000163c  afc1fff4	sw	-12(r30),r1
  650  00001640          	L10_LF2:
  651  00001640  8fc10000	lw	r1,(r30)
  652  00001644  20220001	addi	r2,r1,#1
  653  00001648  afc20000	sw	(r30),r2
  654  0000164c  8fc20004	lw	r2,4(r30)
  655  00001650  20430001	addi	r3,r2,#1
  656  00001654  afc30004	sw	4(r30),r3
  657  00001658  80420000	lb	r2,(r2)
  658  0000165c  a0220000	sb	(r1),r2
  659  00001660  a3c2fff3	sb	-13(r30),r2
  660  00001664          	L12_LF2:
  661  00001664  93c1fff3	lbu	r1,-13(r30)
  662  00001668  64220000	snei	r2,r1,#0
  663  0000166c  1440000c	bnez	r2,L13_LF2
  664  00001670  54000000	nop; delay slot nop
  665  00001674  0800000c	j	L11_LF2
  666  00001678  54000000	nop; delay slot nop
  667  0000167c          	L13_LF2:
  668  0000167c  0bffffc0	j	L10_LF2
  669  00001680  54000000	nop; delay slot nop
  670  00001684          	L11_LF2:
  671  00001684  8fc1fff4	lw	r1,-12(r30)
  672  00001688  08000004	j	L9_LF2
  673  0000168c  54000000	nop; delay slot nop
  674  00001690          	L9_LF2:
  675  00001690  8fa20000	lw	r2,0(r29)
  676  00001694  8fa30004	lw	r3,4(r29)
  677  00001698  8fdffff8	lw	r31,-8(r30)
  678  0000169c  001ee820	add	r29,r0,r30
  679  000016a0  8fdefffc	lw	r30,-4(r30)
  680  000016a4  4be00000	jr	r31
  681  000016a8  54000000	nop
  682  000016ac          	.endproc _dstrcpy
  683  000016ac          	.align 2
  684  000016ac          	.proc _dstrncpy
  685  000016ac          	.global _dstrncpy
  686  000016ac          	_dstrncpy:
  687                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  688  000016ac  afbefffc	sw	-4(r29),r30; push fp
  689  000016b0  001df020	add	r30,r0,r29; fp = sp
  690  000016b4  afbffff8	sw	-8(r29),r31; push ret addr
  691  000016b8  2fbd0018	subui	r29,r29,#24; alloc local storage
  692  000016bc  afa20000	sw	0(r29),r2
  693  000016c0  afa30004	sw	4(r29),r3
  694  000016c4  8fc10000	lw	r1,(r30)
  695  000016c8  afc1fff4	sw	-12(r30),r1
  696  000016cc          	L15_LF2:
  697  000016cc  8fc10008	lw	r1,8(r30)
  698  000016d0  2022ffff	addi	r2,r1,#-1
  699  000016d4  afc20008	sw	8(r30),r2
  700  000016d8  70210000	slei	r1,r1,#0
  701  000016dc  1020000c	beqz	r1,L18_LF2
  702  000016e0  54000000	nop; delay slot nop
  703  000016e4  08000048	j	L16_LF2
  704  000016e8  54000000	nop; delay slot nop
  705  000016ec          	L18_LF2:
  706  000016ec  8fc10000	lw	r1,(r30)
  707  000016f0  20220001	addi	r2,r1,#1
  708  000016f4  afc20000	sw	(r30),r2
  709  000016f8  8fc20004	lw	r2,4(r30)
  710  000016fc  20430001	addi	r3,r2,#1
  711  00001700  afc30004	sw	4(r30),r3
  712  00001704  80420000	lb	r2,(r2)
  713  00001708  a0220000	sb	(r1),r2
  714  0000170c  a3c2fff3	sb	-13(r30),r2
  715  00001710          	L17_LF2:
  716  00001710  93c1fff3	lbu	r1,-13(r30)
  717  00001714  64220000	snei	r2,r1,#0
  718  00001718  1440000c	bnez	r2,L19_LF2
  719  0000171c  54000000	nop; delay slot nop
  720  00001720  0800000c	j	L16_LF2
  721  00001724  54000000	nop; delay slot nop
  722  00001728          	L19_LF2:
  723  00001728  0bffffa0	j	L15_LF2
  724  0000172c  54000000	nop; delay slot nop
  725  00001730          	L16_LF2:
  726  00001730  8fc1fff4	lw	r1,-12(r30)
  727  00001734  08000004	j	L14_LF2
  728  00001738  54000000	nop; delay slot nop
  729  0000173c          	L14_LF2:
  730  0000173c  8fa20000	lw	r2,0(r29)
  731  00001740  8fa30004	lw	r3,4(r29)
  732  00001744  8fdffff8	lw	r31,-8(r30)
  733  00001748  001ee820	add	r29,r0,r30
  734  0000174c  8fdefffc	lw	r30,-4(r30)
  735  00001750  4be00000	jr	r31
  736  00001754  54000000	nop
  737  00001758          	.endproc _dstrncpy
  738  00001758          	.align 2
  739  00001758          	.proc _dstrcat
  740  00001758          	.global _dstrcat
  741  00001758          	_dstrcat:
  742                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  743  00001758  afbefffc	sw	-4(r29),r30; push fp
  744  0000175c  001df020	add	r30,r0,r29; fp = sp
  745  00001760  afbffff8	sw	-8(r29),r31; push ret addr
  746  00001764  2fbd0018	subui	r29,r29,#24; alloc local storage
  747  00001768  afa20000	sw	0(r29),r2
  748  0000176c  8fc10000	lw	r1,(r30)
  749  00001770  afc1fff4	sw	-12(r30),r1
  750  00001774          	L21_LF2:
  751  00001774  8fc10000	lw	r1,(r30)
  752  00001778  90220000	lbu	r2,(r1)
  753  0000177c  64410000	snei	r1,r2,#0
  754  00001780  1420000c	bnez	r1,L23_LF2
  755  00001784  54000000	nop; delay slot nop
  756  00001788  0800001c	j	L22_LF2
  757  0000178c  54000000	nop; delay slot nop
  758  00001790          	L23_LF2:
  759  00001790  8fc20000	lw	r2,(r30)
  760  00001794  20410001	addi	r1,r2,#1
  761  00001798  00011020	add	r2,r0,r1
  762  0000179c  afc20000	sw	(r30),r2
  763  000017a0  0bffffd0	j	L21_LF2
  764  000017a4  54000000	nop; delay slot nop
  765  000017a8          	L22_LF2:
  766  000017a8  23bdfff8	addi	r29,r29,#-8
  767  000017ac  001d0820	add	r1,r0,r29
  768  000017b0  8fc20000	lw	r2,(r30)
  769  000017b4  ac220000	sw	(r1),r2
  770  000017b8  8fc20004	lw	r2,4(r30)
  771  000017bc  ac220004	sw	4(r1),r2
  772  000017c0  0ffffe5c	jal	_dstrcpy
  773  000017c4  54000000	nop; delay slot nop
  774  000017c8  23bd0008	addi	r29,r29,#8
  775  000017cc  8fc1fff4	lw	r1,-12(r30)
  776  000017d0  08000004	j	L20_LF2
  777  000017d4  54000000	nop; delay slot nop
  778  000017d8          	L20_LF2:
  779  000017d8  8fa20000	lw	r2,0(r29)
  780  000017dc  8fdffff8	lw	r31,-8(r30)
  781  000017e0  001ee820	add	r29,r0,r30
  782  000017e4  8fdefffc	lw	r30,-4(r30)
  783  000017e8  4be00000	jr	r31
  784  000017ec  54000000	nop
  785  000017f0          	.endproc _dstrcat
  786  000017f0          	.align 2
  787  000017f0          	.proc _dstrncmp
  788  000017f0          	.global _dstrncmp
  789  000017f0          	_dstrncmp:
  790                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  791  000017f0  afbefffc	sw	-4(r29),r30; push fp
  792  000017f4  001df020	add	r30,r0,r29; fp = sp
  793  000017f8  afbffff8	sw	-8(r29),r31; push ret addr
  794  000017fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  795  00001800  afa20000	sw	0(r29),r2
  796  00001804  afa30004	sw	4(r29),r3
  797  00001808  54000000	nop
  798  0000180c  20010000	addi	r1,r0,#0
  799  00001810  afc1fff4	sw	-12(r30),r1
  800  00001814          	L25_LF2:
  801  00001814  8fc1fff4	lw	r1,-12(r30)
  802  00001818  8fc20008	lw	r2,8(r30)
  803  0000181c  0022082a	slt	r1,r1,r2
  804  00001820  1420000c	bnez	r1,L28_LF2
  805  00001824  54000000	nop; delay slot nop
  806  00001828  08000088	j	L26_LF2
  807  0000182c  54000000	nop; delay slot nop
  808  00001830          	L28_LF2:
  809  00001830  8fc10004	lw	r1,4(r30)
  810  00001834  90220000	lbu	r2,(r1)
  811  00001838  64410000	snei	r1,r2,#0
  812  0000183c  14200018	bnez	r1,L29_LF2
  813  00001840  54000000	nop; delay slot nop
  814  00001844  20010000	addi	r1,r0,#0
  815  00001848  080000d8	j	L24_LF2
  816  0000184c  54000000	nop; delay slot nop
  817  00001850  08000028	j	L30_LF2
  818  00001854  54000000	nop; delay slot nop
  819  00001858          	L29_LF2:
  820  00001858  8fc10000	lw	r1,(r30)
  821  0000185c  8fc20004	lw	r2,4(r30)
  822  00001860  90210000	lbu	r1,(r1)
  823  00001864  90420000	lbu	r2,(r2)
  824  00001868  00220829	sne	r1,r1,r2
  825  0000186c  1020000c	beqz	r1,L30_LF2
  826  00001870  54000000	nop; delay slot nop
  827  00001874  0800003c	j	L26_LF2
  828  00001878  54000000	nop; delay slot nop
  829  0000187c          	L31_LF2:
  830  0000187c          	L30_LF2:
  831  0000187c  8fc20000	lw	r2,(r30)
  832  00001880  20410001	addi	r1,r2,#1
  833  00001884  00011020	add	r2,r0,r1
  834  00001888  afc20000	sw	(r30),r2
  835  0000188c  8fc20004	lw	r2,4(r30)
  836  00001890  20410001	addi	r1,r2,#1
  837  00001894  00011020	add	r2,r0,r1
  838  00001898  afc20004	sw	4(r30),r2
  839  0000189c          	L27_LF2:
  840  0000189c  8fc2fff4	lw	r2,-12(r30)
  841  000018a0  20410001	addi	r1,r2,#1
  842  000018a4  00011020	add	r2,r0,r1
  843  000018a8  afc2fff4	sw	-12(r30),r2
  844  000018ac  0bffff64	j	L25_LF2
  845  000018b0  54000000	nop; delay slot nop
  846  000018b4          	L26_LF2:
  847  000018b4  8fc1fff4	lw	r1,-12(r30)
  848  000018b8  8fc20008	lw	r2,8(r30)
  849  000018bc  00220828	seq	r1,r1,r2
  850  000018c0  10200018	beqz	r1,L32_LF2
  851  000018c4  54000000	nop; delay slot nop
  852  000018c8  20010000	addi	r1,r0,#0
  853  000018cc  08000054	j	L24_LF2
  854  000018d0  54000000	nop; delay slot nop
  855  000018d4  0800004c	j	L33_LF2
  856  000018d8  54000000	nop; delay slot nop
  857  000018dc          	L32_LF2:
  858  000018dc  8fc20000	lw	r2,(r30)
  859  000018e0  90410000	lbu	r1,(r2)
  860  000018e4  8fc20004	lw	r2,4(r30)
  861  000018e8  90430000	lbu	r3,(r2)
  862  000018ec  00230822	sub	r1,r1,r3
  863  000018f0  74220000	sgei	r2,r1,#0
  864  000018f4  10400020	beqz	r2,L34_LF2
  865  000018f8  54000000	nop; delay slot nop
  866  000018fc  8fc10000	lw	r1,(r30)
  867  00001900  8fc20004	lw	r2,4(r30)
  868  00001904  90210000	lbu	r1,(r1)
  869  00001908  90420000	lbu	r2,(r2)
  870  0000190c  00220829	sne	r1,r1,r2
  871  00001910  08000008	j	L35_LF2
  872  00001914  54000000	nop; delay slot nop
  873  00001918          	L34_LF2:
  874  00001918  2001ffff	addi	r1,r0,#-1
  875  0000191c          	L35_LF2:
  876  0000191c  08000004	j	L24_LF2
  877  00001920  54000000	nop; delay slot nop
  878  00001924          	L33_LF2:
  879  00001924          	L24_LF2:
  880  00001924  8fa20000	lw	r2,0(r29)
  881  00001928  8fa30004	lw	r3,4(r29)
  882  0000192c  8fdffff8	lw	r31,-8(r30)
  883  00001930  001ee820	add	r29,r0,r30
  884  00001934  8fdefffc	lw	r30,-4(r30)
  885  00001938  4be00000	jr	r31
  886  0000193c  54000000	nop
  887  00001940          	.endproc _dstrncmp
  888  00001940          	.align 2
  889  00001940          	.proc _dstrlen
  890  00001940          	.global _dstrlen
  891  00001940          	_dstrlen:
  892                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  893  00001940  afbefffc	sw	-4(r29),r30; push fp
  894  00001944  001df020	add	r30,r0,r29; fp = sp
  895  00001948  afbffff8	sw	-8(r29),r31; push ret addr
  896  0000194c  2fbd0018	subui	r29,r29,#24; alloc local storage
  897  00001950  afa20000	sw	0(r29),r2
  898  00001954  20010000	addi	r1,r0,#0
  899  00001958  afc1fff4	sw	-12(r30),r1
  900  0000195c          	L37_LF2:
  901  0000195c  8fc10000	lw	r1,(r30)
  902  00001960  20220001	addi	r2,r1,#1
  903  00001964  afc20000	sw	(r30),r2
  904  00001968  90210000	lbu	r1,(r1)
  905  0000196c  64220000	snei	r2,r1,#0
  906  00001970  1440000c	bnez	r2,L39_LF2
  907  00001974  54000000	nop; delay slot nop
  908  00001978  0800001c	j	L38_LF2
  909  0000197c  54000000	nop; delay slot nop
  910  00001980          	L39_LF2:
  911  00001980  8fc2fff4	lw	r2,-12(r30)
  912  00001984  20410001	addi	r1,r2,#1
  913  00001988  00011020	add	r2,r0,r1
  914  0000198c  afc2fff4	sw	-12(r30),r2
  915  00001990  0bffffc8	j	L37_LF2
  916  00001994  54000000	nop; delay slot nop
  917  00001998          	L38_LF2:
  918  00001998  8fc1fff4	lw	r1,-12(r30)
  919  0000199c  08000004	j	L36_LF2
  920  000019a0  54000000	nop; delay slot nop
  921  000019a4          	L36_LF2:
  922  000019a4  8fa20000	lw	r2,0(r29)
  923  000019a8  8fdffff8	lw	r31,-8(r30)
  924  000019ac  001ee820	add	r29,r0,r30
  925  000019b0  8fdefffc	lw	r30,-4(r30)
  926  000019b4  4be00000	jr	r31
  927  000019b8  54000000	nop
  928  000019bc          	.endproc _dstrlen
  929  000019bc          	.align 2
  930  000019bc          	.proc _dstrstr
  931  000019bc          	.global _dstrstr
  932  000019bc          	_dstrstr:
  933                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  934  000019bc  afbefffc	sw	-4(r29),r30; push fp
  935  000019c0  001df020	add	r30,r0,r29; fp = sp
  936  000019c4  afbffff8	sw	-8(r29),r31; push ret addr
  937  000019c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  938  000019cc  afa20000	sw	0(r29),r2
  939  000019d0  23bdfff8	addi	r29,r29,#-8
  940  000019d4  001d0820	add	r1,r0,r29
  941  000019d8  8fc20004	lw	r2,4(r30)
  942  000019dc  ac220000	sw	(r1),r2
  943  000019e0  0fffff5c	jal	_dstrlen
  944  000019e4  54000000	nop; delay slot nop
  945  000019e8  23bd0008	addi	r29,r29,#8
  946  000019ec  afc1fff4	sw	-12(r30),r1
  947  000019f0          	L41_LF2:
  948  000019f0  8fc10000	lw	r1,(r30)
  949  000019f4  90220000	lbu	r2,(r1)
  950  000019f8  64410000	snei	r1,r2,#0
  951  000019fc  1420000c	bnez	r1,L43_LF2
  952  00001a00  54000000	nop; delay slot nop
  953  00001a04  08000060	j	L42_LF2
  954  00001a08  54000000	nop; delay slot nop
  955  00001a0c          	L43_LF2:
  956  00001a0c  23bdfff0	addi	r29,r29,#-16
  957  00001a10  001d0820	add	r1,r0,r29
  958  00001a14  8fc20000	lw	r2,(r30)
  959  00001a18  ac220000	sw	(r1),r2
  960  00001a1c  8fc20004	lw	r2,4(r30)
  961  00001a20  ac220004	sw	4(r1),r2
  962  00001a24  8fc2fff4	lw	r2,-12(r30)
  963  00001a28  ac220008	sw	8(r1),r2
  964  00001a2c  0ffffdc0	jal	_dstrncmp
  965  00001a30  54000000	nop; delay slot nop
  966  00001a34  23bd0010	addi	r29,r29,#16
  967  00001a38  64220000	snei	r2,r1,#0
  968  00001a3c  14400010	bnez	r2,L44_LF2
  969  00001a40  54000000	nop; delay slot nop
  970  00001a44  8fc10000	lw	r1,(r30)
  971  00001a48  08000028	j	L40_LF2
  972  00001a4c  54000000	nop; delay slot nop
  973  00001a50          	L44_LF2:
  974  00001a50  8fc20000	lw	r2,(r30)
  975  00001a54  20410001	addi	r1,r2,#1
  976  00001a58  00011020	add	r2,r0,r1
  977  00001a5c  afc20000	sw	(r30),r2
  978  00001a60  0bffff8c	j	L41_LF2
  979  00001a64  54000000	nop; delay slot nop
  980  00001a68          	L42_LF2:
  981  00001a68  20010000	addi	r1,r0,#0
  982  00001a6c  08000004	j	L40_LF2
  983  00001a70  54000000	nop; delay slot nop
  984  00001a74          	L40_LF2:
  985  00001a74  8fa20000	lw	r2,0(r29)
  986  00001a78  8fdffff8	lw	r31,-8(r30)
  987  00001a7c  001ee820	add	r29,r0,r30
  988  00001a80  8fdefffc	lw	r30,-4(r30)
  989  00001a84  4be00000	jr	r31
  990  00001a88  54000000	nop
  991  00001a8c          	.endproc _dstrstr
  992  00001a8c          	.align 2
  993  00001a8c          	.proc _dmindex
  994  00001a8c          	.global _dmindex
  995  00001a8c          	_dmindex:
  996                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  997  00001a8c  afbefffc	sw	-4(r29),r30; push fp
  998  00001a90  001df020	add	r30,r0,r29; fp = sp
  999  00001a94  afbffff8	sw	-8(r29),r31; push ret addr
 1000  00001a98  2fbd0018	subui	r29,r29,#24; alloc local storage
 1001  00001a9c  afa20000	sw	0(r29),r2
 1002  00001aa0  54000000	nop
 1003  00001aa4          	L46_LF2:
 1004  00001aa4  8fc10000	lw	r1,(r30)
 1005  00001aa8  90220000	lbu	r2,(r1)
 1006  00001aac  64410000	snei	r1,r2,#0
 1007  00001ab0  1420000c	bnez	r1,L48_LF2
 1008  00001ab4  54000000	nop; delay slot nop
 1009  00001ab8  08000070	j	L47_LF2
 1010  00001abc  54000000	nop; delay slot nop
 1011  00001ac0          	L48_LF2:
 1012  00001ac0  8fc10004	lw	r1,4(r30)
 1013  00001ac4  afc1fff4	sw	-12(r30),r1
 1014  00001ac8          	L49_LF2:
 1015  00001ac8  8fc1fff4	lw	r1,-12(r30)
 1016  00001acc  90220000	lbu	r2,(r1)
 1017  00001ad0  64410000	snei	r1,r2,#0
 1018  00001ad4  1420000c	bnez	r1,L52_LF2
 1019  00001ad8  54000000	nop; delay slot nop
 1020  00001adc  08000044	j	L50_LF2
 1021  00001ae0  54000000	nop; delay slot nop
 1022  00001ae4          	L52_LF2:
 1023  00001ae4  8fc10000	lw	r1,(r30)
 1024  00001ae8  8fc2fff4	lw	r2,-12(r30)
 1025  00001aec  90210000	lbu	r1,(r1)
 1026  00001af0  90420000	lbu	r2,(r2)
 1027  00001af4  00220828	seq	r1,r1,r2
 1028  00001af8  10200010	beqz	r1,L51_LF2
 1029  00001afc  54000000	nop; delay slot nop
 1030  00001b00  8fc10000	lw	r1,(r30)
 1031  00001b04  08000030	j	L45_LF2
 1032  00001b08  54000000	nop; delay slot nop
 1033  00001b0c          	L53_LF2:
 1034  00001b0c          	L51_LF2:
 1035  00001b0c  8fc2fff4	lw	r2,-12(r30)
 1036  00001b10  20410001	addi	r1,r2,#1
 1037  00001b14  00011020	add	r2,r0,r1
 1038  00001b18  afc2fff4	sw	-12(r30),r2
 1039  00001b1c  0bffffa8	j	L49_LF2
 1040  00001b20  54000000	nop; delay slot nop
 1041  00001b24          	L50_LF2:
 1042  00001b24  0bffff7c	j	L46_LF2
 1043  00001b28  54000000	nop; delay slot nop
 1044  00001b2c          	L47_LF2:
 1045  00001b2c  20010000	addi	r1,r0,#0
 1046  00001b30  08000004	j	L45_LF2
 1047  00001b34  54000000	nop; delay slot nop
 1048  00001b38          	L45_LF2:
 1049  00001b38  8fa20000	lw	r2,0(r29)
 1050  00001b3c  8fdffff8	lw	r31,-8(r30)
 1051  00001b40  001ee820	add	r29,r0,r30
 1052  00001b44  8fdefffc	lw	r30,-4(r30)
 1053  00001b48  4be00000	jr	r31
 1054  00001b4c  54000000	nop
 1055  00001b50          	.endproc _dmindex
 1056  00001b50          	.align 2
 1057  00001b50          	.proc _dindex
 1058  00001b50          	.global _dindex
 1059  00001b50          	_dindex:
 1060                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1061  00001b50  afbefffc	sw	-4(r29),r30; push fp
 1062  00001b54  001df020	add	r30,r0,r29; fp = sp
 1063  00001b58  afbffff8	sw	-8(r29),r31; push ret addr
 1064  00001b5c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1065  00001b60  afa20000	sw	0(r29),r2
 1066  00001b64  54000000	nop
 1067  00001b68          	L55_LF2:
 1068  00001b68  8fc10000	lw	r1,(r30)
 1069  00001b6c  90220000	lbu	r2,(r1)
 1070  00001b70  64410000	snei	r1,r2,#0
 1071  00001b74  1420000c	bnez	r1,L57_LF2
 1072  00001b78  54000000	nop; delay slot nop
 1073  00001b7c  08000040	j	L56_LF2
 1074  00001b80  54000000	nop; delay slot nop
 1075  00001b84          	L57_LF2:
 1076  00001b84  8fc10000	lw	r1,(r30)
 1077  00001b88  90220000	lbu	r2,(r1)
 1078  00001b8c  8fc10004	lw	r1,4(r30)
 1079  00001b90  00411028	seq	r2,r2,r1
 1080  00001b94  10400010	beqz	r2,L58_LF2
 1081  00001b98  54000000	nop; delay slot nop
 1082  00001b9c  8fc10000	lw	r1,(r30)
 1083  00001ba0  08000028	j	L54_LF2
 1084  00001ba4  54000000	nop; delay slot nop
 1085  00001ba8          	L58_LF2:
 1086  00001ba8  8fc20000	lw	r2,(r30)
 1087  00001bac  20410001	addi	r1,r2,#1
 1088  00001bb0  00011020	add	r2,r0,r1
 1089  00001bb4  afc20000	sw	(r30),r2
 1090  00001bb8  0bffffac	j	L55_LF2
 1091  00001bbc  54000000	nop; delay slot nop
 1092  00001bc0          	L56_LF2:
 1093  00001bc0  20010000	addi	r1,r0,#0
 1094  00001bc4  08000004	j	L54_LF2
 1095  00001bc8  54000000	nop; delay slot nop
 1096  00001bcc          	L54_LF2:
 1097  00001bcc  8fa20000	lw	r2,0(r29)
 1098  00001bd0  8fdffff8	lw	r31,-8(r30)
 1099  00001bd4  001ee820	add	r29,r0,r30
 1100  00001bd8  8fdefffc	lw	r30,-4(r30)
 1101  00001bdc  4be00000	jr	r31
 1102  00001be0  54000000	nop
 1103  00001be4          	.endproc _dindex
 1104  00001be4          	.align 2
 1105  00001be4          	.proc _ditoa
 1106  00001be4          	.global _ditoa
 1107  00001be4          	_ditoa:
 1108                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1109  00001be4  afbefffc	sw	-4(r29),r30; push fp
 1110  00001be8  001df020	add	r30,r0,r29; fp = sp
 1111  00001bec  afbffff8	sw	-8(r29),r31; push ret addr
 1112  00001bf0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1113  00001bf4  afa20000	sw	0(r29),r2
 1114  00001bf8  afa30004	sw	4(r29),r3
 1115  00001bfc  8fc10000	lw	r1,(r30)
 1116  00001c00  68220000	slti	r2,r1,#0
 1117  00001c04  1040002c	beqz	r2,L60_LF2
 1118  00001c08  54000000	nop; delay slot nop
 1119  00001c0c  8fc10004	lw	r1,4(r30)
 1120  00001c10  20220001	addi	r2,r1,#1
 1121  00001c14  afc20004	sw	4(r30),r2
 1122  00001c18  2002002d	addi	r2,r0,(#0x2d)&0xff
 1123  00001c1c  a0220000	sb	(r1),r2
 1124  00001c20  8fc10000	lw	r1,(r30)
 1125  00001c24  00011022	sub	r2,r0,r1
 1126  00001c28  afc20000	sw	(r30),r2
 1127  00001c2c  08000118	j	L61_LF2
 1128  00001c30  54000000	nop; delay slot nop
 1129  00001c34          	L60_LF2:
 1130  00001c34  8fc10000	lw	r1,(r30)
 1131  00001c38  64220000	snei	r2,r1,#0
 1132  00001c3c  14400020	bnez	r2,L62_LF2
 1133  00001c40  54000000	nop; delay slot nop
 1134  00001c44  8fc10004	lw	r1,4(r30)
 1135  00001c48  20220001	addi	r2,r1,#1
 1136  00001c4c  afc20004	sw	4(r30),r2
 1137  00001c50  20020030	addi	r2,r0,(#0x30)&0xff
 1138  00001c54  a0220000	sb	(r1),r2
 1139  00001c58  080000ec	j	L61_LF2
 1140  00001c5c  54000000	nop; delay slot nop
 1141  00001c60          	L62_LF2:
 1142  00001c60  20010001	addi	r1,r0,#1
 1143  00001c64  afc1fff4	sw	-12(r30),r1
 1144  00001c68          	L64_LF2:
 1145  00001c68  8fc1fff4	lw	r1,-12(r30)
 1146  00001c6c  8fc20000	lw	r2,(r30)
 1147  00001c70  0022082c	sle	r1,r1,r2
 1148  00001c74  1420000c	bnez	r1,L66_LF2
 1149  00001c78  54000000	nop; delay slot nop
 1150  00001c7c  08000024	j	L65_LF2
 1151  00001c80  54000000	nop; delay slot nop
 1152  00001c84          	L67_LF2:
 1153  00001c84          	L66_LF2:
 1154  00001c84  8fc1fff4	lw	r1,-12(r30)
 1155  00001c88  00011820	add	r3,r0,r1
 1156  00001c8c  50620002	slli	r2,r3,#0x2
 1157  00001c90  00411020	add	r2,r2,r1
 1158  00001c94  50410001	slli	r1,r2,#0x1
 1159  00001c98  afc1fff4	sw	-12(r30),r1
 1160  00001c9c  0bffffc8	j	L64_LF2
 1161  00001ca0  54000000	nop; delay slot nop
 1162  00001ca4          	L65_LF2:
 1163  00001ca4  54000000	nop
 1164  00001ca8          	L68_LF2:
 1165  00001ca8  8fc1fff4	lw	r1,-12(r30)
 1166  00001cac  2002000a	addi	r2,r0,#10
 1167  00001cb0  00200035	movi2fp	f0,r1
 1168  00001cb4  00400835	movi2fp	f1,r2
 1169  00001cb8  0401000f	div	f0,f0,f1
 1170  00001cbc  00000834	movfp2i	r1,f0
 1171  00001cc0  afc1fff4	sw	-12(r30),r1
 1172  00001cc4  8fc10004	lw	r1,4(r30)
 1173  00001cc8  20220001	addi	r2,r1,#1
 1174  00001ccc  afc20004	sw	4(r30),r2
 1175  00001cd0  8fc20000	lw	r2,(r30)
 1176  00001cd4  8fc3fff4	lw	r3,-12(r30)
 1177  00001cd8  00400035	movi2fp	f0,r2
 1178  00001cdc  00600835	movi2fp	f1,r3
 1179  00001ce0  0401000f	div	f0,f0,f1
 1180  00001ce4  00001034	movfp2i	r2,f0
 1181  00001ce8  00021820	add	r3,r0,r2
 1182  00001cec  20620030	addi	r2,r3,#48
 1183  00001cf0  a0220000	sb	(r1),r2
 1184  00001cf4  8fc10000	lw	r1,(r30)
 1185  00001cf8  8fc3fff4	lw	r3,-12(r30)
 1186  00001cfc  00200035	movi2fp	f0,r1
 1187  00001d00  00600835	movi2fp	f1,r3
 1188  00001d04  0401000f	div	f0,f0,f1
 1189  00001d08  00001034	movfp2i	r2,f0
 1190  00001d0c  8fc3fff4	lw	r3,-12(r30)
 1191  00001d10  00400035	movi2fp	f0,r2
 1192  00001d14  00600835	movi2fp	f1,r3
 1193  00001d18  0401000e	mult	f0,f0,f1
 1194  00001d1c  00001034	movfp2i	r2,f0
 1195  00001d20  00220822	sub	r1,r1,r2
 1196  00001d24  afc10000	sw	(r30),r1
 1197  00001d28          	L70_LF2:
 1198  00001d28  8fc1fff4	lw	r1,-12(r30)
 1199  00001d2c  6c220001	sgti	r2,r1,#1
 1200  00001d30  1440000c	bnez	r2,L71_LF2
 1201  00001d34  54000000	nop; delay slot nop
 1202  00001d38  0800000c	j	L61_LF2
 1203  00001d3c  54000000	nop; delay slot nop
 1204  00001d40          	L71_LF2:
 1205  00001d40  0bffff64	j	L68_LF2
 1206  00001d44  54000000	nop; delay slot nop
 1207  00001d48          	L69_LF2:
 1208  00001d48          	L63_LF2:
 1209  00001d48          	L61_LF2:
 1210  00001d48  8fc10004	lw	r1,4(r30)
 1211  00001d4c  20020000	addi	r2,r0,(#0x0)&0xff
 1212  00001d50  a0220000	sb	(r1),r2
 1213  00001d54          	L59_LF2:
 1214  00001d54  8fa20000	lw	r2,0(r29)
 1215  00001d58  8fa30004	lw	r3,4(r29)
 1216  00001d5c  8fdffff8	lw	r31,-8(r30)
 1217  00001d60  001ee820	add	r29,r0,r30
 1218  00001d64  8fdefffc	lw	r30,-4(r30)
 1219  00001d68  4be00000	jr	r31
 1220  00001d6c  54000000	nop
 1221  00001d70          	.endproc _ditoa
 1222  00001d70          	.align 2
 1223  00001d70          	.proc _dstrtol
 1224  00001d70          	.global _dstrtol
 1225  00001d70          	_dstrtol:
 1226                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1227  00001d70  afbefffc	sw	-4(r29),r30; push fp
 1228  00001d74  001df020	add	r30,r0,r29; fp = sp
 1229  00001d78  afbffff8	sw	-8(r29),r31; push ret addr
 1230  00001d7c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1231  00001d80  afa20000	sw	0(r29),r2
 1232  00001d84  20010000	addi	r1,r0,#0
 1233  00001d88  afc1fff4	sw	-12(r30),r1
 1234  00001d8c          	L73_LF2:
 1235  00001d8c  8fc10000	lw	r1,(r30)
 1236  00001d90  90220000	lbu	r2,(r1)
 1237  00001d94  60410020	seqi	r1,r2,#32
 1238  00001d98  14200034	bnez	r1,L75_LF2
 1239  00001d9c  54000000	nop; delay slot nop
 1240  00001da0  8fc10000	lw	r1,(r30)
 1241  00001da4  90220000	lbu	r2,(r1)
 1242  00001da8  60410009	seqi	r1,r2,#9
 1243  00001dac  14200020	bnez	r1,L75_LF2
 1244  00001db0  54000000	nop; delay slot nop
 1245  00001db4  8fc10000	lw	r1,(r30)
 1246  00001db8  90220000	lbu	r2,(r1)
 1247  00001dbc  6041000a	seqi	r1,r2,#10
 1248  00001dc0  1420000c	bnez	r1,L75_LF2
 1249  00001dc4  54000000	nop; delay slot nop
 1250  00001dc8  0800001c	j	L74_LF2
 1251  00001dcc  54000000	nop; delay slot nop
 1252  00001dd0          	L75_LF2:
 1253  00001dd0  8fc20000	lw	r2,(r30)
 1254  00001dd4  20410001	addi	r1,r2,#1
 1255  00001dd8  00011020	add	r2,r0,r1
 1256  00001ddc  afc20000	sw	(r30),r2
 1257  00001de0  0bffffa8	j	L73_LF2
 1258  00001de4  54000000	nop; delay slot nop
 1259  00001de8          	L74_LF2:
 1260  00001de8  8fc10004	lw	r1,4(r30)
 1261  00001dec  64220000	snei	r2,r1,#0
 1262  00001df0  10400010	beqz	r2,L76_LF2
 1263  00001df4  54000000	nop; delay slot nop
 1264  00001df8  8fc10004	lw	r1,4(r30)
 1265  00001dfc  8fc20000	lw	r2,(r30)
 1266  00001e00  ac220000	sw	(r1),r2
 1267  00001e04          	L76_LF2:
 1268  00001e04  8fc10000	lw	r1,(r30)
 1269  00001e08  90220000	lbu	r2,(r1)
 1270  00001e0c  64410000	snei	r1,r2,#0
 1271  00001e10  14200010	bnez	r1,L77_LF2
 1272  00001e14  54000000	nop; delay slot nop
 1273  00001e18  8fc1fff4	lw	r1,-12(r30)
 1274  00001e1c  08000294	j	L72_LF2
 1275  00001e20  54000000	nop; delay slot nop
 1276  00001e24          	L77_LF2:
 1277  00001e24  8fc10000	lw	r1,(r30)
 1278  00001e28  90220000	lbu	r2,(r1)
 1279  00001e2c  6041002d	seqi	r1,r2,#45
 1280  00001e30  10200024	beqz	r1,L78_LF2
 1281  00001e34  54000000	nop; delay slot nop
 1282  00001e38  2001ffff	addi	r1,r0,#-1
 1283  00001e3c  afc1ffec	sw	-20(r30),r1
 1284  00001e40  8fc20000	lw	r2,(r30)
 1285  00001e44  20410001	addi	r1,r2,#1
 1286  00001e48  00011020	add	r2,r0,r1
 1287  00001e4c  afc20000	sw	(r30),r2
 1288  00001e50  0800000c	j	L79_LF2
 1289  00001e54  54000000	nop; delay slot nop
 1290  00001e58          	L78_LF2:
 1291  00001e58  20010001	addi	r1,r0,#1
 1292  00001e5c  afc1ffec	sw	-20(r30),r1
 1293  00001e60          	L79_LF2:
 1294  00001e60  8fc10008	lw	r1,8(r30)
 1295  00001e64  64220000	snei	r2,r1,#0
 1296  00001e68  14400090	bnez	r2,L80_LF2
 1297  00001e6c  54000000	nop; delay slot nop
 1298  00001e70  8fc10000	lw	r1,(r30)
 1299  00001e74  90220000	lbu	r2,(r1)
 1300  00001e78  60410030	seqi	r1,r2,#48
 1301  00001e7c  10200074	beqz	r1,L81_LF2
 1302  00001e80  54000000	nop; delay slot nop
 1303  00001e84  8fc20000	lw	r2,(r30)
 1304  00001e88  20410001	addi	r1,r2,#1
 1305  00001e8c  00011020	add	r2,r0,r1
 1306  00001e90  afc20000	sw	(r30),r2
 1307  00001e94  8fc10000	lw	r1,(r30)
 1308  00001e98  90220000	lbu	r2,(r1)
 1309  00001e9c  60410078	seqi	r1,r2,#120
 1310  00001ea0  14200020	bnez	r1,L83_LF2
 1311  00001ea4  54000000	nop; delay slot nop
 1312  00001ea8  8fc10000	lw	r1,(r30)
 1313  00001eac  90220000	lbu	r2,(r1)
 1314  00001eb0  60410058	seqi	r1,r2,#88
 1315  00001eb4  1420000c	bnez	r1,L83_LF2
 1316  00001eb8  54000000	nop; delay slot nop
 1317  00001ebc  08000024	j	L82_LF2
 1318  00001ec0  54000000	nop; delay slot nop
 1319  00001ec4          	L83_LF2:
 1320  00001ec4  20010010	addi	r1,r0,#16
 1321  00001ec8  afc10008	sw	8(r30),r1
 1322  00001ecc  8fc20000	lw	r2,(r30)
 1323  00001ed0  20410001	addi	r1,r2,#1
 1324  00001ed4  00011020	add	r2,r0,r1
 1325  00001ed8  afc20000	sw	(r30),r2
 1326  00001edc  0800000c	j	L84_LF2
 1327  00001ee0  54000000	nop; delay slot nop
 1328  00001ee4          	L82_LF2:
 1329  00001ee4  20010008	addi	r1,r0,#8
 1330  00001ee8  afc10008	sw	8(r30),r1
 1331  00001eec          	L84_LF2:
 1332  00001eec  0800000c	j	L80_LF2
 1333  00001ef0  54000000	nop; delay slot nop
 1334  00001ef4          	L81_LF2:
 1335  00001ef4  2001000a	addi	r1,r0,#10
 1336  00001ef8  afc10008	sw	8(r30),r1
 1337  00001efc          	L85_LF2:
 1338  00001efc          	L80_LF2:
 1339  00001efc  8fc10008	lw	r1,8(r30)
 1340  00001f00  70220000	slei	r2,r1,#0
 1341  00001f04  1440001c	bnez	r2,L87_LF2
 1342  00001f08  54000000	nop; delay slot nop
 1343  00001f0c  8fc10008	lw	r1,8(r30)
 1344  00001f10  6c220010	sgti	r2,r1,#16
 1345  00001f14  1440000c	bnez	r2,L87_LF2
 1346  00001f18  54000000	nop; delay slot nop
 1347  00001f1c  08000010	j	L86_LF2
 1348  00001f20  54000000	nop; delay slot nop
 1349  00001f24          	L87_LF2:
 1350  00001f24  8fc1fff4	lw	r1,-12(r30)
 1351  00001f28  08000188	j	L72_LF2
 1352  00001f2c  54000000	nop; delay slot nop
 1353  00001f30          	L86_LF2:
 1354  00001f30  54000000	nop
 1355  00001f34          	L88_LF2:
 1356  00001f34  8fc10000	lw	r1,(r30)
 1357  00001f38  90220000	lbu	r2,(r1)
 1358  00001f3c  6c41002f	sgtui	r1,r2,#47
 1359  00001f40  10200030	beqz	r1,L91_LF2
 1360  00001f44  54000000	nop; delay slot nop
 1361  00001f48  8fc10000	lw	r1,(r30)
 1362  00001f4c  90220000	lbu	r2,(r1)
 1363  00001f50  70410039	sleui	r1,r2,#57
 1364  00001f54  1020001c	beqz	r1,L91_LF2
 1365  00001f58  54000000	nop; delay slot nop
 1366  00001f5c  8fc10000	lw	r1,(r30)
 1367  00001f60  90220000	lbu	r2,(r1)
 1368  00001f64  2041ffd0	addi	r1,r2,#-48
 1369  00001f68  afc1fff0	sw	-16(r30),r1
 1370  00001f6c  0800008c	j	L92_LF2
 1371  00001f70  54000000	nop; delay slot nop
 1372  00001f74          	L91_LF2:
 1373  00001f74  8fc10000	lw	r1,(r30)
 1374  00001f78  90220000	lbu	r2,(r1)
 1375  00001f7c  6c410060	sgtui	r1,r2,#96
 1376  00001f80  10200030	beqz	r1,L93_LF2
 1377  00001f84  54000000	nop; delay slot nop
 1378  00001f88  8fc10000	lw	r1,(r30)
 1379  00001f8c  90220000	lbu	r2,(r1)
 1380  00001f90  7041007a	sleui	r1,r2,#122
 1381  00001f94  1020001c	beqz	r1,L93_LF2
 1382  00001f98  54000000	nop; delay slot nop
 1383  00001f9c  8fc10000	lw	r1,(r30)
 1384  00001fa0  90220000	lbu	r2,(r1)
 1385  00001fa4  2041ffa9	addi	r1,r2,#-87
 1386  00001fa8  afc1fff0	sw	-16(r30),r1
 1387  00001fac  0800004c	j	L92_LF2
 1388  00001fb0  54000000	nop; delay slot nop
 1389  00001fb4          	L93_LF2:
 1390  00001fb4  8fc10000	lw	r1,(r30)
 1391  00001fb8  90220000	lbu	r2,(r1)
 1392  00001fbc  6c410040	sgtui	r1,r2,#64
 1393  00001fc0  10200030	beqz	r1,L95_LF2
 1394  00001fc4  54000000	nop; delay slot nop
 1395  00001fc8  8fc10000	lw	r1,(r30)
 1396  00001fcc  90220000	lbu	r2,(r1)
 1397  00001fd0  7041005a	sleui	r1,r2,#90
 1398  00001fd4  1020001c	beqz	r1,L95_LF2
 1399  00001fd8  54000000	nop; delay slot nop
 1400  00001fdc  8fc10000	lw	r1,(r30)
 1401  00001fe0  90220000	lbu	r2,(r1)
 1402  00001fe4  2041ffc9	addi	r1,r2,#-55
 1403  00001fe8  afc1fff0	sw	-16(r30),r1
 1404  00001fec  0800000c	j	L92_LF2
 1405  00001ff0  54000000	nop; delay slot nop
 1406  00001ff4          	L95_LF2:
 1407  00001ff4  200103e8	addi	r1,r0,#1000
 1408  00001ff8  afc1fff0	sw	-16(r30),r1
 1409  00001ffc          	L96_LF2:
 1410  00001ffc          	L94_LF2:
 1411  00001ffc          	L92_LF2:
 1412  00001ffc  8fc1fff0	lw	r1,-16(r30)
 1413  00002000  8fc20008	lw	r2,8(r30)
 1414  00002004  0022082a	slt	r1,r1,r2
 1415  00002008  10200040	beqz	r1,L90_LF2
 1416  0000200c  54000000	nop; delay slot nop
 1417  00002010  8fc1fff4	lw	r1,-12(r30)
 1418  00002014  8fc20008	lw	r2,8(r30)
 1419  00002018  00200035	movi2fp	f0,r1
 1420  0000201c  00400835	movi2fp	f1,r2
 1421  00002020  0401000e	mult	f0,f0,f1
 1422  00002024  00000834	movfp2i	r1,f0
 1423  00002028  afc1fff4	sw	-12(r30),r1
 1424  0000202c  8fc1fff4	lw	r1,-12(r30)
 1425  00002030  8fc2fff0	lw	r2,-16(r30)
 1426  00002034  00220820	add	r1,r1,r2
 1427  00002038  afc1fff4	sw	-12(r30),r1
 1428  0000203c  8fc20000	lw	r2,(r30)
 1429  00002040  20410001	addi	r1,r2,#1
 1430  00002044  00011020	add	r2,r0,r1
 1431  00002048  afc20000	sw	(r30),r2
 1432  0000204c          	L97_LF2:
 1433  0000204c          	L90_LF2:
 1434  0000204c  8fc1fff0	lw	r1,-16(r30)
 1435  00002050  8fc20008	lw	r2,8(r30)
 1436  00002054  0022082a	slt	r1,r1,r2
 1437  00002058  1420000c	bnez	r1,L98_LF2
 1438  0000205c  54000000	nop; delay slot nop
 1439  00002060  0800000c	j	L89_LF2
 1440  00002064  54000000	nop; delay slot nop
 1441  00002068          	L98_LF2:
 1442  00002068  0bfffec8	j	L88_LF2
 1443  0000206c  54000000	nop; delay slot nop
 1444  00002070          	L89_LF2:
 1445  00002070  8fc10004	lw	r1,4(r30)
 1446  00002074  64220000	snei	r2,r1,#0
 1447  00002078  10400010	beqz	r2,L99_LF2
 1448  0000207c  54000000	nop; delay slot nop
 1449  00002080  8fc10004	lw	r1,4(r30)
 1450  00002084  8fc20000	lw	r2,(r30)
 1451  00002088  ac220000	sw	(r1),r2
 1452  0000208c          	L99_LF2:
 1453  0000208c  8fc1fff4	lw	r1,-12(r30)
 1454  00002090  8fc2ffec	lw	r2,-20(r30)
 1455  00002094  00200035	movi2fp	f0,r1
 1456  00002098  00400835	movi2fp	f1,r2
 1457  0000209c  0401000e	mult	f0,f0,f1
 1458  000020a0  00000834	movfp2i	r1,f0
 1459  000020a4  afc1fff4	sw	-12(r30),r1
 1460  000020a8  8fc1fff4	lw	r1,-12(r30)
 1461  000020ac  08000004	j	L72_LF2
 1462  000020b0  54000000	nop; delay slot nop
 1463  000020b4          	L72_LF2:
 1464  000020b4  8fa20000	lw	r2,0(r29)
 1465  000020b8  8fdffff8	lw	r31,-8(r30)
 1466  000020bc  001ee820	add	r29,r0,r30
 1467  000020c0  8fdefffc	lw	r30,-4(r30)
 1468  000020c4  4be00000	jr	r31
 1469  000020c8  54000000	nop
 1470  000020cc          	.endproc _dstrtol
 1471  000020cc          	.align 2
 1472  000020cc          	.proc _bcopy
 1473  000020cc          	.global _bcopy
 1474  000020cc          	_bcopy:
 1475                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1476  000020cc  afbefffc	sw	-4(r29),r30; push fp
 1477  000020d0  001df020	add	r30,r0,r29; fp = sp
 1478  000020d4  afbffff8	sw	-8(r29),r31; push ret addr
 1479  000020d8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1480  000020dc  afa20000	sw	0(r29),r2
 1481  000020e0  afa30004	sw	4(r29),r3
 1482  000020e4  54000000	nop
 1483  000020e8          	L101_LF2:
 1484  000020e8  8fc10008	lw	r1,8(r30)
 1485  000020ec  2022ffff	addi	r2,r1,#-1
 1486  000020f0  afc20008	sw	8(r30),r2
 1487  000020f4  6c210000	sgti	r1,r1,#0
 1488  000020f8  1420000c	bnez	r1,L103_LF2
 1489  000020fc  54000000	nop; delay slot nop
 1490  00002100  0800002c	j	L102_LF2
 1491  00002104  54000000	nop; delay slot nop
 1492  00002108          	L103_LF2:
 1493  00002108  8fc10004	lw	r1,4(r30)
 1494  0000210c  20220001	addi	r2,r1,#1
 1495  00002110  afc20004	sw	4(r30),r2
 1496  00002114  8fc20000	lw	r2,(r30)
 1497  00002118  20430001	addi	r3,r2,#1
 1498  0000211c  afc30000	sw	(r30),r3
 1499  00002120  80420000	lb	r2,(r2)
 1500  00002124  a0220000	sb	(r1),r2
 1501  00002128  0bffffbc	j	L101_LF2
 1502  0000212c  54000000	nop; delay slot nop
 1503  00002130          	L102_LF2:
 1504  00002130          	L100_LF2:
 1505  00002130  8fa20000	lw	r2,0(r29)
 1506  00002134  8fa30004	lw	r3,4(r29)
 1507  00002138  8fdffff8	lw	r31,-8(r30)
 1508  0000213c  001ee820	add	r29,r0,r30
 1509  00002140  8fdefffc	lw	r30,-4(r30)
 1510  00002144  4be00000	jr	r31
 1511  00002148  54000000	nop
 1512  0000214c          	.endproc _bcopy
 1513  0000214c          	.align 2
 1514  0000214c          	.proc _bzero
 1515  0000214c          	.global _bzero
 1516  0000214c          	_bzero:
 1517                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1518  0000214c  afbefffc	sw	-4(r29),r30; push fp
 1519  00002150  001df020	add	r30,r0,r29; fp = sp
 1520  00002154  afbffff8	sw	-8(r29),r31; push ret addr
 1521  00002158  2fbd0010	subui	r29,r29,#16; alloc local storage
 1522  0000215c  afa20000	sw	0(r29),r2
 1523  00002160  54000000	nop
 1524  00002164          	L105_LF2:
 1525  00002164  8fc10004	lw	r1,4(r30)
 1526  00002168  2022ffff	addi	r2,r1,#-1
 1527  0000216c  afc20004	sw	4(r30),r2
 1528  00002170  6c210000	sgti	r1,r1,#0
 1529  00002174  1420000c	bnez	r1,L107_LF2
 1530  00002178  54000000	nop; delay slot nop
 1531  0000217c  08000020	j	L106_LF2
 1532  00002180  54000000	nop; delay slot nop
 1533  00002184          	L107_LF2:
 1534  00002184  8fc10000	lw	r1,(r30)
 1535  00002188  20220001	addi	r2,r1,#1
 1536  0000218c  afc20000	sw	(r30),r2
 1537  00002190  20020000	addi	r2,r0,(#0x0)&0xff
 1538  00002194  a0220000	sb	(r1),r2
 1539  00002198  0bffffc8	j	L105_LF2
 1540  0000219c  54000000	nop; delay slot nop
 1541  000021a0          	L106_LF2:
 1542  000021a0          	L104_LF2:
 1543  000021a0  8fa20000	lw	r2,0(r29)
 1544  000021a4  8fdffff8	lw	r31,-8(r30)
 1545  000021a8  001ee820	add	r29,r0,r30
 1546  000021ac  8fdefffc	lw	r30,-4(r30)
 1547  000021b0  4be00000	jr	r31
 1548  000021b4  54000000	nop
 1549  000021b8          	.endproc _bzero
 1550  000021b8          	.align 2
 1551  000021b8          	.proc _min
 1552  000021b8          	.global _min
 1553  000021b8          	_min:
 1554                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1555  000021b8  afbefffc	sw	-4(r29),r30; push fp
 1556  000021bc  001df020	add	r30,r0,r29; fp = sp
 1557  000021c0  afbffff8	sw	-8(r29),r31; push ret addr
 1558  000021c4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1559  000021c8  afa20000	sw	0(r29),r2
 1560  000021cc  afa30004	sw	4(r29),r3
 1561  000021d0  8fc10000	lw	r1,(r30)
 1562  000021d4  8fc20004	lw	r2,4(r30)
 1563  000021d8  0022182c	sle	r3,r1,r2
 1564  000021dc  14600008	bnez	r3,L109_LF2
 1565  000021e0  54000000	nop; delay slot nop
 1566  000021e4  8fc10004	lw	r1,4(r30)
 1567  000021e8          	L109_LF2:
 1568  000021e8  08000004	j	L108_LF2
 1569  000021ec  54000000	nop; delay slot nop
 1570  000021f0          	L108_LF2:
 1571  000021f0  8fa20000	lw	r2,0(r29)
 1572  000021f4  8fa30004	lw	r3,4(r29)
 1573  000021f8  8fdffff8	lw	r31,-8(r30)
 1574  000021fc  001ee820	add	r29,r0,r30
 1575  00002200  8fdefffc	lw	r30,-4(r30)
 1576  00002204  4be00000	jr	r31
 1577  00002208  54000000	nop
 1578  0000220c          	.endproc _min
 1579  0000220c          	.align 2
 1580  0000220c          	.proc _max
 1581  0000220c          	.global _max
 1582  0000220c          	_max:
 1583                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1584  0000220c  afbefffc	sw	-4(r29),r30; push fp
 1585  00002210  001df020	add	r30,r0,r29; fp = sp
 1586  00002214  afbffff8	sw	-8(r29),r31; push ret addr
 1587  00002218  2fbd0010	subui	r29,r29,#16; alloc local storage
 1588  0000221c  afa20000	sw	0(r29),r2
 1589  00002220  afa30004	sw	4(r29),r3
 1590  00002224  8fc10000	lw	r1,(r30)
 1591  00002228  8fc20004	lw	r2,4(r30)
 1592  0000222c  0022182d	sge	r3,r1,r2
 1593  00002230  14600008	bnez	r3,L111_LF2
 1594  00002234  54000000	nop; delay slot nop
 1595  00002238  8fc10004	lw	r1,4(r30)
 1596  0000223c          	L111_LF2:
 1597  0000223c  08000004	j	L110_LF2
 1598  00002240  54000000	nop; delay slot nop
 1599  00002244          	L110_LF2:
 1600  00002244  8fa20000	lw	r2,0(r29)
 1601  00002248  8fa30004	lw	r3,4(r29)
 1602  0000224c  8fdffff8	lw	r31,-8(r30)
 1603  00002250  001ee820	add	r29,r0,r30
 1604  00002254  8fdefffc	lw	r30,-4(r30)
 1605  00002258  4be00000	jr	r31
 1606  0000225c  54000000	nop
 1607  00002260          	.endproc _max
 1608                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1609                      ;;;
 1610                      ;;; Most of the traps are called in files from libtraps.
 1613  00002260          	.align 2
 1614  00002260          	.proc _exit
 1615  00002260          	.global _exit
 1616  00002260          	_exit:
 1617  00002260  44000300	trap	#0x300
 1618  00002264  4be00000	jr	r31
 1619  00002268  54000000	nop
 1620  0000226c          	.endproc _exit
 1622                      ; for the benefit of gcc.
 1623  0000226c          	.proc ___main
 1624  0000226c          	.global ___main
 1625  0000226c          	___main:
 1626  0000226c  4be00000	jr	r31
 1627  00002270  54000000	nop
 1628  00002274          	.endproc ___main
 1629  00002274          	.text
 1630  00002274          	.global _etext
 1631  00002274          	_etext:
 1632  00002274          	.align 3
 1633  00002278          	.data
 1634  000030d2          	.global _edata
 1635  000030d2          	_edata:
