 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 373
    4                      ; Text size: 4792
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  48656c6c	.ascii "Hello World\000"
   82  00003004  6f20576f	
   82  00003008  726c6400	
   83  0000300c          	.align 2
   84  0000300c          	LC1_LF0:
   85  0000300c  55736167	.ascii "Usage: \000"
   85  00003010  653a2000	
   86  00003014          	.align 2
   87  00003014          	LC2_LF0:
   88  00003014  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   88  00003018  6e646c65	
   88  0000301c  5f746f5f	
   88  00003020  73686172	
   88  00003024  65645f6d	
   88  00003028  656d6f72	
   88  0000302c  795f7061	
   88  00003030  67653e20	
   88  00003034  3c68616e	
   88  00003038  646c655f	
   88  0000303c  746f5f70	
   88  00003040  6167655f	
   88  00003044  6d617070	
   88  00003048  65645f73	
   88  0000304c  656d6170	
   88  00003050  686f7265	
   88  00003054  3e0a00  	
   89  00003057          	.align 2
   90  00003058          	LC3_LF0:
   91  00003058  436f756c	.ascii "Could not map the virtual address to the memory in \000"
   91  0000305c  64206e6f	
   91  00003060  74206d61	
   91  00003064  70207468	
   91  00003068  65207669	
   91  0000306c  72747561	
   91  00003070  6c206164	
   91  00003074  64726573	
   91  00003078  7320746f	
   91  0000307c  20746865	
   91  00003080  206d656d	
   91  00003084  6f727920	
   91  00003088  696e2000	
   92  0000308c          	.align 2
   93  0000308c          	LC4_LF0:
   94  0000308c  2c206578	.ascii ", exiting...\n\000"
   94  00003090  6974696e	
   94  00003094  672e2e2e	
   94  00003098  0a00    	
   95  0000309a          	.align 2
   96  0000309c          	LC5_LF0:
   97  0000309c  4c6f636b	.ascii "Lock acquired failed\n\000"
   97  000030a0  20616371	
   97  000030a4  75697265	
   97  000030a8  64206661	
   97  000030ac  696c6564	
   97  000030b0  0a00    	
   98  000030b2          	.align 2
   99  000030b4          	LC6_LF0:
  100  000030b4  50726f64	.ascii "Producer %d inserted: %c\n\000"
  100  000030b8  75636572	
  100  000030bc  20256420	
  100  000030c0  696e7365	
  100  000030c4  72746564	
  100  000030c8  3a202563	
  100  000030cc  0a00    	
  101  000030ce          	.align 2
  102  000030d0          	LC7_LF0:
  103  000030d0  4c6f636b	.ascii "Lock release failed\n\000"
  103  000030d4  2072656c	
  103  000030d8  65617365	
  103  000030dc  20666169	
  103  000030e0  6c65640a	
  103  000030e4  00      	
  104  000030e5          	.align 2
  105  000030e8          	LC8_LF0:
  106  000030e8  6e756d62	.ascii "number of producers: This is one of the %d instances you created.  \000"
  106  000030ec  6572206f	
  106  000030f0  66207072	
  106  000030f4  6f647563	
  106  000030f8  6572733a	
  106  000030fc  20546869	
  106  00003100  73206973	
  106  00003104  206f6e65	
  106  00003108  206f6620	
  106  0000310c  74686520	
  106  00003110  25642069	
  106  00003114  6e737461	
  106  00003118  6e636573	
  106  0000311c  20796f75	
  106  00003120  20637265	
  106  00003124  61746564	
  106  00003128  2e202000	
  107  0000312c          	.align 2
  108  0000312c          	LC9_LF0:
  109  0000312c  70726f64	.ascii "producer: PID %d is complete.\n\000"
  109  00003130  75636572	
  109  00003134  3a205049	
  109  00003138  44202564	
  109  0000313c  20697320	
  109  00003140  636f6d70	
  109  00003144  6c657465	
  109  00003148  2e0a00  	
  110  0000314b          	.align 2
  111  0000314c          	LC10_LF0:
  112  0000314c  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  112  00003150  73656d61	
  112  00003154  70686f72	
  112  00003158  6520735f	
  112  0000315c  70726f63	
  112  00003160  735f636f	
  112  00003164  6d706c65	
  112  00003168  74656420	
  112  0000316c  28256429	
  112  00003170  20696e20	
  112  00003174  00      	
  113  00003175          	.text
  114  000010d4          	.align 2
  115  000010d4          	.proc _main
  116  000010d4          	.global _main
  117  000010d4          	_main:
  118                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  119  000010d4  afbefffc	sw	-4(r29),r30; push fp
  120  000010d8  001df020	add	r30,r0,r29; fp = sp
  121  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  122  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  123  000010e4  8fc20000	lw	r2,(r30)
  124  000010e8  8fc70004	lw	r7,4(r30)
  125  000010ec  0c0011c0	jal	___main
  126  000010f0  54000000	nop; not filled.
  127  000010f4  3c010000	lhi	r1,((LC0_LF0)>>16)&0xffff
  128  000010f8  24213000	addui	r1,r1,(LC0_LF0)&0xffff
  129  000010fc  802a0000	lb	r10,(r1)
  130  00001100  a3caffe8	sb	-24(r30),r10
  131  00001104  802a0001	lb	r10,1(r1)
  132  00001108  a3caffe9	sb	-23(r30),r10
  133  0000110c  802a0002	lb	r10,2(r1)
  134  00001110  a3caffea	sb	-22(r30),r10
  135  00001114  802a0003	lb	r10,3(r1)
  136  00001118  a3caffeb	sb	-21(r30),r10
  137  0000111c  802a0004	lb	r10,4(r1)
  138  00001120  a3caffec	sb	-20(r30),r10
  139  00001124  802a0005	lb	r10,5(r1)
  140  00001128  a3caffed	sb	-19(r30),r10
  141  0000112c  802a0006	lb	r10,6(r1)
  142  00001130  a3caffee	sb	-18(r30),r10
  143  00001134  802a0007	lb	r10,7(r1)
  144  00001138  a3caffef	sb	-17(r30),r10
  145  0000113c  802a0008	lb	r10,8(r1)
  146  00001140  a3cafff0	sb	-16(r30),r10
  147  00001144  802a0009	lb	r10,9(r1)
  148  00001148  a3cafff1	sb	-15(r30),r10
  149  0000114c  802a000a	lb	r10,10(r1)
  150  00001150  a3cafff2	sb	-14(r30),r10
  151  00001154  8021000b	lb	r1,11(r1)
  152  00001158  a3c1fff3	sb	-13(r30),r1
  153  0000115c  64410004	snei	r1,r2,#4
  154  00001160  1020004c	beqz	r1,L14_LF0
  155  00001164  54000000	nop; not filled.
  156  00001168  23bdfff8	addi	r29,r29,#-8
  157  0000116c  3c0a0000	lhi	r10,((LC1_LF0)>>16)&0xffff
  158  00001170  254a300c	addui	r10,r10,(LC1_LF0)&0xffff
  159  00001174  afaa0000	sw	(r29),r10
  160  00001178  0c00032c	jal	_Printf
  161  0000117c  54000000	nop; not filled.
  162  00001180  8cea0000	lw	r10,(r7)
  163  00001184  afaa0000	sw	(r29),r10
  164  00001188  0c00031c	jal	_Printf
  165  0000118c  54000000	nop; not filled.
  166  00001190  3c0a0000	lhi	r10,((LC2_LF0)>>16)&0xffff
  167  00001194  254a3014	addui	r10,r10,(LC2_LF0)&0xffff
  168  00001198  afaa0000	sw	(r29),r10
  169  0000119c  0c000308	jal	_Printf
  170  000011a0  54000000	nop; not filled.
  171  000011a4  0c0003b4	jal	_Exit
  172  000011a8  54000000	nop; not filled.
  173  000011ac  23bd0008	addi	r29,r29,#8
  174  000011b0          	L14_LF0:
  175  000011b0  23bdfff0	addi	r29,r29,#-16
  176  000011b4  8cea0004	lw	r10,4(r7)
  177  000011b8  afaa0000	sw	(r29),r10
  178  000011bc  200a0000	addi	r10,r0,#0
  179  000011c0  afaa0004	sw	4(r29),r10
  180  000011c4  200a000a	addi	r10,r0,#10
  181  000011c8  afaa0008	sw	8(r29),r10
  182  000011cc  0c000c38	jal	_dstrtol
  183  000011d0  54000000	nop; not filled.
  184  000011d4  00011020	add	r2,r0,r1
  185  000011d8  8cea0008	lw	r10,8(r7)
  186  000011dc  afaa0000	sw	(r29),r10
  187  000011e0  200a0000	addi	r10,r0,#0
  188  000011e4  afaa0004	sw	4(r29),r10
  189  000011e8  200a000a	addi	r10,r0,#10
  190  000011ec  afaa0008	sw	8(r29),r10
  191  000011f0  0c000c14	jal	_dstrtol
  192  000011f4  54000000	nop; not filled.
  193  000011f8  00014020	add	r8,r0,r1
  194  000011fc  8cea000c	lw	r10,12(r7)
  195  00001200  afaa0000	sw	(r29),r10
  196  00001204  200a0000	addi	r10,r0,#0
  197  00001208  afaa0004	sw	4(r29),r10
  198  0000120c  200a000a	addi	r10,r0,#10
  199  00001210  afaa0008	sw	8(r29),r10
  200  00001214  0c000bf0	jal	_dstrtol
  201  00001218  54000000	nop; not filled.
  202  0000121c  00013020	add	r6,r0,r1
  203  00001220  afa20000	sw	(r29),r2
  204  00001224  0c0002b0	jal	_shmat
  205  00001228  54000000	nop; not filled.
  206  0000122c  00012020	add	r4,r0,r1
  207  00001230  23bd0010	addi	r29,r29,#16
  208  00001234  64810000	snei	r1,r4,#0
  209  00001238  1420004c	bnez	r1,L15_LF0
  210  0000123c  54000000	nop; not filled.
  211  00001240  23bdfff8	addi	r29,r29,#-8
  212  00001244  3c0a0000	lhi	r10,((LC3_LF0)>>16)&0xffff
  213  00001248  254a3058	addui	r10,r10,(LC3_LF0)&0xffff
  214  0000124c  afaa0000	sw	(r29),r10
  215  00001250  0c000254	jal	_Printf
  216  00001254  54000000	nop; not filled.
  217  00001258  8cea0000	lw	r10,(r7)
  218  0000125c  afaa0000	sw	(r29),r10
  219  00001260  0c000244	jal	_Printf
  220  00001264  54000000	nop; not filled.
  221  00001268  3c0a0000	lhi	r10,((LC4_LF0)>>16)&0xffff
  222  0000126c  254a308c	addui	r10,r10,(LC4_LF0)&0xffff
  223  00001270  afaa0000	sw	(r29),r10
  224  00001274  0c000230	jal	_Printf
  225  00001278  54000000	nop; not filled.
  226  0000127c  0c0002dc	jal	_Exit
  227  00001280  54000000	nop; not filled.
  228  00001284  23bd0008	addi	r29,r29,#8
  229  00001288          	L15_LF0:
  230  00001288  20050000	addi	r5,r0,#0
  231  0000128c  2009000b	addi	r9,r0,#11
  232  00001290          	L19_LF0:
  233  00001290  23bdfff8	addi	r29,r29,#-8
  234  00001294  afa60000	sw	(r29),r6
  235  00001298  0c000278	jal	_lock_acquire
  236  0000129c  54000000	nop; not filled.
  237  000012a0  23bd0008	addi	r29,r29,#8
  238  000012a4  64210001	snei	r1,r1,#1
  239  000012a8  10200028	beqz	r1,L20_LF0
  240  000012ac  54000000	nop; not filled.
  241  000012b0  23bdfff8	addi	r29,r29,#-8
  242  000012b4  3c0a0000	lhi	r10,((LC5_LF0)>>16)&0xffff
  243  000012b8  254a309c	addui	r10,r10,(LC5_LF0)&0xffff
  244  000012bc  afaa0000	sw	(r29),r10
  245  000012c0  0c0001e4	jal	_Printf
  246  000012c4  54000000	nop; not filled.
  247  000012c8  0c000290	jal	_Exit
  248  000012cc  54000000	nop; not filled.
  249  000012d0  23bd0008	addi	r29,r29,#8
  250  000012d4          	L20_LF0:
  251  000012d4  8c830010	lw	r3,16(r4)
  252  000012d8  00600035	movi2fp	f0,r3
  253  000012dc  01200835	movi2fp	f1,r9
  254  000012e0  0401000f	div	f0,f0,f1
  255  000012e4  00001034	movfp2i	r2,f0
  256  000012e8  50410001	slli	r1,r2,#0x1
  257  000012ec  00220820	add	r1,r1,r2
  258  000012f0  50210002	slli	r1,r1,#0x2
  259  000012f4  00220822	sub	r1,r1,r2
  260  000012f8  00611822	sub	r3,r3,r1
  261  000012fc  8c810014	lw	r1,20(r4)
  262  00001300  00610828	seq	r1,r3,r1
  263  00001304  14200054	bnez	r1,L22_LF0
  264  00001308  54000000	nop; not filled.
  265  0000130c  0c0001a4	jal	_getpid
  266  00001310  54000000	nop; not filled.
  267  00001314  23bdfff0	addi	r29,r29,#-16
  268  00001318  3c0a0000	lhi	r10,((LC6_LF0)>>16)&0xffff
  269  0000131c  254a30b4	addui	r10,r10,(LC6_LF0)&0xffff
  270  00001320  afaa0000	sw	(r29),r10
  271  00001324  afa10004	sw	4(r29),r1
  272  00001328  23c1ffe8	addi	r1,r30,#-24
  273  0000132c  00251020	add	r2,r1,r5
  274  00001330  90410000	lbu	r1,(r2)
  275  00001334  afa10008	sw	8(r29),r1
  276  00001338  0c00016c	jal	_Printf
  277  0000133c  54000000	nop; not filled.
  278  00001340  00830820	add	r1,r4,r3
  279  00001344  80420000	lb	r2,(r2)
  280  00001348  a0220000	sb	(r1),r2
  281  0000134c  8c810010	lw	r1,16(r4)
  282  00001350  20210001	addi	r1,r1,#1
  283  00001354  ac810010	sw	16(r4),r1
  284  00001358  23bd0010	addi	r29,r29,#16
  285  0000135c          	L22_LF0:
  286  0000135c  23bdfff8	addi	r29,r29,#-8
  287  00001360  afa60000	sw	(r29),r6
  288  00001364  0c0001b8	jal	_lock_release
  289  00001368  54000000	nop; not filled.
  290  0000136c  23bd0008	addi	r29,r29,#8
  291  00001370  64210001	snei	r1,r1,#1
  292  00001374  10200028	beqz	r1,L18_LF0
  293  00001378  54000000	nop; not filled.
  294  0000137c  23bdfff8	addi	r29,r29,#-8
  295  00001380  3c0a0000	lhi	r10,((LC7_LF0)>>16)&0xffff
  296  00001384  254a30d0	addui	r10,r10,(LC7_LF0)&0xffff
  297  00001388  afaa0000	sw	(r29),r10
  298  0000138c  0c000118	jal	_Printf
  299  00001390  54000000	nop; not filled.
  300  00001394  0c0001c4	jal	_Exit
  301  00001398  54000000	nop; not filled.
  302  0000139c  23bd0008	addi	r29,r29,#8
  303  000013a0          	L18_LF0:
  304  000013a0  20a50001	addi	r5,r5,#1
  305  000013a4  70a1000a	slei	r1,r5,#10
  306  000013a8  1420fee4	bnez	r1,L19_LF0
  307  000013ac  54000000	nop; not filled.
  308  000013b0  23bdfff8	addi	r29,r29,#-8
  309  000013b4  3c0a0000	lhi	r10,((LC8_LF0)>>16)&0xffff
  310  000013b8  254a30e8	addui	r10,r10,(LC8_LF0)&0xffff
  311  000013bc  afaa0000	sw	(r29),r10
  312  000013c0  8c81000c	lw	r1,12(r4)
  313  000013c4  afa10004	sw	4(r29),r1
  314  000013c8  0c0000dc	jal	_Printf
  315  000013cc  54000000	nop; not filled.
  316  000013d0  0c0000e0	jal	_getpid
  317  000013d4  54000000	nop; not filled.
  318  000013d8  3c0a0000	lhi	r10,((LC9_LF0)>>16)&0xffff
  319  000013dc  254a312c	addui	r10,r10,(LC9_LF0)&0xffff
  320  000013e0  afaa0000	sw	(r29),r10
  321  000013e4  afa10004	sw	4(r29),r1
  322  000013e8  0c0000bc	jal	_Printf
  323  000013ec  54000000	nop; not filled.
  324  000013f0  afa80000	sw	(r29),r8
  325  000013f4  0c000104	jal	_sem_signal
  326  000013f8  54000000	nop; not filled.
  327  000013fc  23bd0008	addi	r29,r29,#8
  328  00001400  64210001	snei	r1,r1,#1
  329  00001404  10200050	beqz	r1,L25_LF0
  330  00001408  54000000	nop; not filled.
  331  0000140c  23bdfff8	addi	r29,r29,#-8
  332  00001410  3c0a0000	lhi	r10,((LC10_LF0)>>16)&0xffff
  333  00001414  254a314c	addui	r10,r10,(LC10_LF0)&0xffff
  334  00001418  afaa0000	sw	(r29),r10
  335  0000141c  afa80004	sw	4(r29),r8
  336  00001420  0c000084	jal	_Printf
  337  00001424  54000000	nop; not filled.
  338  00001428  8ce70000	lw	r7,(r7)
  339  0000142c  afa70000	sw	(r29),r7
  340  00001430  0c000074	jal	_Printf
  341  00001434  54000000	nop; not filled.
  342  00001438  3c0a0000	lhi	r10,((LC4_LF0)>>16)&0xffff
  343  0000143c  254a308c	addui	r10,r10,(LC4_LF0)&0xffff
  344  00001440  afaa0000	sw	(r29),r10
  345  00001444  0c000060	jal	_Printf
  346  00001448  54000000	nop; not filled.
  347  0000144c  0c00010c	jal	_Exit
  348  00001450  54000000	nop; not filled.
  349  00001454  23bd0008	addi	r29,r29,#8
  350  00001458          	L25_LF0:
  351  00001458  0c000e48	jal	_exit
  352  0000145c  54000000	nop
  353  00001460          	.endproc _main
  354                      ;;;
  355                      ;;; Stub functions for DLX traps.
  356                      ;;;
  357                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  358                      ;;;
  359                      ;;; The traps such as Open and Close
  360                      ;;; (note the capital letters) are for use by user programs.  The traps
  361                      ;;; with names such as open and close (lower case) are for use by the OS.
  362                      ;;;
  365  00001460          	.align 2
  367                      ;;; The following are the traps to be used by user-level programs
  368                      ;;;
  370  00001460          	.align 2
  371  00001460          	.proc _Open
  372  00001460          	.global _Open
  373  00001460          	_Open:
  374                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  375                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  376                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  377  00001460  44000213	trap	#0x213
  378  00001464  4be00000	jr	r31
  379  00001468  54000000	nop
  380  0000146c          	.endproc _Open
  382  0000146c          	.proc _Close
  383  0000146c          	.global _Close
  384  0000146c          	_Close:
  385  0000146c  44000214	trap	#0x214
  386  00001470  4be00000	jr	r31
  387  00001474  54000000	nop
  388  00001478          	.endproc _Close
  390  00001478          	.proc _Read
  391  00001478          	.global _Read
  392  00001478          	_Read:
  393  00001478  44000210	trap	#0x210
  394  0000147c  4be00000	jr	r31
  395  00001480  54000000	nop
  396  00001484          	.endproc _Read
  398  00001484          	.proc _Write
  399  00001484          	.global _Write
  400  00001484          	_Write:
  401  00001484  44000211	trap	#0x211
  402  00001488  4be00000	jr	r31
  403  0000148c  54000000	nop
  404  00001490          	.endproc _Write
  406  00001490          	.proc _Lseek
  407  00001490          	.global _Lseek
  408  00001490          	_Lseek:
  409  00001490  44000212	trap	#0x212
  410  00001494  4be00000	jr	r31
  411  00001498  54000000	nop
  412  0000149c          	.endproc _Lseek
  414  0000149c          	.proc _Putchar
  415  0000149c          	.global _Putchar
  416  0000149c          	_Putchar:
  417  0000149c  44000280	trap	#0x280
  418  000014a0  4be00000	jr	r31
  419  000014a4  54000000	nop
  420  000014a8          	.endproc _Putchar
  422  000014a8          	.proc _Printf
  423  000014a8          	.global _Printf
  424  000014a8          	_Printf:
  425  000014a8  44000201	trap	#0x201
  426  000014ac  4be00000	jr	r31
  427  000014b0  54000000	nop
  428  000014b4          	.endproc _Printf
  430  000014b4          	.proc _getpid
  431  000014b4          	.global _getpid
  432  000014b4          	_getpid:
  433  000014b4  44000431	trap	#0x431
  434  000014b8  4be00000	jr	r31
  435  000014bc  54000000	nop
  436  000014c0          	.endproc _getpid
  438  000014c0          	.proc _process_create
  439  000014c0          	.global _process_create
  440  000014c0          	_process_create:
  441  000014c0  44000432	trap	#0x432
  442  000014c4  4be00000	jr	r31
  443  000014c8  54000000	nop
  444  000014cc          	.endproc _process_create
  446  000014cc          	.proc _shmget
  447  000014cc          	.global _shmget
  448  000014cc          	_shmget:
  449  000014cc  44000440	trap	#0x440
  450  000014d0  4be00000	jr	r31
  451  000014d4  54000000	nop
  452  000014d8          	.endproc _shmget
  454  000014d8          	.proc _shmat
  455  000014d8          	.global _shmat
  456  000014d8          	_shmat:
  457  000014d8  44000441	trap	#0x441
  458  000014dc  4be00000	jr	r31
  459  000014e0  54000000	nop
  460  000014e4          	.endproc _shmat
  462  000014e4          	.proc _sem_create
  463  000014e4          	.global _sem_create
  464  000014e4          	_sem_create:
  465  000014e4  44000450	trap	#0x450
  466  000014e8  4be00000	jr	r31
  467  000014ec  54000000	nop
  468  000014f0          	.endproc _sem_create
  470  000014f0          	.proc _sem_wait
  471  000014f0          	.global _sem_wait
  472  000014f0          	_sem_wait:
  473  000014f0  44000451	trap	#0x451
  474  000014f4  4be00000	jr	r31
  475  000014f8  54000000	nop
  476  000014fc          	.endproc _sem_wait
  478  000014fc          	.proc _sem_signal
  479  000014fc          	.global _sem_signal
  480  000014fc          	_sem_signal:
  481  000014fc  44000452	trap	#0x452
  482  00001500  4be00000	jr	r31
  483  00001504  54000000	nop
  484  00001508          	.endproc _sem_signal
  486  00001508          	.proc _lock_create
  487  00001508          	.global _lock_create
  488  00001508          	_lock_create:
  489  00001508  44000453	trap	#0x453
  490  0000150c  4be00000	jr	r31
  491  00001510  54000000	nop
  492  00001514          	.endproc _lock_create
  494  00001514          	.proc _lock_acquire
  495  00001514          	.global _lock_acquire
  496  00001514          	_lock_acquire:
  497  00001514  44000454	trap	#0x454
  498  00001518  4be00000	jr	r31
  499  0000151c  54000000	nop
  500  00001520          	.endproc _lock_acquire
  502  00001520          	.proc _lock_release
  503  00001520          	.global _lock_release
  504  00001520          	_lock_release:
  505  00001520  44000455	trap	#0x455
  506  00001524  4be00000	jr	r31
  507  00001528  54000000	nop
  508  0000152c          	.endproc _lock_release
  510  0000152c          	.proc _cond_create
  511  0000152c          	.global _cond_create
  512  0000152c          	_cond_create:
  513  0000152c  44000456	trap	#0x456
  514  00001530  4be00000	jr	r31
  515  00001534  54000000	nop
  516  00001538          	.endproc _cond_create
  518  00001538          	.proc _cond_wait
  519  00001538          	.global _cond_wait
  520  00001538          	_cond_wait:
  521  00001538  44000457	trap	#0x457
  522  0000153c  4be00000	jr	r31
  523  00001540  54000000	nop
  524  00001544          	.endproc _cond_wait
  526  00001544          	.proc _cond_signal
  527  00001544          	.global _cond_signal
  528  00001544          	_cond_signal:
  529  00001544  44000458	trap	#0x458
  530  00001548  4be00000	jr	r31
  531  0000154c  54000000	nop
  532  00001550          	.endproc _cond_signal
  534  00001550          	.proc _cond_broadcast
  535  00001550          	.global _cond_broadcast
  536  00001550          	_cond_broadcast:
  537  00001550  44000455	trap	#0x455
  538  00001554  4be00000	jr	r31
  539  00001558  54000000	nop
  540  0000155c          	.endproc _cond_broadcast
  542  0000155c          	.proc _Exit
  543  0000155c          	.global _Exit
  544  0000155c          	_Exit:
  545  0000155c  44000500	trap	#0x500
  546  00001560  4be00000	jr	r31
  547  00001564  54000000	nop
  548  00001568          	.endproc _Exit
  549                      ; Compiled by GCC
  551  00001568          	.align 2
  552  00001568          	.proc _isspace
  553  00001568          	.global _isspace
  554  00001568          	_isspace:
  555                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  556  00001568  afbefffc	sw	-4(r29),r30; push fp
  557  0000156c  001df020	add	r30,r0,r29; fp = sp
  558  00001570  afbffff8	sw	-8(r29),r31; push ret addr
  559  00001574  2fbd0018	subui	r29,r29,#24; alloc local storage
  560  00001578  afa20000	sw	0(r29),r2
  561  0000157c  afa30004	sw	4(r29),r3
  562  00001580  afa40008	sw	8(r29),r4
  563  00001584  83c20003	lb	r2,3(r30)
  564  00001588  20010000	addi	r1,r0,#0
  565  0000158c  304300ff	andi	r3,r2,#0x00ff
  566  00001590  60640020	seqi	r4,r3,#32
  567  00001594  1480002c	bnez	r4,L3_LF2
  568  00001598  54000000	nop; delay slot nop
  569  0000159c  304300ff	andi	r3,r2,#0x00ff
  570  000015a0  60640009	seqi	r4,r3,#9
  571  000015a4  1480001c	bnez	r4,L3_LF2
  572  000015a8  54000000	nop; delay slot nop
  573  000015ac  304300ff	andi	r3,r2,#0x00ff
  574  000015b0  6064000a	seqi	r4,r3,#10
  575  000015b4  1480000c	bnez	r4,L3_LF2
  576  000015b8  54000000	nop; delay slot nop
  577  000015bc  08000008	j	L2_LF2
  578  000015c0  54000000	nop; delay slot nop
  579  000015c4          	L3_LF2:
  580  000015c4  20010001	addi	r1,r0,#1
  581  000015c8          	L2_LF2:
  582  000015c8  08000004	j	L1_LF2
  583  000015cc  54000000	nop; delay slot nop
  584  000015d0          	L1_LF2:
  585  000015d0  8fa20000	lw	r2,0(r29)
  586  000015d4  8fa30004	lw	r3,4(r29)
  587  000015d8  8fa40008	lw	r4,8(r29)
  588  000015dc  8fdffff8	lw	r31,-8(r30)
  589  000015e0  001ee820	add	r29,r0,r30
  590  000015e4  8fdefffc	lw	r30,-4(r30)
  591  000015e8  4be00000	jr	r31
  592  000015ec  54000000	nop
  593  000015f0          	.endproc _isspace
  594  000015f0          	.align 2
  595  000015f0          	.proc _isxdigit
  596  000015f0          	.global _isxdigit
  597  000015f0          	_isxdigit:
  598                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  599  000015f0  afbefffc	sw	-4(r29),r30; push fp
  600  000015f4  001df020	add	r30,r0,r29; fp = sp
  601  000015f8  afbffff8	sw	-8(r29),r31; push ret addr
  602  000015fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  603  00001600  afa20000	sw	0(r29),r2
  604  00001604  afa30004	sw	4(r29),r3
  605  00001608  afa40008	sw	8(r29),r4
  606  0000160c  83c20003	lb	r2,3(r30)
  607  00001610  20010000	addi	r1,r0,#0
  608  00001614  304300ff	andi	r3,r2,#0x00ff
  609  00001618  6c64002f	sgtui	r4,r3,#47
  610  0000161c  1080001c	beqz	r4,L7_LF2
  611  00001620  54000000	nop; delay slot nop
  612  00001624  304300ff	andi	r3,r2,#0x00ff
  613  00001628  70640039	sleui	r4,r3,#57
  614  0000162c  1480005c	bnez	r4,L6_LF2
  615  00001630  54000000	nop; delay slot nop
  616  00001634  08000004	j	L7_LF2
  617  00001638  54000000	nop; delay slot nop
  618  0000163c          	L7_LF2:
  619  0000163c  304300ff	andi	r3,r2,#0x00ff
  620  00001640  6c640060	sgtui	r4,r3,#96
  621  00001644  1080001c	beqz	r4,L8_LF2
  622  00001648  54000000	nop; delay slot nop
  623  0000164c  304300ff	andi	r3,r2,#0x00ff
  624  00001650  70640066	sleui	r4,r3,#102
  625  00001654  14800034	bnez	r4,L6_LF2
  626  00001658  54000000	nop; delay slot nop
  627  0000165c  08000004	j	L8_LF2
  628  00001660  54000000	nop; delay slot nop
  629  00001664          	L8_LF2:
  630  00001664  304300ff	andi	r3,r2,#0x00ff
  631  00001668  6c640040	sgtui	r4,r3,#64
  632  0000166c  10800020	beqz	r4,L5_LF2
  633  00001670  54000000	nop; delay slot nop
  634  00001674  304300ff	andi	r3,r2,#0x00ff
  635  00001678  70640041	sleui	r4,r3,#65
  636  0000167c  1480000c	bnez	r4,L6_LF2
  637  00001680  54000000	nop; delay slot nop
  638  00001684  08000008	j	L5_LF2
  639  00001688  54000000	nop; delay slot nop
  640  0000168c          	L6_LF2:
  641  0000168c  20010001	addi	r1,r0,#1
  642  00001690          	L5_LF2:
  643  00001690  08000004	j	L4_LF2
  644  00001694  54000000	nop; delay slot nop
  645  00001698          	L4_LF2:
  646  00001698  8fa20000	lw	r2,0(r29)
  647  0000169c  8fa30004	lw	r3,4(r29)
  648  000016a0  8fa40008	lw	r4,8(r29)
  649  000016a4  8fdffff8	lw	r31,-8(r30)
  650  000016a8  001ee820	add	r29,r0,r30
  651  000016ac  8fdefffc	lw	r30,-4(r30)
  652  000016b0  4be00000	jr	r31
  653  000016b4  54000000	nop
  654  000016b8          	.endproc _isxdigit
  655  000016b8          	.align 2
  656  000016b8          	.proc _dstrcpy
  657  000016b8          	.global _dstrcpy
  658  000016b8          	_dstrcpy:
  659                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  660  000016b8  afbefffc	sw	-4(r29),r30; push fp
  661  000016bc  001df020	add	r30,r0,r29; fp = sp
  662  000016c0  afbffff8	sw	-8(r29),r31; push ret addr
  663  000016c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  664  000016c8  afa20000	sw	0(r29),r2
  665  000016cc  afa30004	sw	4(r29),r3
  666  000016d0  8fc10000	lw	r1,(r30)
  667  000016d4  afc1fff4	sw	-12(r30),r1
  668  000016d8          	L10_LF2:
  669  000016d8  8fc10000	lw	r1,(r30)
  670  000016dc  20220001	addi	r2,r1,#1
  671  000016e0  afc20000	sw	(r30),r2
  672  000016e4  8fc20004	lw	r2,4(r30)
  673  000016e8  20430001	addi	r3,r2,#1
  674  000016ec  afc30004	sw	4(r30),r3
  675  000016f0  80420000	lb	r2,(r2)
  676  000016f4  a0220000	sb	(r1),r2
  677  000016f8  a3c2fff3	sb	-13(r30),r2
  678  000016fc          	L12_LF2:
  679  000016fc  93c1fff3	lbu	r1,-13(r30)
  680  00001700  64220000	snei	r2,r1,#0
  681  00001704  1440000c	bnez	r2,L13_LF2
  682  00001708  54000000	nop; delay slot nop
  683  0000170c  0800000c	j	L11_LF2
  684  00001710  54000000	nop; delay slot nop
  685  00001714          	L13_LF2:
  686  00001714  0bffffc0	j	L10_LF2
  687  00001718  54000000	nop; delay slot nop
  688  0000171c          	L11_LF2:
  689  0000171c  8fc1fff4	lw	r1,-12(r30)
  690  00001720  08000004	j	L9_LF2
  691  00001724  54000000	nop; delay slot nop
  692  00001728          	L9_LF2:
  693  00001728  8fa20000	lw	r2,0(r29)
  694  0000172c  8fa30004	lw	r3,4(r29)
  695  00001730  8fdffff8	lw	r31,-8(r30)
  696  00001734  001ee820	add	r29,r0,r30
  697  00001738  8fdefffc	lw	r30,-4(r30)
  698  0000173c  4be00000	jr	r31
  699  00001740  54000000	nop
  700  00001744          	.endproc _dstrcpy
  701  00001744          	.align 2
  702  00001744          	.proc _dstrncpy
  703  00001744          	.global _dstrncpy
  704  00001744          	_dstrncpy:
  705                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  706  00001744  afbefffc	sw	-4(r29),r30; push fp
  707  00001748  001df020	add	r30,r0,r29; fp = sp
  708  0000174c  afbffff8	sw	-8(r29),r31; push ret addr
  709  00001750  2fbd0018	subui	r29,r29,#24; alloc local storage
  710  00001754  afa20000	sw	0(r29),r2
  711  00001758  afa30004	sw	4(r29),r3
  712  0000175c  8fc10000	lw	r1,(r30)
  713  00001760  afc1fff4	sw	-12(r30),r1
  714  00001764          	L15_LF2:
  715  00001764  8fc10008	lw	r1,8(r30)
  716  00001768  2022ffff	addi	r2,r1,#-1
  717  0000176c  afc20008	sw	8(r30),r2
  718  00001770  70210000	slei	r1,r1,#0
  719  00001774  1020000c	beqz	r1,L18_LF2
  720  00001778  54000000	nop; delay slot nop
  721  0000177c  08000048	j	L16_LF2
  722  00001780  54000000	nop; delay slot nop
  723  00001784          	L18_LF2:
  724  00001784  8fc10000	lw	r1,(r30)
  725  00001788  20220001	addi	r2,r1,#1
  726  0000178c  afc20000	sw	(r30),r2
  727  00001790  8fc20004	lw	r2,4(r30)
  728  00001794  20430001	addi	r3,r2,#1
  729  00001798  afc30004	sw	4(r30),r3
  730  0000179c  80420000	lb	r2,(r2)
  731  000017a0  a0220000	sb	(r1),r2
  732  000017a4  a3c2fff3	sb	-13(r30),r2
  733  000017a8          	L17_LF2:
  734  000017a8  93c1fff3	lbu	r1,-13(r30)
  735  000017ac  64220000	snei	r2,r1,#0
  736  000017b0  1440000c	bnez	r2,L19_LF2
  737  000017b4  54000000	nop; delay slot nop
  738  000017b8  0800000c	j	L16_LF2
  739  000017bc  54000000	nop; delay slot nop
  740  000017c0          	L19_LF2:
  741  000017c0  0bffffa0	j	L15_LF2
  742  000017c4  54000000	nop; delay slot nop
  743  000017c8          	L16_LF2:
  744  000017c8  8fc1fff4	lw	r1,-12(r30)
  745  000017cc  08000004	j	L14_LF2
  746  000017d0  54000000	nop; delay slot nop
  747  000017d4          	L14_LF2:
  748  000017d4  8fa20000	lw	r2,0(r29)
  749  000017d8  8fa30004	lw	r3,4(r29)
  750  000017dc  8fdffff8	lw	r31,-8(r30)
  751  000017e0  001ee820	add	r29,r0,r30
  752  000017e4  8fdefffc	lw	r30,-4(r30)
  753  000017e8  4be00000	jr	r31
  754  000017ec  54000000	nop
  755  000017f0          	.endproc _dstrncpy
  756  000017f0          	.align 2
  757  000017f0          	.proc _dstrcat
  758  000017f0          	.global _dstrcat
  759  000017f0          	_dstrcat:
  760                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  761  000017f0  afbefffc	sw	-4(r29),r30; push fp
  762  000017f4  001df020	add	r30,r0,r29; fp = sp
  763  000017f8  afbffff8	sw	-8(r29),r31; push ret addr
  764  000017fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  765  00001800  afa20000	sw	0(r29),r2
  766  00001804  8fc10000	lw	r1,(r30)
  767  00001808  afc1fff4	sw	-12(r30),r1
  768  0000180c          	L21_LF2:
  769  0000180c  8fc10000	lw	r1,(r30)
  770  00001810  90220000	lbu	r2,(r1)
  771  00001814  64410000	snei	r1,r2,#0
  772  00001818  1420000c	bnez	r1,L23_LF2
  773  0000181c  54000000	nop; delay slot nop
  774  00001820  0800001c	j	L22_LF2
  775  00001824  54000000	nop; delay slot nop
  776  00001828          	L23_LF2:
  777  00001828  8fc20000	lw	r2,(r30)
  778  0000182c  20410001	addi	r1,r2,#1
  779  00001830  00011020	add	r2,r0,r1
  780  00001834  afc20000	sw	(r30),r2
  781  00001838  0bffffd0	j	L21_LF2
  782  0000183c  54000000	nop; delay slot nop
  783  00001840          	L22_LF2:
  784  00001840  23bdfff8	addi	r29,r29,#-8
  785  00001844  001d0820	add	r1,r0,r29
  786  00001848  8fc20000	lw	r2,(r30)
  787  0000184c  ac220000	sw	(r1),r2
  788  00001850  8fc20004	lw	r2,4(r30)
  789  00001854  ac220004	sw	4(r1),r2
  790  00001858  0ffffe5c	jal	_dstrcpy
  791  0000185c  54000000	nop; delay slot nop
  792  00001860  23bd0008	addi	r29,r29,#8
  793  00001864  8fc1fff4	lw	r1,-12(r30)
  794  00001868  08000004	j	L20_LF2
  795  0000186c  54000000	nop; delay slot nop
  796  00001870          	L20_LF2:
  797  00001870  8fa20000	lw	r2,0(r29)
  798  00001874  8fdffff8	lw	r31,-8(r30)
  799  00001878  001ee820	add	r29,r0,r30
  800  0000187c  8fdefffc	lw	r30,-4(r30)
  801  00001880  4be00000	jr	r31
  802  00001884  54000000	nop
  803  00001888          	.endproc _dstrcat
  804  00001888          	.align 2
  805  00001888          	.proc _dstrncmp
  806  00001888          	.global _dstrncmp
  807  00001888          	_dstrncmp:
  808                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  809  00001888  afbefffc	sw	-4(r29),r30; push fp
  810  0000188c  001df020	add	r30,r0,r29; fp = sp
  811  00001890  afbffff8	sw	-8(r29),r31; push ret addr
  812  00001894  2fbd0018	subui	r29,r29,#24; alloc local storage
  813  00001898  afa20000	sw	0(r29),r2
  814  0000189c  afa30004	sw	4(r29),r3
  815  000018a0  54000000	nop
  816  000018a4  20010000	addi	r1,r0,#0
  817  000018a8  afc1fff4	sw	-12(r30),r1
  818  000018ac          	L25_LF2:
  819  000018ac  8fc1fff4	lw	r1,-12(r30)
  820  000018b0  8fc20008	lw	r2,8(r30)
  821  000018b4  0022082a	slt	r1,r1,r2
  822  000018b8  1420000c	bnez	r1,L28_LF2
  823  000018bc  54000000	nop; delay slot nop
  824  000018c0  08000088	j	L26_LF2
  825  000018c4  54000000	nop; delay slot nop
  826  000018c8          	L28_LF2:
  827  000018c8  8fc10004	lw	r1,4(r30)
  828  000018cc  90220000	lbu	r2,(r1)
  829  000018d0  64410000	snei	r1,r2,#0
  830  000018d4  14200018	bnez	r1,L29_LF2
  831  000018d8  54000000	nop; delay slot nop
  832  000018dc  20010000	addi	r1,r0,#0
  833  000018e0  080000d8	j	L24_LF2
  834  000018e4  54000000	nop; delay slot nop
  835  000018e8  08000028	j	L30_LF2
  836  000018ec  54000000	nop; delay slot nop
  837  000018f0          	L29_LF2:
  838  000018f0  8fc10000	lw	r1,(r30)
  839  000018f4  8fc20004	lw	r2,4(r30)
  840  000018f8  90210000	lbu	r1,(r1)
  841  000018fc  90420000	lbu	r2,(r2)
  842  00001900  00220829	sne	r1,r1,r2
  843  00001904  1020000c	beqz	r1,L30_LF2
  844  00001908  54000000	nop; delay slot nop
  845  0000190c  0800003c	j	L26_LF2
  846  00001910  54000000	nop; delay slot nop
  847  00001914          	L31_LF2:
  848  00001914          	L30_LF2:
  849  00001914  8fc20000	lw	r2,(r30)
  850  00001918  20410001	addi	r1,r2,#1
  851  0000191c  00011020	add	r2,r0,r1
  852  00001920  afc20000	sw	(r30),r2
  853  00001924  8fc20004	lw	r2,4(r30)
  854  00001928  20410001	addi	r1,r2,#1
  855  0000192c  00011020	add	r2,r0,r1
  856  00001930  afc20004	sw	4(r30),r2
  857  00001934          	L27_LF2:
  858  00001934  8fc2fff4	lw	r2,-12(r30)
  859  00001938  20410001	addi	r1,r2,#1
  860  0000193c  00011020	add	r2,r0,r1
  861  00001940  afc2fff4	sw	-12(r30),r2
  862  00001944  0bffff64	j	L25_LF2
  863  00001948  54000000	nop; delay slot nop
  864  0000194c          	L26_LF2:
  865  0000194c  8fc1fff4	lw	r1,-12(r30)
  866  00001950  8fc20008	lw	r2,8(r30)
  867  00001954  00220828	seq	r1,r1,r2
  868  00001958  10200018	beqz	r1,L32_LF2
  869  0000195c  54000000	nop; delay slot nop
  870  00001960  20010000	addi	r1,r0,#0
  871  00001964  08000054	j	L24_LF2
  872  00001968  54000000	nop; delay slot nop
  873  0000196c  0800004c	j	L33_LF2
  874  00001970  54000000	nop; delay slot nop
  875  00001974          	L32_LF2:
  876  00001974  8fc20000	lw	r2,(r30)
  877  00001978  90410000	lbu	r1,(r2)
  878  0000197c  8fc20004	lw	r2,4(r30)
  879  00001980  90430000	lbu	r3,(r2)
  880  00001984  00230822	sub	r1,r1,r3
  881  00001988  74220000	sgei	r2,r1,#0
  882  0000198c  10400020	beqz	r2,L34_LF2
  883  00001990  54000000	nop; delay slot nop
  884  00001994  8fc10000	lw	r1,(r30)
  885  00001998  8fc20004	lw	r2,4(r30)
  886  0000199c  90210000	lbu	r1,(r1)
  887  000019a0  90420000	lbu	r2,(r2)
  888  000019a4  00220829	sne	r1,r1,r2
  889  000019a8  08000008	j	L35_LF2
  890  000019ac  54000000	nop; delay slot nop
  891  000019b0          	L34_LF2:
  892  000019b0  2001ffff	addi	r1,r0,#-1
  893  000019b4          	L35_LF2:
  894  000019b4  08000004	j	L24_LF2
  895  000019b8  54000000	nop; delay slot nop
  896  000019bc          	L33_LF2:
  897  000019bc          	L24_LF2:
  898  000019bc  8fa20000	lw	r2,0(r29)
  899  000019c0  8fa30004	lw	r3,4(r29)
  900  000019c4  8fdffff8	lw	r31,-8(r30)
  901  000019c8  001ee820	add	r29,r0,r30
  902  000019cc  8fdefffc	lw	r30,-4(r30)
  903  000019d0  4be00000	jr	r31
  904  000019d4  54000000	nop
  905  000019d8          	.endproc _dstrncmp
  906  000019d8          	.align 2
  907  000019d8          	.proc _dstrlen
  908  000019d8          	.global _dstrlen
  909  000019d8          	_dstrlen:
  910                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  911  000019d8  afbefffc	sw	-4(r29),r30; push fp
  912  000019dc  001df020	add	r30,r0,r29; fp = sp
  913  000019e0  afbffff8	sw	-8(r29),r31; push ret addr
  914  000019e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  915  000019e8  afa20000	sw	0(r29),r2
  916  000019ec  20010000	addi	r1,r0,#0
  917  000019f0  afc1fff4	sw	-12(r30),r1
  918  000019f4          	L37_LF2:
  919  000019f4  8fc10000	lw	r1,(r30)
  920  000019f8  20220001	addi	r2,r1,#1
  921  000019fc  afc20000	sw	(r30),r2
  922  00001a00  90210000	lbu	r1,(r1)
  923  00001a04  64220000	snei	r2,r1,#0
  924  00001a08  1440000c	bnez	r2,L39_LF2
  925  00001a0c  54000000	nop; delay slot nop
  926  00001a10  0800001c	j	L38_LF2
  927  00001a14  54000000	nop; delay slot nop
  928  00001a18          	L39_LF2:
  929  00001a18  8fc2fff4	lw	r2,-12(r30)
  930  00001a1c  20410001	addi	r1,r2,#1
  931  00001a20  00011020	add	r2,r0,r1
  932  00001a24  afc2fff4	sw	-12(r30),r2
  933  00001a28  0bffffc8	j	L37_LF2
  934  00001a2c  54000000	nop; delay slot nop
  935  00001a30          	L38_LF2:
  936  00001a30  8fc1fff4	lw	r1,-12(r30)
  937  00001a34  08000004	j	L36_LF2
  938  00001a38  54000000	nop; delay slot nop
  939  00001a3c          	L36_LF2:
  940  00001a3c  8fa20000	lw	r2,0(r29)
  941  00001a40  8fdffff8	lw	r31,-8(r30)
  942  00001a44  001ee820	add	r29,r0,r30
  943  00001a48  8fdefffc	lw	r30,-4(r30)
  944  00001a4c  4be00000	jr	r31
  945  00001a50  54000000	nop
  946  00001a54          	.endproc _dstrlen
  947  00001a54          	.align 2
  948  00001a54          	.proc _dstrstr
  949  00001a54          	.global _dstrstr
  950  00001a54          	_dstrstr:
  951                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  952  00001a54  afbefffc	sw	-4(r29),r30; push fp
  953  00001a58  001df020	add	r30,r0,r29; fp = sp
  954  00001a5c  afbffff8	sw	-8(r29),r31; push ret addr
  955  00001a60  2fbd0018	subui	r29,r29,#24; alloc local storage
  956  00001a64  afa20000	sw	0(r29),r2
  957  00001a68  23bdfff8	addi	r29,r29,#-8
  958  00001a6c  001d0820	add	r1,r0,r29
  959  00001a70  8fc20004	lw	r2,4(r30)
  960  00001a74  ac220000	sw	(r1),r2
  961  00001a78  0fffff5c	jal	_dstrlen
  962  00001a7c  54000000	nop; delay slot nop
  963  00001a80  23bd0008	addi	r29,r29,#8
  964  00001a84  afc1fff4	sw	-12(r30),r1
  965  00001a88          	L41_LF2:
  966  00001a88  8fc10000	lw	r1,(r30)
  967  00001a8c  90220000	lbu	r2,(r1)
  968  00001a90  64410000	snei	r1,r2,#0
  969  00001a94  1420000c	bnez	r1,L43_LF2
  970  00001a98  54000000	nop; delay slot nop
  971  00001a9c  08000060	j	L42_LF2
  972  00001aa0  54000000	nop; delay slot nop
  973  00001aa4          	L43_LF2:
  974  00001aa4  23bdfff0	addi	r29,r29,#-16
  975  00001aa8  001d0820	add	r1,r0,r29
  976  00001aac  8fc20000	lw	r2,(r30)
  977  00001ab0  ac220000	sw	(r1),r2
  978  00001ab4  8fc20004	lw	r2,4(r30)
  979  00001ab8  ac220004	sw	4(r1),r2
  980  00001abc  8fc2fff4	lw	r2,-12(r30)
  981  00001ac0  ac220008	sw	8(r1),r2
  982  00001ac4  0ffffdc0	jal	_dstrncmp
  983  00001ac8  54000000	nop; delay slot nop
  984  00001acc  23bd0010	addi	r29,r29,#16
  985  00001ad0  64220000	snei	r2,r1,#0
  986  00001ad4  14400010	bnez	r2,L44_LF2
  987  00001ad8  54000000	nop; delay slot nop
  988  00001adc  8fc10000	lw	r1,(r30)
  989  00001ae0  08000028	j	L40_LF2
  990  00001ae4  54000000	nop; delay slot nop
  991  00001ae8          	L44_LF2:
  992  00001ae8  8fc20000	lw	r2,(r30)
  993  00001aec  20410001	addi	r1,r2,#1
  994  00001af0  00011020	add	r2,r0,r1
  995  00001af4  afc20000	sw	(r30),r2
  996  00001af8  0bffff8c	j	L41_LF2
  997  00001afc  54000000	nop; delay slot nop
  998  00001b00          	L42_LF2:
  999  00001b00  20010000	addi	r1,r0,#0
 1000  00001b04  08000004	j	L40_LF2
 1001  00001b08  54000000	nop; delay slot nop
 1002  00001b0c          	L40_LF2:
 1003  00001b0c  8fa20000	lw	r2,0(r29)
 1004  00001b10  8fdffff8	lw	r31,-8(r30)
 1005  00001b14  001ee820	add	r29,r0,r30
 1006  00001b18  8fdefffc	lw	r30,-4(r30)
 1007  00001b1c  4be00000	jr	r31
 1008  00001b20  54000000	nop
 1009  00001b24          	.endproc _dstrstr
 1010  00001b24          	.align 2
 1011  00001b24          	.proc _dmindex
 1012  00001b24          	.global _dmindex
 1013  00001b24          	_dmindex:
 1014                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1015  00001b24  afbefffc	sw	-4(r29),r30; push fp
 1016  00001b28  001df020	add	r30,r0,r29; fp = sp
 1017  00001b2c  afbffff8	sw	-8(r29),r31; push ret addr
 1018  00001b30  2fbd0018	subui	r29,r29,#24; alloc local storage
 1019  00001b34  afa20000	sw	0(r29),r2
 1020  00001b38  54000000	nop
 1021  00001b3c          	L46_LF2:
 1022  00001b3c  8fc10000	lw	r1,(r30)
 1023  00001b40  90220000	lbu	r2,(r1)
 1024  00001b44  64410000	snei	r1,r2,#0
 1025  00001b48  1420000c	bnez	r1,L48_LF2
 1026  00001b4c  54000000	nop; delay slot nop
 1027  00001b50  08000070	j	L47_LF2
 1028  00001b54  54000000	nop; delay slot nop
 1029  00001b58          	L48_LF2:
 1030  00001b58  8fc10004	lw	r1,4(r30)
 1031  00001b5c  afc1fff4	sw	-12(r30),r1
 1032  00001b60          	L49_LF2:
 1033  00001b60  8fc1fff4	lw	r1,-12(r30)
 1034  00001b64  90220000	lbu	r2,(r1)
 1035  00001b68  64410000	snei	r1,r2,#0
 1036  00001b6c  1420000c	bnez	r1,L52_LF2
 1037  00001b70  54000000	nop; delay slot nop
 1038  00001b74  08000044	j	L50_LF2
 1039  00001b78  54000000	nop; delay slot nop
 1040  00001b7c          	L52_LF2:
 1041  00001b7c  8fc10000	lw	r1,(r30)
 1042  00001b80  8fc2fff4	lw	r2,-12(r30)
 1043  00001b84  90210000	lbu	r1,(r1)
 1044  00001b88  90420000	lbu	r2,(r2)
 1045  00001b8c  00220828	seq	r1,r1,r2
 1046  00001b90  10200010	beqz	r1,L51_LF2
 1047  00001b94  54000000	nop; delay slot nop
 1048  00001b98  8fc10000	lw	r1,(r30)
 1049  00001b9c  08000030	j	L45_LF2
 1050  00001ba0  54000000	nop; delay slot nop
 1051  00001ba4          	L53_LF2:
 1052  00001ba4          	L51_LF2:
 1053  00001ba4  8fc2fff4	lw	r2,-12(r30)
 1054  00001ba8  20410001	addi	r1,r2,#1
 1055  00001bac  00011020	add	r2,r0,r1
 1056  00001bb0  afc2fff4	sw	-12(r30),r2
 1057  00001bb4  0bffffa8	j	L49_LF2
 1058  00001bb8  54000000	nop; delay slot nop
 1059  00001bbc          	L50_LF2:
 1060  00001bbc  0bffff7c	j	L46_LF2
 1061  00001bc0  54000000	nop; delay slot nop
 1062  00001bc4          	L47_LF2:
 1063  00001bc4  20010000	addi	r1,r0,#0
 1064  00001bc8  08000004	j	L45_LF2
 1065  00001bcc  54000000	nop; delay slot nop
 1066  00001bd0          	L45_LF2:
 1067  00001bd0  8fa20000	lw	r2,0(r29)
 1068  00001bd4  8fdffff8	lw	r31,-8(r30)
 1069  00001bd8  001ee820	add	r29,r0,r30
 1070  00001bdc  8fdefffc	lw	r30,-4(r30)
 1071  00001be0  4be00000	jr	r31
 1072  00001be4  54000000	nop
 1073  00001be8          	.endproc _dmindex
 1074  00001be8          	.align 2
 1075  00001be8          	.proc _dindex
 1076  00001be8          	.global _dindex
 1077  00001be8          	_dindex:
 1078                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1079  00001be8  afbefffc	sw	-4(r29),r30; push fp
 1080  00001bec  001df020	add	r30,r0,r29; fp = sp
 1081  00001bf0  afbffff8	sw	-8(r29),r31; push ret addr
 1082  00001bf4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1083  00001bf8  afa20000	sw	0(r29),r2
 1084  00001bfc  54000000	nop
 1085  00001c00          	L55_LF2:
 1086  00001c00  8fc10000	lw	r1,(r30)
 1087  00001c04  90220000	lbu	r2,(r1)
 1088  00001c08  64410000	snei	r1,r2,#0
 1089  00001c0c  1420000c	bnez	r1,L57_LF2
 1090  00001c10  54000000	nop; delay slot nop
 1091  00001c14  08000040	j	L56_LF2
 1092  00001c18  54000000	nop; delay slot nop
 1093  00001c1c          	L57_LF2:
 1094  00001c1c  8fc10000	lw	r1,(r30)
 1095  00001c20  90220000	lbu	r2,(r1)
 1096  00001c24  8fc10004	lw	r1,4(r30)
 1097  00001c28  00411028	seq	r2,r2,r1
 1098  00001c2c  10400010	beqz	r2,L58_LF2
 1099  00001c30  54000000	nop; delay slot nop
 1100  00001c34  8fc10000	lw	r1,(r30)
 1101  00001c38  08000028	j	L54_LF2
 1102  00001c3c  54000000	nop; delay slot nop
 1103  00001c40          	L58_LF2:
 1104  00001c40  8fc20000	lw	r2,(r30)
 1105  00001c44  20410001	addi	r1,r2,#1
 1106  00001c48  00011020	add	r2,r0,r1
 1107  00001c4c  afc20000	sw	(r30),r2
 1108  00001c50  0bffffac	j	L55_LF2
 1109  00001c54  54000000	nop; delay slot nop
 1110  00001c58          	L56_LF2:
 1111  00001c58  20010000	addi	r1,r0,#0
 1112  00001c5c  08000004	j	L54_LF2
 1113  00001c60  54000000	nop; delay slot nop
 1114  00001c64          	L54_LF2:
 1115  00001c64  8fa20000	lw	r2,0(r29)
 1116  00001c68  8fdffff8	lw	r31,-8(r30)
 1117  00001c6c  001ee820	add	r29,r0,r30
 1118  00001c70  8fdefffc	lw	r30,-4(r30)
 1119  00001c74  4be00000	jr	r31
 1120  00001c78  54000000	nop
 1121  00001c7c          	.endproc _dindex
 1122  00001c7c          	.align 2
 1123  00001c7c          	.proc _ditoa
 1124  00001c7c          	.global _ditoa
 1125  00001c7c          	_ditoa:
 1126                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1127  00001c7c  afbefffc	sw	-4(r29),r30; push fp
 1128  00001c80  001df020	add	r30,r0,r29; fp = sp
 1129  00001c84  afbffff8	sw	-8(r29),r31; push ret addr
 1130  00001c88  2fbd0018	subui	r29,r29,#24; alloc local storage
 1131  00001c8c  afa20000	sw	0(r29),r2
 1132  00001c90  afa30004	sw	4(r29),r3
 1133  00001c94  8fc10000	lw	r1,(r30)
 1134  00001c98  68220000	slti	r2,r1,#0
 1135  00001c9c  1040002c	beqz	r2,L60_LF2
 1136  00001ca0  54000000	nop; delay slot nop
 1137  00001ca4  8fc10004	lw	r1,4(r30)
 1138  00001ca8  20220001	addi	r2,r1,#1
 1139  00001cac  afc20004	sw	4(r30),r2
 1140  00001cb0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1141  00001cb4  a0220000	sb	(r1),r2
 1142  00001cb8  8fc10000	lw	r1,(r30)
 1143  00001cbc  00011022	sub	r2,r0,r1
 1144  00001cc0  afc20000	sw	(r30),r2
 1145  00001cc4  08000118	j	L61_LF2
 1146  00001cc8  54000000	nop; delay slot nop
 1147  00001ccc          	L60_LF2:
 1148  00001ccc  8fc10000	lw	r1,(r30)
 1149  00001cd0  64220000	snei	r2,r1,#0
 1150  00001cd4  14400020	bnez	r2,L62_LF2
 1151  00001cd8  54000000	nop; delay slot nop
 1152  00001cdc  8fc10004	lw	r1,4(r30)
 1153  00001ce0  20220001	addi	r2,r1,#1
 1154  00001ce4  afc20004	sw	4(r30),r2
 1155  00001ce8  20020030	addi	r2,r0,(#0x30)&0xff
 1156  00001cec  a0220000	sb	(r1),r2
 1157  00001cf0  080000ec	j	L61_LF2
 1158  00001cf4  54000000	nop; delay slot nop
 1159  00001cf8          	L62_LF2:
 1160  00001cf8  20010001	addi	r1,r0,#1
 1161  00001cfc  afc1fff4	sw	-12(r30),r1
 1162  00001d00          	L64_LF2:
 1163  00001d00  8fc1fff4	lw	r1,-12(r30)
 1164  00001d04  8fc20000	lw	r2,(r30)
 1165  00001d08  0022082c	sle	r1,r1,r2
 1166  00001d0c  1420000c	bnez	r1,L66_LF2
 1167  00001d10  54000000	nop; delay slot nop
 1168  00001d14  08000024	j	L65_LF2
 1169  00001d18  54000000	nop; delay slot nop
 1170  00001d1c          	L67_LF2:
 1171  00001d1c          	L66_LF2:
 1172  00001d1c  8fc1fff4	lw	r1,-12(r30)
 1173  00001d20  00011820	add	r3,r0,r1
 1174  00001d24  50620002	slli	r2,r3,#0x2
 1175  00001d28  00411020	add	r2,r2,r1
 1176  00001d2c  50410001	slli	r1,r2,#0x1
 1177  00001d30  afc1fff4	sw	-12(r30),r1
 1178  00001d34  0bffffc8	j	L64_LF2
 1179  00001d38  54000000	nop; delay slot nop
 1180  00001d3c          	L65_LF2:
 1181  00001d3c  54000000	nop
 1182  00001d40          	L68_LF2:
 1183  00001d40  8fc1fff4	lw	r1,-12(r30)
 1184  00001d44  2002000a	addi	r2,r0,#10
 1185  00001d48  00200035	movi2fp	f0,r1
 1186  00001d4c  00400835	movi2fp	f1,r2
 1187  00001d50  0401000f	div	f0,f0,f1
 1188  00001d54  00000834	movfp2i	r1,f0
 1189  00001d58  afc1fff4	sw	-12(r30),r1
 1190  00001d5c  8fc10004	lw	r1,4(r30)
 1191  00001d60  20220001	addi	r2,r1,#1
 1192  00001d64  afc20004	sw	4(r30),r2
 1193  00001d68  8fc20000	lw	r2,(r30)
 1194  00001d6c  8fc3fff4	lw	r3,-12(r30)
 1195  00001d70  00400035	movi2fp	f0,r2
 1196  00001d74  00600835	movi2fp	f1,r3
 1197  00001d78  0401000f	div	f0,f0,f1
 1198  00001d7c  00001034	movfp2i	r2,f0
 1199  00001d80  00021820	add	r3,r0,r2
 1200  00001d84  20620030	addi	r2,r3,#48
 1201  00001d88  a0220000	sb	(r1),r2
 1202  00001d8c  8fc10000	lw	r1,(r30)
 1203  00001d90  8fc3fff4	lw	r3,-12(r30)
 1204  00001d94  00200035	movi2fp	f0,r1
 1205  00001d98  00600835	movi2fp	f1,r3
 1206  00001d9c  0401000f	div	f0,f0,f1
 1207  00001da0  00001034	movfp2i	r2,f0
 1208  00001da4  8fc3fff4	lw	r3,-12(r30)
 1209  00001da8  00400035	movi2fp	f0,r2
 1210  00001dac  00600835	movi2fp	f1,r3
 1211  00001db0  0401000e	mult	f0,f0,f1
 1212  00001db4  00001034	movfp2i	r2,f0
 1213  00001db8  00220822	sub	r1,r1,r2
 1214  00001dbc  afc10000	sw	(r30),r1
 1215  00001dc0          	L70_LF2:
 1216  00001dc0  8fc1fff4	lw	r1,-12(r30)
 1217  00001dc4  6c220001	sgti	r2,r1,#1
 1218  00001dc8  1440000c	bnez	r2,L71_LF2
 1219  00001dcc  54000000	nop; delay slot nop
 1220  00001dd0  0800000c	j	L61_LF2
 1221  00001dd4  54000000	nop; delay slot nop
 1222  00001dd8          	L71_LF2:
 1223  00001dd8  0bffff64	j	L68_LF2
 1224  00001ddc  54000000	nop; delay slot nop
 1225  00001de0          	L69_LF2:
 1226  00001de0          	L63_LF2:
 1227  00001de0          	L61_LF2:
 1228  00001de0  8fc10004	lw	r1,4(r30)
 1229  00001de4  20020000	addi	r2,r0,(#0x0)&0xff
 1230  00001de8  a0220000	sb	(r1),r2
 1231  00001dec          	L59_LF2:
 1232  00001dec  8fa20000	lw	r2,0(r29)
 1233  00001df0  8fa30004	lw	r3,4(r29)
 1234  00001df4  8fdffff8	lw	r31,-8(r30)
 1235  00001df8  001ee820	add	r29,r0,r30
 1236  00001dfc  8fdefffc	lw	r30,-4(r30)
 1237  00001e00  4be00000	jr	r31
 1238  00001e04  54000000	nop
 1239  00001e08          	.endproc _ditoa
 1240  00001e08          	.align 2
 1241  00001e08          	.proc _dstrtol
 1242  00001e08          	.global _dstrtol
 1243  00001e08          	_dstrtol:
 1244                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1245  00001e08  afbefffc	sw	-4(r29),r30; push fp
 1246  00001e0c  001df020	add	r30,r0,r29; fp = sp
 1247  00001e10  afbffff8	sw	-8(r29),r31; push ret addr
 1248  00001e14  2fbd0020	subui	r29,r29,#32; alloc local storage
 1249  00001e18  afa20000	sw	0(r29),r2
 1250  00001e1c  20010000	addi	r1,r0,#0
 1251  00001e20  afc1fff4	sw	-12(r30),r1
 1252  00001e24          	L73_LF2:
 1253  00001e24  8fc10000	lw	r1,(r30)
 1254  00001e28  90220000	lbu	r2,(r1)
 1255  00001e2c  60410020	seqi	r1,r2,#32
 1256  00001e30  14200034	bnez	r1,L75_LF2
 1257  00001e34  54000000	nop; delay slot nop
 1258  00001e38  8fc10000	lw	r1,(r30)
 1259  00001e3c  90220000	lbu	r2,(r1)
 1260  00001e40  60410009	seqi	r1,r2,#9
 1261  00001e44  14200020	bnez	r1,L75_LF2
 1262  00001e48  54000000	nop; delay slot nop
 1263  00001e4c  8fc10000	lw	r1,(r30)
 1264  00001e50  90220000	lbu	r2,(r1)
 1265  00001e54  6041000a	seqi	r1,r2,#10
 1266  00001e58  1420000c	bnez	r1,L75_LF2
 1267  00001e5c  54000000	nop; delay slot nop
 1268  00001e60  0800001c	j	L74_LF2
 1269  00001e64  54000000	nop; delay slot nop
 1270  00001e68          	L75_LF2:
 1271  00001e68  8fc20000	lw	r2,(r30)
 1272  00001e6c  20410001	addi	r1,r2,#1
 1273  00001e70  00011020	add	r2,r0,r1
 1274  00001e74  afc20000	sw	(r30),r2
 1275  00001e78  0bffffa8	j	L73_LF2
 1276  00001e7c  54000000	nop; delay slot nop
 1277  00001e80          	L74_LF2:
 1278  00001e80  8fc10004	lw	r1,4(r30)
 1279  00001e84  64220000	snei	r2,r1,#0
 1280  00001e88  10400010	beqz	r2,L76_LF2
 1281  00001e8c  54000000	nop; delay slot nop
 1282  00001e90  8fc10004	lw	r1,4(r30)
 1283  00001e94  8fc20000	lw	r2,(r30)
 1284  00001e98  ac220000	sw	(r1),r2
 1285  00001e9c          	L76_LF2:
 1286  00001e9c  8fc10000	lw	r1,(r30)
 1287  00001ea0  90220000	lbu	r2,(r1)
 1288  00001ea4  64410000	snei	r1,r2,#0
 1289  00001ea8  14200010	bnez	r1,L77_LF2
 1290  00001eac  54000000	nop; delay slot nop
 1291  00001eb0  8fc1fff4	lw	r1,-12(r30)
 1292  00001eb4  08000294	j	L72_LF2
 1293  00001eb8  54000000	nop; delay slot nop
 1294  00001ebc          	L77_LF2:
 1295  00001ebc  8fc10000	lw	r1,(r30)
 1296  00001ec0  90220000	lbu	r2,(r1)
 1297  00001ec4  6041002d	seqi	r1,r2,#45
 1298  00001ec8  10200024	beqz	r1,L78_LF2
 1299  00001ecc  54000000	nop; delay slot nop
 1300  00001ed0  2001ffff	addi	r1,r0,#-1
 1301  00001ed4  afc1ffec	sw	-20(r30),r1
 1302  00001ed8  8fc20000	lw	r2,(r30)
 1303  00001edc  20410001	addi	r1,r2,#1
 1304  00001ee0  00011020	add	r2,r0,r1
 1305  00001ee4  afc20000	sw	(r30),r2
 1306  00001ee8  0800000c	j	L79_LF2
 1307  00001eec  54000000	nop; delay slot nop
 1308  00001ef0          	L78_LF2:
 1309  00001ef0  20010001	addi	r1,r0,#1
 1310  00001ef4  afc1ffec	sw	-20(r30),r1
 1311  00001ef8          	L79_LF2:
 1312  00001ef8  8fc10008	lw	r1,8(r30)
 1313  00001efc  64220000	snei	r2,r1,#0
 1314  00001f00  14400090	bnez	r2,L80_LF2
 1315  00001f04  54000000	nop; delay slot nop
 1316  00001f08  8fc10000	lw	r1,(r30)
 1317  00001f0c  90220000	lbu	r2,(r1)
 1318  00001f10  60410030	seqi	r1,r2,#48
 1319  00001f14  10200074	beqz	r1,L81_LF2
 1320  00001f18  54000000	nop; delay slot nop
 1321  00001f1c  8fc20000	lw	r2,(r30)
 1322  00001f20  20410001	addi	r1,r2,#1
 1323  00001f24  00011020	add	r2,r0,r1
 1324  00001f28  afc20000	sw	(r30),r2
 1325  00001f2c  8fc10000	lw	r1,(r30)
 1326  00001f30  90220000	lbu	r2,(r1)
 1327  00001f34  60410078	seqi	r1,r2,#120
 1328  00001f38  14200020	bnez	r1,L83_LF2
 1329  00001f3c  54000000	nop; delay slot nop
 1330  00001f40  8fc10000	lw	r1,(r30)
 1331  00001f44  90220000	lbu	r2,(r1)
 1332  00001f48  60410058	seqi	r1,r2,#88
 1333  00001f4c  1420000c	bnez	r1,L83_LF2
 1334  00001f50  54000000	nop; delay slot nop
 1335  00001f54  08000024	j	L82_LF2
 1336  00001f58  54000000	nop; delay slot nop
 1337  00001f5c          	L83_LF2:
 1338  00001f5c  20010010	addi	r1,r0,#16
 1339  00001f60  afc10008	sw	8(r30),r1
 1340  00001f64  8fc20000	lw	r2,(r30)
 1341  00001f68  20410001	addi	r1,r2,#1
 1342  00001f6c  00011020	add	r2,r0,r1
 1343  00001f70  afc20000	sw	(r30),r2
 1344  00001f74  0800000c	j	L84_LF2
 1345  00001f78  54000000	nop; delay slot nop
 1346  00001f7c          	L82_LF2:
 1347  00001f7c  20010008	addi	r1,r0,#8
 1348  00001f80  afc10008	sw	8(r30),r1
 1349  00001f84          	L84_LF2:
 1350  00001f84  0800000c	j	L80_LF2
 1351  00001f88  54000000	nop; delay slot nop
 1352  00001f8c          	L81_LF2:
 1353  00001f8c  2001000a	addi	r1,r0,#10
 1354  00001f90  afc10008	sw	8(r30),r1
 1355  00001f94          	L85_LF2:
 1356  00001f94          	L80_LF2:
 1357  00001f94  8fc10008	lw	r1,8(r30)
 1358  00001f98  70220000	slei	r2,r1,#0
 1359  00001f9c  1440001c	bnez	r2,L87_LF2
 1360  00001fa0  54000000	nop; delay slot nop
 1361  00001fa4  8fc10008	lw	r1,8(r30)
 1362  00001fa8  6c220010	sgti	r2,r1,#16
 1363  00001fac  1440000c	bnez	r2,L87_LF2
 1364  00001fb0  54000000	nop; delay slot nop
 1365  00001fb4  08000010	j	L86_LF2
 1366  00001fb8  54000000	nop; delay slot nop
 1367  00001fbc          	L87_LF2:
 1368  00001fbc  8fc1fff4	lw	r1,-12(r30)
 1369  00001fc0  08000188	j	L72_LF2
 1370  00001fc4  54000000	nop; delay slot nop
 1371  00001fc8          	L86_LF2:
 1372  00001fc8  54000000	nop
 1373  00001fcc          	L88_LF2:
 1374  00001fcc  8fc10000	lw	r1,(r30)
 1375  00001fd0  90220000	lbu	r2,(r1)
 1376  00001fd4  6c41002f	sgtui	r1,r2,#47
 1377  00001fd8  10200030	beqz	r1,L91_LF2
 1378  00001fdc  54000000	nop; delay slot nop
 1379  00001fe0  8fc10000	lw	r1,(r30)
 1380  00001fe4  90220000	lbu	r2,(r1)
 1381  00001fe8  70410039	sleui	r1,r2,#57
 1382  00001fec  1020001c	beqz	r1,L91_LF2
 1383  00001ff0  54000000	nop; delay slot nop
 1384  00001ff4  8fc10000	lw	r1,(r30)
 1385  00001ff8  90220000	lbu	r2,(r1)
 1386  00001ffc  2041ffd0	addi	r1,r2,#-48
 1387  00002000  afc1fff0	sw	-16(r30),r1
 1388  00002004  0800008c	j	L92_LF2
 1389  00002008  54000000	nop; delay slot nop
 1390  0000200c          	L91_LF2:
 1391  0000200c  8fc10000	lw	r1,(r30)
 1392  00002010  90220000	lbu	r2,(r1)
 1393  00002014  6c410060	sgtui	r1,r2,#96
 1394  00002018  10200030	beqz	r1,L93_LF2
 1395  0000201c  54000000	nop; delay slot nop
 1396  00002020  8fc10000	lw	r1,(r30)
 1397  00002024  90220000	lbu	r2,(r1)
 1398  00002028  7041007a	sleui	r1,r2,#122
 1399  0000202c  1020001c	beqz	r1,L93_LF2
 1400  00002030  54000000	nop; delay slot nop
 1401  00002034  8fc10000	lw	r1,(r30)
 1402  00002038  90220000	lbu	r2,(r1)
 1403  0000203c  2041ffa9	addi	r1,r2,#-87
 1404  00002040  afc1fff0	sw	-16(r30),r1
 1405  00002044  0800004c	j	L92_LF2
 1406  00002048  54000000	nop; delay slot nop
 1407  0000204c          	L93_LF2:
 1408  0000204c  8fc10000	lw	r1,(r30)
 1409  00002050  90220000	lbu	r2,(r1)
 1410  00002054  6c410040	sgtui	r1,r2,#64
 1411  00002058  10200030	beqz	r1,L95_LF2
 1412  0000205c  54000000	nop; delay slot nop
 1413  00002060  8fc10000	lw	r1,(r30)
 1414  00002064  90220000	lbu	r2,(r1)
 1415  00002068  7041005a	sleui	r1,r2,#90
 1416  0000206c  1020001c	beqz	r1,L95_LF2
 1417  00002070  54000000	nop; delay slot nop
 1418  00002074  8fc10000	lw	r1,(r30)
 1419  00002078  90220000	lbu	r2,(r1)
 1420  0000207c  2041ffc9	addi	r1,r2,#-55
 1421  00002080  afc1fff0	sw	-16(r30),r1
 1422  00002084  0800000c	j	L92_LF2
 1423  00002088  54000000	nop; delay slot nop
 1424  0000208c          	L95_LF2:
 1425  0000208c  200103e8	addi	r1,r0,#1000
 1426  00002090  afc1fff0	sw	-16(r30),r1
 1427  00002094          	L96_LF2:
 1428  00002094          	L94_LF2:
 1429  00002094          	L92_LF2:
 1430  00002094  8fc1fff0	lw	r1,-16(r30)
 1431  00002098  8fc20008	lw	r2,8(r30)
 1432  0000209c  0022082a	slt	r1,r1,r2
 1433  000020a0  10200040	beqz	r1,L90_LF2
 1434  000020a4  54000000	nop; delay slot nop
 1435  000020a8  8fc1fff4	lw	r1,-12(r30)
 1436  000020ac  8fc20008	lw	r2,8(r30)
 1437  000020b0  00200035	movi2fp	f0,r1
 1438  000020b4  00400835	movi2fp	f1,r2
 1439  000020b8  0401000e	mult	f0,f0,f1
 1440  000020bc  00000834	movfp2i	r1,f0
 1441  000020c0  afc1fff4	sw	-12(r30),r1
 1442  000020c4  8fc1fff4	lw	r1,-12(r30)
 1443  000020c8  8fc2fff0	lw	r2,-16(r30)
 1444  000020cc  00220820	add	r1,r1,r2
 1445  000020d0  afc1fff4	sw	-12(r30),r1
 1446  000020d4  8fc20000	lw	r2,(r30)
 1447  000020d8  20410001	addi	r1,r2,#1
 1448  000020dc  00011020	add	r2,r0,r1
 1449  000020e0  afc20000	sw	(r30),r2
 1450  000020e4          	L97_LF2:
 1451  000020e4          	L90_LF2:
 1452  000020e4  8fc1fff0	lw	r1,-16(r30)
 1453  000020e8  8fc20008	lw	r2,8(r30)
 1454  000020ec  0022082a	slt	r1,r1,r2
 1455  000020f0  1420000c	bnez	r1,L98_LF2
 1456  000020f4  54000000	nop; delay slot nop
 1457  000020f8  0800000c	j	L89_LF2
 1458  000020fc  54000000	nop; delay slot nop
 1459  00002100          	L98_LF2:
 1460  00002100  0bfffec8	j	L88_LF2
 1461  00002104  54000000	nop; delay slot nop
 1462  00002108          	L89_LF2:
 1463  00002108  8fc10004	lw	r1,4(r30)
 1464  0000210c  64220000	snei	r2,r1,#0
 1465  00002110  10400010	beqz	r2,L99_LF2
 1466  00002114  54000000	nop; delay slot nop
 1467  00002118  8fc10004	lw	r1,4(r30)
 1468  0000211c  8fc20000	lw	r2,(r30)
 1469  00002120  ac220000	sw	(r1),r2
 1470  00002124          	L99_LF2:
 1471  00002124  8fc1fff4	lw	r1,-12(r30)
 1472  00002128  8fc2ffec	lw	r2,-20(r30)
 1473  0000212c  00200035	movi2fp	f0,r1
 1474  00002130  00400835	movi2fp	f1,r2
 1475  00002134  0401000e	mult	f0,f0,f1
 1476  00002138  00000834	movfp2i	r1,f0
 1477  0000213c  afc1fff4	sw	-12(r30),r1
 1478  00002140  8fc1fff4	lw	r1,-12(r30)
 1479  00002144  08000004	j	L72_LF2
 1480  00002148  54000000	nop; delay slot nop
 1481  0000214c          	L72_LF2:
 1482  0000214c  8fa20000	lw	r2,0(r29)
 1483  00002150  8fdffff8	lw	r31,-8(r30)
 1484  00002154  001ee820	add	r29,r0,r30
 1485  00002158  8fdefffc	lw	r30,-4(r30)
 1486  0000215c  4be00000	jr	r31
 1487  00002160  54000000	nop
 1488  00002164          	.endproc _dstrtol
 1489  00002164          	.align 2
 1490  00002164          	.proc _bcopy
 1491  00002164          	.global _bcopy
 1492  00002164          	_bcopy:
 1493                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1494  00002164  afbefffc	sw	-4(r29),r30; push fp
 1495  00002168  001df020	add	r30,r0,r29; fp = sp
 1496  0000216c  afbffff8	sw	-8(r29),r31; push ret addr
 1497  00002170  2fbd0010	subui	r29,r29,#16; alloc local storage
 1498  00002174  afa20000	sw	0(r29),r2
 1499  00002178  afa30004	sw	4(r29),r3
 1500  0000217c  54000000	nop
 1501  00002180          	L101_LF2:
 1502  00002180  8fc10008	lw	r1,8(r30)
 1503  00002184  2022ffff	addi	r2,r1,#-1
 1504  00002188  afc20008	sw	8(r30),r2
 1505  0000218c  6c210000	sgti	r1,r1,#0
 1506  00002190  1420000c	bnez	r1,L103_LF2
 1507  00002194  54000000	nop; delay slot nop
 1508  00002198  0800002c	j	L102_LF2
 1509  0000219c  54000000	nop; delay slot nop
 1510  000021a0          	L103_LF2:
 1511  000021a0  8fc10004	lw	r1,4(r30)
 1512  000021a4  20220001	addi	r2,r1,#1
 1513  000021a8  afc20004	sw	4(r30),r2
 1514  000021ac  8fc20000	lw	r2,(r30)
 1515  000021b0  20430001	addi	r3,r2,#1
 1516  000021b4  afc30000	sw	(r30),r3
 1517  000021b8  80420000	lb	r2,(r2)
 1518  000021bc  a0220000	sb	(r1),r2
 1519  000021c0  0bffffbc	j	L101_LF2
 1520  000021c4  54000000	nop; delay slot nop
 1521  000021c8          	L102_LF2:
 1522  000021c8          	L100_LF2:
 1523  000021c8  8fa20000	lw	r2,0(r29)
 1524  000021cc  8fa30004	lw	r3,4(r29)
 1525  000021d0  8fdffff8	lw	r31,-8(r30)
 1526  000021d4  001ee820	add	r29,r0,r30
 1527  000021d8  8fdefffc	lw	r30,-4(r30)
 1528  000021dc  4be00000	jr	r31
 1529  000021e0  54000000	nop
 1530  000021e4          	.endproc _bcopy
 1531  000021e4          	.align 2
 1532  000021e4          	.proc _bzero
 1533  000021e4          	.global _bzero
 1534  000021e4          	_bzero:
 1535                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1536  000021e4  afbefffc	sw	-4(r29),r30; push fp
 1537  000021e8  001df020	add	r30,r0,r29; fp = sp
 1538  000021ec  afbffff8	sw	-8(r29),r31; push ret addr
 1539  000021f0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1540  000021f4  afa20000	sw	0(r29),r2
 1541  000021f8  54000000	nop
 1542  000021fc          	L105_LF2:
 1543  000021fc  8fc10004	lw	r1,4(r30)
 1544  00002200  2022ffff	addi	r2,r1,#-1
 1545  00002204  afc20004	sw	4(r30),r2
 1546  00002208  6c210000	sgti	r1,r1,#0
 1547  0000220c  1420000c	bnez	r1,L107_LF2
 1548  00002210  54000000	nop; delay slot nop
 1549  00002214  08000020	j	L106_LF2
 1550  00002218  54000000	nop; delay slot nop
 1551  0000221c          	L107_LF2:
 1552  0000221c  8fc10000	lw	r1,(r30)
 1553  00002220  20220001	addi	r2,r1,#1
 1554  00002224  afc20000	sw	(r30),r2
 1555  00002228  20020000	addi	r2,r0,(#0x0)&0xff
 1556  0000222c  a0220000	sb	(r1),r2
 1557  00002230  0bffffc8	j	L105_LF2
 1558  00002234  54000000	nop; delay slot nop
 1559  00002238          	L106_LF2:
 1560  00002238          	L104_LF2:
 1561  00002238  8fa20000	lw	r2,0(r29)
 1562  0000223c  8fdffff8	lw	r31,-8(r30)
 1563  00002240  001ee820	add	r29,r0,r30
 1564  00002244  8fdefffc	lw	r30,-4(r30)
 1565  00002248  4be00000	jr	r31
 1566  0000224c  54000000	nop
 1567  00002250          	.endproc _bzero
 1568  00002250          	.align 2
 1569  00002250          	.proc _min
 1570  00002250          	.global _min
 1571  00002250          	_min:
 1572                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1573  00002250  afbefffc	sw	-4(r29),r30; push fp
 1574  00002254  001df020	add	r30,r0,r29; fp = sp
 1575  00002258  afbffff8	sw	-8(r29),r31; push ret addr
 1576  0000225c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1577  00002260  afa20000	sw	0(r29),r2
 1578  00002264  afa30004	sw	4(r29),r3
 1579  00002268  8fc10000	lw	r1,(r30)
 1580  0000226c  8fc20004	lw	r2,4(r30)
 1581  00002270  0022182c	sle	r3,r1,r2
 1582  00002274  14600008	bnez	r3,L109_LF2
 1583  00002278  54000000	nop; delay slot nop
 1584  0000227c  8fc10004	lw	r1,4(r30)
 1585  00002280          	L109_LF2:
 1586  00002280  08000004	j	L108_LF2
 1587  00002284  54000000	nop; delay slot nop
 1588  00002288          	L108_LF2:
 1589  00002288  8fa20000	lw	r2,0(r29)
 1590  0000228c  8fa30004	lw	r3,4(r29)
 1591  00002290  8fdffff8	lw	r31,-8(r30)
 1592  00002294  001ee820	add	r29,r0,r30
 1593  00002298  8fdefffc	lw	r30,-4(r30)
 1594  0000229c  4be00000	jr	r31
 1595  000022a0  54000000	nop
 1596  000022a4          	.endproc _min
 1597                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1598                      ;;;
 1599                      ;;; Most of the traps are called in files from libtraps.
 1602  000022a4          	.align 2
 1603  000022a4          	.proc _exit
 1604  000022a4          	.global _exit
 1605  000022a4          	_exit:
 1606  000022a4  44000300	trap	#0x300
 1607  000022a8  4be00000	jr	r31
 1608  000022ac  54000000	nop
 1609  000022b0          	.endproc _exit
 1611                      ; for the benefit of gcc.
 1612  000022b0          	.proc ___main
 1613  000022b0          	.global ___main
 1614  000022b0          	___main:
 1615  000022b0  4be00000	jr	r31
 1616  000022b4  54000000	nop
 1617  000022b8          	.endproc ___main
 1618  000022b8          	.text
 1619  000022b8          	.global _etext
 1620  000022b8          	_etext:
 1621  000022b8          	.align 3
 1622  000022b8          	.data
 1623  00003175          	.global _edata
 1624  00003175          	_edata:
