 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 86
    4                      ; Text size: 4316
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  71342028	.ascii "q4 (%d): Fork!\n\000"
   82  00003004  2564293a	
   82  00003008  20466f72	
   82  0000300c  6b210a00	
   83  00003010          	.align 2
   84  00003010          	LC1_LF0:
   85  00003010  466f726b	.ascii "Fork (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   85  00003014  20282564	
   85  00003018  293a2042	
   85  0000301c  61642073	
   85  00003020  656d6170	
   85  00003024  686f7265	
   85  00003028  20735f70	
   85  0000302c  726f6373	
   85  00003030  5f636f6d	
   85  00003034  706c6574	
   85  00003038  65642028	
   85  0000303c  25642921	
   85  00003040  0a00    	
   86  00003042          	.align 2
   87  00003044          	LC2_LF0:
   88  00003044  466f726b	.ascii "Fork (%d): Done!\n\000"
   88  00003048  20282564	
   88  0000304c  293a2044	
   88  00003050  6f6e6521	
   88  00003054  0a00    	
   89  00003056          	.text
   90  000010d4          	.align 2
   91  000010d4          	.proc _main
   92  000010d4          	.global _main
   93  000010d4          	_main:
   94                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   95  000010d4  afbefffc	sw	-4(r29),r30; push fp
   96  000010d8  001df020	add	r30,r0,r29; fp = sp
   97  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   98  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
   99  000010e4  8fc20004	lw	r2,4(r30)
  100  000010e8  0c000fe8	jal	___main
  101  000010ec  54000000	nop; not filled.
  102  000010f0  23bdfff0	addi	r29,r29,#-16
  103  000010f4  8c420004	lw	r2,4(r2)
  104  000010f8  afa20000	sw	(r29),r2
  105  000010fc  20030000	addi	r3,r0,#0
  106  00001100  afa30004	sw	4(r29),r3
  107  00001104  2003000a	addi	r3,r0,#10
  108  00001108  afa30008	sw	8(r29),r3
  109  0000110c  0c000ac8	jal	_dstrtol
  110  00001110  54000000	nop; not filled.
  111  00001114  00011020	add	r2,r0,r1
  112  00001118  0c000104	jal	_getpid
  113  0000111c  54000000	nop; not filled.
  114  00001120  3c030000	lhi	r3,((LC0_LF0)>>16)&0xffff
  115  00001124  24633000	addui	r3,r3,(LC0_LF0)&0xffff
  116  00001128  afa30000	sw	(r29),r3
  117  0000112c  afa10004	sw	4(r29),r1
  118  00001130  0c0000d4	jal	_Printf
  119  00001134  54000000	nop; not filled.
  120  00001138  0c0000d8	jal	_fork
  121  0000113c  54000000	nop; not filled.
  122  00001140  afa20000	sw	(r29),r2
  123  00001144  0c000120	jal	_sem_signal
  124  00001148  54000000	nop; not filled.
  125  0000114c  23bd0010	addi	r29,r29,#16
  126  00001150  64210001	snei	r1,r1,#1
  127  00001154  10200038	beqz	r1,L16_LF0
  128  00001158  54000000	nop; not filled.
  129  0000115c  0c0000c0	jal	_getpid
  130  00001160  54000000	nop; not filled.
  131  00001164  23bdfff0	addi	r29,r29,#-16
  132  00001168  3c030000	lhi	r3,((LC1_LF0)>>16)&0xffff
  133  0000116c  24633010	addui	r3,r3,(LC1_LF0)&0xffff
  134  00001170  afa30000	sw	(r29),r3
  135  00001174  afa10004	sw	4(r29),r1
  136  00001178  afa20008	sw	8(r29),r2
  137  0000117c  0c000088	jal	_Printf
  138  00001180  54000000	nop; not filled.
  139  00001184  0c000194	jal	_Exit
  140  00001188  54000000	nop; not filled.
  141  0000118c  23bd0010	addi	r29,r29,#16
  142  00001190          	L16_LF0:
  143  00001190  0c00008c	jal	_getpid
  144  00001194  54000000	nop; not filled.
  145  00001198  23bdfff8	addi	r29,r29,#-8
  146  0000119c  3c030000	lhi	r3,((LC2_LF0)>>16)&0xffff
  147  000011a0  24633044	addui	r3,r3,(LC2_LF0)&0xffff
  148  000011a4  afa30000	sw	(r29),r3
  149  000011a8  afa10004	sw	4(r29),r1
  150  000011ac  0c000058	jal	_Printf
  151  000011b0  54000000	nop; not filled.
  152  000011b4  23bd0008	addi	r29,r29,#8
  153  000011b8  0c000f0c	jal	_exit
  154  000011bc  54000000	nop
  155  000011c0          	.endproc _main
  156                      ;;;
  157                      ;;; Stub functions for DLX traps.
  158                      ;;;
  159                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  160                      ;;;
  161                      ;;; The traps such as Open and Close
  162                      ;;; (note the capital letters) are for use by user programs.  The traps
  163                      ;;; with names such as open and close (lower case) are for use by the OS.
  164                      ;;;
  167  000011c0          	.align 2
  169                      ;;; The following are the traps to be used by user-level programs
  170                      ;;;
  172  000011c0          	.align 2
  173  000011c0          	.proc _Open
  174  000011c0          	.global _Open
  175  000011c0          	_Open:
  176                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  177                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  178                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  179  000011c0  44000213	trap	#0x213
  180  000011c4  4be00000	jr	r31
  181  000011c8  54000000	nop
  182  000011cc          	.endproc _Open
  184  000011cc          	.proc _Close
  185  000011cc          	.global _Close
  186  000011cc          	_Close:
  187  000011cc  44000214	trap	#0x214
  188  000011d0  4be00000	jr	r31
  189  000011d4  54000000	nop
  190  000011d8          	.endproc _Close
  192  000011d8          	.proc _Read
  193  000011d8          	.global _Read
  194  000011d8          	_Read:
  195  000011d8  44000210	trap	#0x210
  196  000011dc  4be00000	jr	r31
  197  000011e0  54000000	nop
  198  000011e4          	.endproc _Read
  200  000011e4          	.proc _Write
  201  000011e4          	.global _Write
  202  000011e4          	_Write:
  203  000011e4  44000211	trap	#0x211
  204  000011e8  4be00000	jr	r31
  205  000011ec  54000000	nop
  206  000011f0          	.endproc _Write
  208  000011f0          	.proc _Lseek
  209  000011f0          	.global _Lseek
  210  000011f0          	_Lseek:
  211  000011f0  44000212	trap	#0x212
  212  000011f4  4be00000	jr	r31
  213  000011f8  54000000	nop
  214  000011fc          	.endproc _Lseek
  216  000011fc          	.proc _Putchar
  217  000011fc          	.global _Putchar
  218  000011fc          	_Putchar:
  219  000011fc  44000280	trap	#0x280
  220  00001200  4be00000	jr	r31
  221  00001204  54000000	nop
  222  00001208          	.endproc _Putchar
  224  00001208          	.proc _Printf
  225  00001208          	.global _Printf
  226  00001208          	_Printf:
  227  00001208  44000201	trap	#0x201
  228  0000120c  4be00000	jr	r31
  229  00001210  54000000	nop
  230  00001214          	.endproc _Printf
  232  00001214          	.proc _fork
  233  00001214          	.global _fork
  234  00001214          	_fork:
  235  00001214  44000430	trap	#0x430
  236  00001218  4be00000	jr	r31
  237  0000121c  54000000	nop
  238  00001220          	.endproc _fork
  240  00001220          	.proc _getpid
  241  00001220          	.global _getpid
  242  00001220          	_getpid:
  243  00001220  44000431	trap	#0x431
  244  00001224  4be00000	jr	r31
  245  00001228  54000000	nop
  246  0000122c          	.endproc _getpid
  248  0000122c          	.proc _process_create
  249  0000122c          	.global _process_create
  250  0000122c          	_process_create:
  251  0000122c  44000432	trap	#0x432
  252  00001230  4be00000	jr	r31
  253  00001234  54000000	nop
  254  00001238          	.endproc _process_create
  256  00001238          	.proc _shmget
  257  00001238          	.global _shmget
  258  00001238          	_shmget:
  259  00001238  44000440	trap	#0x440
  260  0000123c  4be00000	jr	r31
  261  00001240  54000000	nop
  262  00001244          	.endproc _shmget
  264  00001244          	.proc _shmat
  265  00001244          	.global _shmat
  266  00001244          	_shmat:
  267  00001244  44000441	trap	#0x441
  268  00001248  4be00000	jr	r31
  269  0000124c  54000000	nop
  270  00001250          	.endproc _shmat
  272  00001250          	.proc _sem_create
  273  00001250          	.global _sem_create
  274  00001250          	_sem_create:
  275  00001250  44000450	trap	#0x450
  276  00001254  4be00000	jr	r31
  277  00001258  54000000	nop
  278  0000125c          	.endproc _sem_create
  280  0000125c          	.proc _sem_wait
  281  0000125c          	.global _sem_wait
  282  0000125c          	_sem_wait:
  283  0000125c  44000451	trap	#0x451
  284  00001260  4be00000	jr	r31
  285  00001264  54000000	nop
  286  00001268          	.endproc _sem_wait
  288  00001268          	.proc _sem_signal
  289  00001268          	.global _sem_signal
  290  00001268          	_sem_signal:
  291  00001268  44000452	trap	#0x452
  292  0000126c  4be00000	jr	r31
  293  00001270  54000000	nop
  294  00001274          	.endproc _sem_signal
  296  00001274          	.proc _lock_create
  297  00001274          	.global _lock_create
  298  00001274          	_lock_create:
  299  00001274  44000453	trap	#0x453
  300  00001278  4be00000	jr	r31
  301  0000127c  54000000	nop
  302  00001280          	.endproc _lock_create
  304  00001280          	.proc _lock_acquire
  305  00001280          	.global _lock_acquire
  306  00001280          	_lock_acquire:
  307  00001280  44000454	trap	#0x454
  308  00001284  4be00000	jr	r31
  309  00001288  54000000	nop
  310  0000128c          	.endproc _lock_acquire
  312  0000128c          	.proc _lock_release
  313  0000128c          	.global _lock_release
  314  0000128c          	_lock_release:
  315  0000128c  44000455	trap	#0x455
  316  00001290  4be00000	jr	r31
  317  00001294  54000000	nop
  318  00001298          	.endproc _lock_release
  320  00001298          	.proc _cond_create
  321  00001298          	.global _cond_create
  322  00001298          	_cond_create:
  323  00001298  44000456	trap	#0x456
  324  0000129c  4be00000	jr	r31
  325  000012a0  54000000	nop
  326  000012a4          	.endproc _cond_create
  328  000012a4          	.proc _cond_wait
  329  000012a4          	.global _cond_wait
  330  000012a4          	_cond_wait:
  331  000012a4  44000457	trap	#0x457
  332  000012a8  4be00000	jr	r31
  333  000012ac  54000000	nop
  334  000012b0          	.endproc _cond_wait
  336  000012b0          	.proc _cond_signal
  337  000012b0          	.global _cond_signal
  338  000012b0          	_cond_signal:
  339  000012b0  44000458	trap	#0x458
  340  000012b4  4be00000	jr	r31
  341  000012b8  54000000	nop
  342  000012bc          	.endproc _cond_signal
  344  000012bc          	.proc _cond_broadcast
  345  000012bc          	.global _cond_broadcast
  346  000012bc          	_cond_broadcast:
  347  000012bc  44000459	trap	#0x459
  348  000012c0  4be00000	jr	r31
  349  000012c4  54000000	nop
  350  000012c8          	.endproc _cond_broadcast
  352  000012c8          	.proc _mbox_create
  353  000012c8          	.global _mbox_create
  354  000012c8          	_mbox_create:
  355  000012c8  44000460	trap	#0x460
  356  000012cc  4be00000	jr	r31
  357  000012d0  54000000	nop
  358  000012d4          	.endproc _mbox_create
  360  000012d4          	.proc _mbox_open
  361  000012d4          	.global _mbox_open
  362  000012d4          	_mbox_open:
  363  000012d4  44000461	trap	#0x461
  364  000012d8  4be00000	jr	r31
  365  000012dc  54000000	nop
  366  000012e0          	.endproc _mbox_open
  368  000012e0          	.proc _mbox_close
  369  000012e0          	.global _mbox_close
  370  000012e0          	_mbox_close:
  371  000012e0  44000462	trap	#0x462
  372  000012e4  4be00000	jr	r31
  373  000012e8  54000000	nop
  374  000012ec          	.endproc _mbox_close
  376  000012ec          	.proc _mbox_send
  377  000012ec          	.global _mbox_send
  378  000012ec          	_mbox_send:
  379  000012ec  44000463	trap	#0x463
  380  000012f0  4be00000	jr	r31
  381  000012f4  54000000	nop
  382  000012f8          	.endproc _mbox_send
  384  000012f8          	.proc _mbox_recv
  385  000012f8          	.global _mbox_recv
  386  000012f8          	_mbox_recv:
  387  000012f8  44000464	trap	#0x464
  388  000012fc  4be00000	jr	r31
  389  00001300  54000000	nop
  390  00001304          	.endproc _mbox_recv
  392  00001304          	.proc _sleep
  393  00001304          	.global _sleep
  394  00001304          	_sleep:
  395  00001304  44000465	trap	#0x465
  396  00001308  4be00000	jr	r31
  397  0000130c  54000000	nop
  398  00001310          	.endproc _sleep
  400  00001310          	.proc _yield
  401  00001310          	.global _yield
  402  00001310          	_yield:
  403  00001310  44000466	trap	#0x466
  404  00001314  4be00000	jr	r31
  405  00001318  54000000	nop
  406  0000131c          	.endproc _yield
  409  0000131c          	.proc _Exit
  410  0000131c          	.global _Exit
  411  0000131c          	_Exit:
  412  0000131c  44000500	trap	#0x500
  413  00001320  4be00000	jr	r31
  414  00001324  54000000	nop
  415  00001328          	.endproc _Exit
  418  00001328          	.proc _malloc
  419  00001328          	.global _malloc
  420  00001328          	_malloc:
  421  00001328  44000467	trap	#0x467
  422  0000132c  4be00000	jr	r31
  423  00001330          	.endproc _malloc
  426  00001330          	.proc _mfree
  427  00001330          	.global _mfree
  428  00001330          	_mfree:
  429  00001330  44000468	trap	#0x468
  430  00001334  4be00000	jr	r31
  431  00001338          	.endproc _mfree
  432                      ; Compiled by GCC
  434  00001338          	.align 2
  435  00001338          	.proc _isspace
  436  00001338          	.global _isspace
  437  00001338          	_isspace:
  438                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  439  00001338  afbefffc	sw	-4(r29),r30; push fp
  440  0000133c  001df020	add	r30,r0,r29; fp = sp
  441  00001340  afbffff8	sw	-8(r29),r31; push ret addr
  442  00001344  2fbd0018	subui	r29,r29,#24; alloc local storage
  443  00001348  afa20000	sw	0(r29),r2
  444  0000134c  afa30004	sw	4(r29),r3
  445  00001350  afa40008	sw	8(r29),r4
  446  00001354  83c20003	lb	r2,3(r30)
  447  00001358  20010000	addi	r1,r0,#0
  448  0000135c  304300ff	andi	r3,r2,#0x00ff
  449  00001360  60640020	seqi	r4,r3,#32
  450  00001364  1480002c	bnez	r4,L3_LF2
  451  00001368  54000000	nop; delay slot nop
  452  0000136c  304300ff	andi	r3,r2,#0x00ff
  453  00001370  60640009	seqi	r4,r3,#9
  454  00001374  1480001c	bnez	r4,L3_LF2
  455  00001378  54000000	nop; delay slot nop
  456  0000137c  304300ff	andi	r3,r2,#0x00ff
  457  00001380  6064000a	seqi	r4,r3,#10
  458  00001384  1480000c	bnez	r4,L3_LF2
  459  00001388  54000000	nop; delay slot nop
  460  0000138c  08000008	j	L2_LF2
  461  00001390  54000000	nop; delay slot nop
  462  00001394          	L3_LF2:
  463  00001394  20010001	addi	r1,r0,#1
  464  00001398          	L2_LF2:
  465  00001398  08000004	j	L1_LF2
  466  0000139c  54000000	nop; delay slot nop
  467  000013a0          	L1_LF2:
  468  000013a0  8fa20000	lw	r2,0(r29)
  469  000013a4  8fa30004	lw	r3,4(r29)
  470  000013a8  8fa40008	lw	r4,8(r29)
  471  000013ac  8fdffff8	lw	r31,-8(r30)
  472  000013b0  001ee820	add	r29,r0,r30
  473  000013b4  8fdefffc	lw	r30,-4(r30)
  474  000013b8  4be00000	jr	r31
  475  000013bc  54000000	nop
  476  000013c0          	.endproc _isspace
  477  000013c0          	.align 2
  478  000013c0          	.proc _isxdigit
  479  000013c0          	.global _isxdigit
  480  000013c0          	_isxdigit:
  481                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  482  000013c0  afbefffc	sw	-4(r29),r30; push fp
  483  000013c4  001df020	add	r30,r0,r29; fp = sp
  484  000013c8  afbffff8	sw	-8(r29),r31; push ret addr
  485  000013cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  486  000013d0  afa20000	sw	0(r29),r2
  487  000013d4  afa30004	sw	4(r29),r3
  488  000013d8  afa40008	sw	8(r29),r4
  489  000013dc  83c20003	lb	r2,3(r30)
  490  000013e0  20010000	addi	r1,r0,#0
  491  000013e4  304300ff	andi	r3,r2,#0x00ff
  492  000013e8  6c64002f	sgtui	r4,r3,#47
  493  000013ec  1080001c	beqz	r4,L7_LF2
  494  000013f0  54000000	nop; delay slot nop
  495  000013f4  304300ff	andi	r3,r2,#0x00ff
  496  000013f8  70640039	sleui	r4,r3,#57
  497  000013fc  1480005c	bnez	r4,L6_LF2
  498  00001400  54000000	nop; delay slot nop
  499  00001404  08000004	j	L7_LF2
  500  00001408  54000000	nop; delay slot nop
  501  0000140c          	L7_LF2:
  502  0000140c  304300ff	andi	r3,r2,#0x00ff
  503  00001410  6c640060	sgtui	r4,r3,#96
  504  00001414  1080001c	beqz	r4,L8_LF2
  505  00001418  54000000	nop; delay slot nop
  506  0000141c  304300ff	andi	r3,r2,#0x00ff
  507  00001420  70640066	sleui	r4,r3,#102
  508  00001424  14800034	bnez	r4,L6_LF2
  509  00001428  54000000	nop; delay slot nop
  510  0000142c  08000004	j	L8_LF2
  511  00001430  54000000	nop; delay slot nop
  512  00001434          	L8_LF2:
  513  00001434  304300ff	andi	r3,r2,#0x00ff
  514  00001438  6c640040	sgtui	r4,r3,#64
  515  0000143c  10800020	beqz	r4,L5_LF2
  516  00001440  54000000	nop; delay slot nop
  517  00001444  304300ff	andi	r3,r2,#0x00ff
  518  00001448  70640041	sleui	r4,r3,#65
  519  0000144c  1480000c	bnez	r4,L6_LF2
  520  00001450  54000000	nop; delay slot nop
  521  00001454  08000008	j	L5_LF2
  522  00001458  54000000	nop; delay slot nop
  523  0000145c          	L6_LF2:
  524  0000145c  20010001	addi	r1,r0,#1
  525  00001460          	L5_LF2:
  526  00001460  08000004	j	L4_LF2
  527  00001464  54000000	nop; delay slot nop
  528  00001468          	L4_LF2:
  529  00001468  8fa20000	lw	r2,0(r29)
  530  0000146c  8fa30004	lw	r3,4(r29)
  531  00001470  8fa40008	lw	r4,8(r29)
  532  00001474  8fdffff8	lw	r31,-8(r30)
  533  00001478  001ee820	add	r29,r0,r30
  534  0000147c  8fdefffc	lw	r30,-4(r30)
  535  00001480  4be00000	jr	r31
  536  00001484  54000000	nop
  537  00001488          	.endproc _isxdigit
  538  00001488          	.align 2
  539  00001488          	.proc _dstrcpy
  540  00001488          	.global _dstrcpy
  541  00001488          	_dstrcpy:
  542                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  543  00001488  afbefffc	sw	-4(r29),r30; push fp
  544  0000148c  001df020	add	r30,r0,r29; fp = sp
  545  00001490  afbffff8	sw	-8(r29),r31; push ret addr
  546  00001494  2fbd0018	subui	r29,r29,#24; alloc local storage
  547  00001498  afa20000	sw	0(r29),r2
  548  0000149c  afa30004	sw	4(r29),r3
  549  000014a0  8fc10000	lw	r1,(r30)
  550  000014a4  afc1fff4	sw	-12(r30),r1
  551  000014a8          	L10_LF2:
  552  000014a8  8fc10000	lw	r1,(r30)
  553  000014ac  20220001	addi	r2,r1,#1
  554  000014b0  afc20000	sw	(r30),r2
  555  000014b4  8fc20004	lw	r2,4(r30)
  556  000014b8  20430001	addi	r3,r2,#1
  557  000014bc  afc30004	sw	4(r30),r3
  558  000014c0  80420000	lb	r2,(r2)
  559  000014c4  a0220000	sb	(r1),r2
  560  000014c8  a3c2fff3	sb	-13(r30),r2
  561  000014cc          	L12_LF2:
  562  000014cc  93c1fff3	lbu	r1,-13(r30)
  563  000014d0  64220000	snei	r2,r1,#0
  564  000014d4  1440000c	bnez	r2,L13_LF2
  565  000014d8  54000000	nop; delay slot nop
  566  000014dc  0800000c	j	L11_LF2
  567  000014e0  54000000	nop; delay slot nop
  568  000014e4          	L13_LF2:
  569  000014e4  0bffffc0	j	L10_LF2
  570  000014e8  54000000	nop; delay slot nop
  571  000014ec          	L11_LF2:
  572  000014ec  8fc1fff4	lw	r1,-12(r30)
  573  000014f0  08000004	j	L9_LF2
  574  000014f4  54000000	nop; delay slot nop
  575  000014f8          	L9_LF2:
  576  000014f8  8fa20000	lw	r2,0(r29)
  577  000014fc  8fa30004	lw	r3,4(r29)
  578  00001500  8fdffff8	lw	r31,-8(r30)
  579  00001504  001ee820	add	r29,r0,r30
  580  00001508  8fdefffc	lw	r30,-4(r30)
  581  0000150c  4be00000	jr	r31
  582  00001510  54000000	nop
  583  00001514          	.endproc _dstrcpy
  584  00001514          	.align 2
  585  00001514          	.proc _dstrncpy
  586  00001514          	.global _dstrncpy
  587  00001514          	_dstrncpy:
  588                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  589  00001514  afbefffc	sw	-4(r29),r30; push fp
  590  00001518  001df020	add	r30,r0,r29; fp = sp
  591  0000151c  afbffff8	sw	-8(r29),r31; push ret addr
  592  00001520  2fbd0018	subui	r29,r29,#24; alloc local storage
  593  00001524  afa20000	sw	0(r29),r2
  594  00001528  afa30004	sw	4(r29),r3
  595  0000152c  8fc10000	lw	r1,(r30)
  596  00001530  afc1fff4	sw	-12(r30),r1
  597  00001534          	L15_LF2:
  598  00001534  8fc10008	lw	r1,8(r30)
  599  00001538  2022ffff	addi	r2,r1,#-1
  600  0000153c  afc20008	sw	8(r30),r2
  601  00001540  70210000	slei	r1,r1,#0
  602  00001544  1020000c	beqz	r1,L18_LF2
  603  00001548  54000000	nop; delay slot nop
  604  0000154c  08000048	j	L16_LF2
  605  00001550  54000000	nop; delay slot nop
  606  00001554          	L18_LF2:
  607  00001554  8fc10000	lw	r1,(r30)
  608  00001558  20220001	addi	r2,r1,#1
  609  0000155c  afc20000	sw	(r30),r2
  610  00001560  8fc20004	lw	r2,4(r30)
  611  00001564  20430001	addi	r3,r2,#1
  612  00001568  afc30004	sw	4(r30),r3
  613  0000156c  80420000	lb	r2,(r2)
  614  00001570  a0220000	sb	(r1),r2
  615  00001574  a3c2fff3	sb	-13(r30),r2
  616  00001578          	L17_LF2:
  617  00001578  93c1fff3	lbu	r1,-13(r30)
  618  0000157c  64220000	snei	r2,r1,#0
  619  00001580  1440000c	bnez	r2,L19_LF2
  620  00001584  54000000	nop; delay slot nop
  621  00001588  0800000c	j	L16_LF2
  622  0000158c  54000000	nop; delay slot nop
  623  00001590          	L19_LF2:
  624  00001590  0bffffa0	j	L15_LF2
  625  00001594  54000000	nop; delay slot nop
  626  00001598          	L16_LF2:
  627  00001598  8fc1fff4	lw	r1,-12(r30)
  628  0000159c  08000004	j	L14_LF2
  629  000015a0  54000000	nop; delay slot nop
  630  000015a4          	L14_LF2:
  631  000015a4  8fa20000	lw	r2,0(r29)
  632  000015a8  8fa30004	lw	r3,4(r29)
  633  000015ac  8fdffff8	lw	r31,-8(r30)
  634  000015b0  001ee820	add	r29,r0,r30
  635  000015b4  8fdefffc	lw	r30,-4(r30)
  636  000015b8  4be00000	jr	r31
  637  000015bc  54000000	nop
  638  000015c0          	.endproc _dstrncpy
  639  000015c0          	.align 2
  640  000015c0          	.proc _dstrcat
  641  000015c0          	.global _dstrcat
  642  000015c0          	_dstrcat:
  643                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  644  000015c0  afbefffc	sw	-4(r29),r30; push fp
  645  000015c4  001df020	add	r30,r0,r29; fp = sp
  646  000015c8  afbffff8	sw	-8(r29),r31; push ret addr
  647  000015cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  648  000015d0  afa20000	sw	0(r29),r2
  649  000015d4  8fc10000	lw	r1,(r30)
  650  000015d8  afc1fff4	sw	-12(r30),r1
  651  000015dc          	L21_LF2:
  652  000015dc  8fc10000	lw	r1,(r30)
  653  000015e0  90220000	lbu	r2,(r1)
  654  000015e4  64410000	snei	r1,r2,#0
  655  000015e8  1420000c	bnez	r1,L23_LF2
  656  000015ec  54000000	nop; delay slot nop
  657  000015f0  0800001c	j	L22_LF2
  658  000015f4  54000000	nop; delay slot nop
  659  000015f8          	L23_LF2:
  660  000015f8  8fc20000	lw	r2,(r30)
  661  000015fc  20410001	addi	r1,r2,#1
  662  00001600  00011020	add	r2,r0,r1
  663  00001604  afc20000	sw	(r30),r2
  664  00001608  0bffffd0	j	L21_LF2
  665  0000160c  54000000	nop; delay slot nop
  666  00001610          	L22_LF2:
  667  00001610  23bdfff8	addi	r29,r29,#-8
  668  00001614  001d0820	add	r1,r0,r29
  669  00001618  8fc20000	lw	r2,(r30)
  670  0000161c  ac220000	sw	(r1),r2
  671  00001620  8fc20004	lw	r2,4(r30)
  672  00001624  ac220004	sw	4(r1),r2
  673  00001628  0ffffe5c	jal	_dstrcpy
  674  0000162c  54000000	nop; delay slot nop
  675  00001630  23bd0008	addi	r29,r29,#8
  676  00001634  8fc1fff4	lw	r1,-12(r30)
  677  00001638  08000004	j	L20_LF2
  678  0000163c  54000000	nop; delay slot nop
  679  00001640          	L20_LF2:
  680  00001640  8fa20000	lw	r2,0(r29)
  681  00001644  8fdffff8	lw	r31,-8(r30)
  682  00001648  001ee820	add	r29,r0,r30
  683  0000164c  8fdefffc	lw	r30,-4(r30)
  684  00001650  4be00000	jr	r31
  685  00001654  54000000	nop
  686  00001658          	.endproc _dstrcat
  687  00001658          	.align 2
  688  00001658          	.proc _dstrncmp
  689  00001658          	.global _dstrncmp
  690  00001658          	_dstrncmp:
  691                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  692  00001658  afbefffc	sw	-4(r29),r30; push fp
  693  0000165c  001df020	add	r30,r0,r29; fp = sp
  694  00001660  afbffff8	sw	-8(r29),r31; push ret addr
  695  00001664  2fbd0018	subui	r29,r29,#24; alloc local storage
  696  00001668  afa20000	sw	0(r29),r2
  697  0000166c  afa30004	sw	4(r29),r3
  698  00001670  54000000	nop
  699  00001674  20010000	addi	r1,r0,#0
  700  00001678  afc1fff4	sw	-12(r30),r1
  701  0000167c          	L25_LF2:
  702  0000167c  8fc1fff4	lw	r1,-12(r30)
  703  00001680  8fc20008	lw	r2,8(r30)
  704  00001684  0022082a	slt	r1,r1,r2
  705  00001688  1420000c	bnez	r1,L28_LF2
  706  0000168c  54000000	nop; delay slot nop
  707  00001690  08000088	j	L26_LF2
  708  00001694  54000000	nop; delay slot nop
  709  00001698          	L28_LF2:
  710  00001698  8fc10004	lw	r1,4(r30)
  711  0000169c  90220000	lbu	r2,(r1)
  712  000016a0  64410000	snei	r1,r2,#0
  713  000016a4  14200018	bnez	r1,L29_LF2
  714  000016a8  54000000	nop; delay slot nop
  715  000016ac  20010000	addi	r1,r0,#0
  716  000016b0  080000d8	j	L24_LF2
  717  000016b4  54000000	nop; delay slot nop
  718  000016b8  08000028	j	L30_LF2
  719  000016bc  54000000	nop; delay slot nop
  720  000016c0          	L29_LF2:
  721  000016c0  8fc10000	lw	r1,(r30)
  722  000016c4  8fc20004	lw	r2,4(r30)
  723  000016c8  90210000	lbu	r1,(r1)
  724  000016cc  90420000	lbu	r2,(r2)
  725  000016d0  00220829	sne	r1,r1,r2
  726  000016d4  1020000c	beqz	r1,L30_LF2
  727  000016d8  54000000	nop; delay slot nop
  728  000016dc  0800003c	j	L26_LF2
  729  000016e0  54000000	nop; delay slot nop
  730  000016e4          	L31_LF2:
  731  000016e4          	L30_LF2:
  732  000016e4  8fc20000	lw	r2,(r30)
  733  000016e8  20410001	addi	r1,r2,#1
  734  000016ec  00011020	add	r2,r0,r1
  735  000016f0  afc20000	sw	(r30),r2
  736  000016f4  8fc20004	lw	r2,4(r30)
  737  000016f8  20410001	addi	r1,r2,#1
  738  000016fc  00011020	add	r2,r0,r1
  739  00001700  afc20004	sw	4(r30),r2
  740  00001704          	L27_LF2:
  741  00001704  8fc2fff4	lw	r2,-12(r30)
  742  00001708  20410001	addi	r1,r2,#1
  743  0000170c  00011020	add	r2,r0,r1
  744  00001710  afc2fff4	sw	-12(r30),r2
  745  00001714  0bffff64	j	L25_LF2
  746  00001718  54000000	nop; delay slot nop
  747  0000171c          	L26_LF2:
  748  0000171c  8fc1fff4	lw	r1,-12(r30)
  749  00001720  8fc20008	lw	r2,8(r30)
  750  00001724  00220828	seq	r1,r1,r2
  751  00001728  10200018	beqz	r1,L32_LF2
  752  0000172c  54000000	nop; delay slot nop
  753  00001730  20010000	addi	r1,r0,#0
  754  00001734  08000054	j	L24_LF2
  755  00001738  54000000	nop; delay slot nop
  756  0000173c  0800004c	j	L33_LF2
  757  00001740  54000000	nop; delay slot nop
  758  00001744          	L32_LF2:
  759  00001744  8fc20000	lw	r2,(r30)
  760  00001748  90410000	lbu	r1,(r2)
  761  0000174c  8fc20004	lw	r2,4(r30)
  762  00001750  90430000	lbu	r3,(r2)
  763  00001754  00230822	sub	r1,r1,r3
  764  00001758  74220000	sgei	r2,r1,#0
  765  0000175c  10400020	beqz	r2,L34_LF2
  766  00001760  54000000	nop; delay slot nop
  767  00001764  8fc10000	lw	r1,(r30)
  768  00001768  8fc20004	lw	r2,4(r30)
  769  0000176c  90210000	lbu	r1,(r1)
  770  00001770  90420000	lbu	r2,(r2)
  771  00001774  00220829	sne	r1,r1,r2
  772  00001778  08000008	j	L35_LF2
  773  0000177c  54000000	nop; delay slot nop
  774  00001780          	L34_LF2:
  775  00001780  2001ffff	addi	r1,r0,#-1
  776  00001784          	L35_LF2:
  777  00001784  08000004	j	L24_LF2
  778  00001788  54000000	nop; delay slot nop
  779  0000178c          	L33_LF2:
  780  0000178c          	L24_LF2:
  781  0000178c  8fa20000	lw	r2,0(r29)
  782  00001790  8fa30004	lw	r3,4(r29)
  783  00001794  8fdffff8	lw	r31,-8(r30)
  784  00001798  001ee820	add	r29,r0,r30
  785  0000179c  8fdefffc	lw	r30,-4(r30)
  786  000017a0  4be00000	jr	r31
  787  000017a4  54000000	nop
  788  000017a8          	.endproc _dstrncmp
  789  000017a8          	.align 2
  790  000017a8          	.proc _dstrlen
  791  000017a8          	.global _dstrlen
  792  000017a8          	_dstrlen:
  793                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  794  000017a8  afbefffc	sw	-4(r29),r30; push fp
  795  000017ac  001df020	add	r30,r0,r29; fp = sp
  796  000017b0  afbffff8	sw	-8(r29),r31; push ret addr
  797  000017b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  798  000017b8  afa20000	sw	0(r29),r2
  799  000017bc  20010000	addi	r1,r0,#0
  800  000017c0  afc1fff4	sw	-12(r30),r1
  801  000017c4          	L37_LF2:
  802  000017c4  8fc10000	lw	r1,(r30)
  803  000017c8  20220001	addi	r2,r1,#1
  804  000017cc  afc20000	sw	(r30),r2
  805  000017d0  90210000	lbu	r1,(r1)
  806  000017d4  64220000	snei	r2,r1,#0
  807  000017d8  1440000c	bnez	r2,L39_LF2
  808  000017dc  54000000	nop; delay slot nop
  809  000017e0  0800001c	j	L38_LF2
  810  000017e4  54000000	nop; delay slot nop
  811  000017e8          	L39_LF2:
  812  000017e8  8fc2fff4	lw	r2,-12(r30)
  813  000017ec  20410001	addi	r1,r2,#1
  814  000017f0  00011020	add	r2,r0,r1
  815  000017f4  afc2fff4	sw	-12(r30),r2
  816  000017f8  0bffffc8	j	L37_LF2
  817  000017fc  54000000	nop; delay slot nop
  818  00001800          	L38_LF2:
  819  00001800  8fc1fff4	lw	r1,-12(r30)
  820  00001804  08000004	j	L36_LF2
  821  00001808  54000000	nop; delay slot nop
  822  0000180c          	L36_LF2:
  823  0000180c  8fa20000	lw	r2,0(r29)
  824  00001810  8fdffff8	lw	r31,-8(r30)
  825  00001814  001ee820	add	r29,r0,r30
  826  00001818  8fdefffc	lw	r30,-4(r30)
  827  0000181c  4be00000	jr	r31
  828  00001820  54000000	nop
  829  00001824          	.endproc _dstrlen
  830  00001824          	.align 2
  831  00001824          	.proc _dstrstr
  832  00001824          	.global _dstrstr
  833  00001824          	_dstrstr:
  834                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  835  00001824  afbefffc	sw	-4(r29),r30; push fp
  836  00001828  001df020	add	r30,r0,r29; fp = sp
  837  0000182c  afbffff8	sw	-8(r29),r31; push ret addr
  838  00001830  2fbd0018	subui	r29,r29,#24; alloc local storage
  839  00001834  afa20000	sw	0(r29),r2
  840  00001838  23bdfff8	addi	r29,r29,#-8
  841  0000183c  001d0820	add	r1,r0,r29
  842  00001840  8fc20004	lw	r2,4(r30)
  843  00001844  ac220000	sw	(r1),r2
  844  00001848  0fffff5c	jal	_dstrlen
  845  0000184c  54000000	nop; delay slot nop
  846  00001850  23bd0008	addi	r29,r29,#8
  847  00001854  afc1fff4	sw	-12(r30),r1
  848  00001858          	L41_LF2:
  849  00001858  8fc10000	lw	r1,(r30)
  850  0000185c  90220000	lbu	r2,(r1)
  851  00001860  64410000	snei	r1,r2,#0
  852  00001864  1420000c	bnez	r1,L43_LF2
  853  00001868  54000000	nop; delay slot nop
  854  0000186c  08000060	j	L42_LF2
  855  00001870  54000000	nop; delay slot nop
  856  00001874          	L43_LF2:
  857  00001874  23bdfff0	addi	r29,r29,#-16
  858  00001878  001d0820	add	r1,r0,r29
  859  0000187c  8fc20000	lw	r2,(r30)
  860  00001880  ac220000	sw	(r1),r2
  861  00001884  8fc20004	lw	r2,4(r30)
  862  00001888  ac220004	sw	4(r1),r2
  863  0000188c  8fc2fff4	lw	r2,-12(r30)
  864  00001890  ac220008	sw	8(r1),r2
  865  00001894  0ffffdc0	jal	_dstrncmp
  866  00001898  54000000	nop; delay slot nop
  867  0000189c  23bd0010	addi	r29,r29,#16
  868  000018a0  64220000	snei	r2,r1,#0
  869  000018a4  14400010	bnez	r2,L44_LF2
  870  000018a8  54000000	nop; delay slot nop
  871  000018ac  8fc10000	lw	r1,(r30)
  872  000018b0  08000028	j	L40_LF2
  873  000018b4  54000000	nop; delay slot nop
  874  000018b8          	L44_LF2:
  875  000018b8  8fc20000	lw	r2,(r30)
  876  000018bc  20410001	addi	r1,r2,#1
  877  000018c0  00011020	add	r2,r0,r1
  878  000018c4  afc20000	sw	(r30),r2
  879  000018c8  0bffff8c	j	L41_LF2
  880  000018cc  54000000	nop; delay slot nop
  881  000018d0          	L42_LF2:
  882  000018d0  20010000	addi	r1,r0,#0
  883  000018d4  08000004	j	L40_LF2
  884  000018d8  54000000	nop; delay slot nop
  885  000018dc          	L40_LF2:
  886  000018dc  8fa20000	lw	r2,0(r29)
  887  000018e0  8fdffff8	lw	r31,-8(r30)
  888  000018e4  001ee820	add	r29,r0,r30
  889  000018e8  8fdefffc	lw	r30,-4(r30)
  890  000018ec  4be00000	jr	r31
  891  000018f0  54000000	nop
  892  000018f4          	.endproc _dstrstr
  893  000018f4          	.align 2
  894  000018f4          	.proc _dmindex
  895  000018f4          	.global _dmindex
  896  000018f4          	_dmindex:
  897                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  898  000018f4  afbefffc	sw	-4(r29),r30; push fp
  899  000018f8  001df020	add	r30,r0,r29; fp = sp
  900  000018fc  afbffff8	sw	-8(r29),r31; push ret addr
  901  00001900  2fbd0018	subui	r29,r29,#24; alloc local storage
  902  00001904  afa20000	sw	0(r29),r2
  903  00001908  54000000	nop
  904  0000190c          	L46_LF2:
  905  0000190c  8fc10000	lw	r1,(r30)
  906  00001910  90220000	lbu	r2,(r1)
  907  00001914  64410000	snei	r1,r2,#0
  908  00001918  1420000c	bnez	r1,L48_LF2
  909  0000191c  54000000	nop; delay slot nop
  910  00001920  08000070	j	L47_LF2
  911  00001924  54000000	nop; delay slot nop
  912  00001928          	L48_LF2:
  913  00001928  8fc10004	lw	r1,4(r30)
  914  0000192c  afc1fff4	sw	-12(r30),r1
  915  00001930          	L49_LF2:
  916  00001930  8fc1fff4	lw	r1,-12(r30)
  917  00001934  90220000	lbu	r2,(r1)
  918  00001938  64410000	snei	r1,r2,#0
  919  0000193c  1420000c	bnez	r1,L52_LF2
  920  00001940  54000000	nop; delay slot nop
  921  00001944  08000044	j	L50_LF2
  922  00001948  54000000	nop; delay slot nop
  923  0000194c          	L52_LF2:
  924  0000194c  8fc10000	lw	r1,(r30)
  925  00001950  8fc2fff4	lw	r2,-12(r30)
  926  00001954  90210000	lbu	r1,(r1)
  927  00001958  90420000	lbu	r2,(r2)
  928  0000195c  00220828	seq	r1,r1,r2
  929  00001960  10200010	beqz	r1,L51_LF2
  930  00001964  54000000	nop; delay slot nop
  931  00001968  8fc10000	lw	r1,(r30)
  932  0000196c  08000030	j	L45_LF2
  933  00001970  54000000	nop; delay slot nop
  934  00001974          	L53_LF2:
  935  00001974          	L51_LF2:
  936  00001974  8fc2fff4	lw	r2,-12(r30)
  937  00001978  20410001	addi	r1,r2,#1
  938  0000197c  00011020	add	r2,r0,r1
  939  00001980  afc2fff4	sw	-12(r30),r2
  940  00001984  0bffffa8	j	L49_LF2
  941  00001988  54000000	nop; delay slot nop
  942  0000198c          	L50_LF2:
  943  0000198c  0bffff7c	j	L46_LF2
  944  00001990  54000000	nop; delay slot nop
  945  00001994          	L47_LF2:
  946  00001994  20010000	addi	r1,r0,#0
  947  00001998  08000004	j	L45_LF2
  948  0000199c  54000000	nop; delay slot nop
  949  000019a0          	L45_LF2:
  950  000019a0  8fa20000	lw	r2,0(r29)
  951  000019a4  8fdffff8	lw	r31,-8(r30)
  952  000019a8  001ee820	add	r29,r0,r30
  953  000019ac  8fdefffc	lw	r30,-4(r30)
  954  000019b0  4be00000	jr	r31
  955  000019b4  54000000	nop
  956  000019b8          	.endproc _dmindex
  957  000019b8          	.align 2
  958  000019b8          	.proc _dindex
  959  000019b8          	.global _dindex
  960  000019b8          	_dindex:
  961                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  962  000019b8  afbefffc	sw	-4(r29),r30; push fp
  963  000019bc  001df020	add	r30,r0,r29; fp = sp
  964  000019c0  afbffff8	sw	-8(r29),r31; push ret addr
  965  000019c4  2fbd0010	subui	r29,r29,#16; alloc local storage
  966  000019c8  afa20000	sw	0(r29),r2
  967  000019cc  54000000	nop
  968  000019d0          	L55_LF2:
  969  000019d0  8fc10000	lw	r1,(r30)
  970  000019d4  90220000	lbu	r2,(r1)
  971  000019d8  64410000	snei	r1,r2,#0
  972  000019dc  1420000c	bnez	r1,L57_LF2
  973  000019e0  54000000	nop; delay slot nop
  974  000019e4  08000040	j	L56_LF2
  975  000019e8  54000000	nop; delay slot nop
  976  000019ec          	L57_LF2:
  977  000019ec  8fc10000	lw	r1,(r30)
  978  000019f0  90220000	lbu	r2,(r1)
  979  000019f4  8fc10004	lw	r1,4(r30)
  980  000019f8  00411028	seq	r2,r2,r1
  981  000019fc  10400010	beqz	r2,L58_LF2
  982  00001a00  54000000	nop; delay slot nop
  983  00001a04  8fc10000	lw	r1,(r30)
  984  00001a08  08000028	j	L54_LF2
  985  00001a0c  54000000	nop; delay slot nop
  986  00001a10          	L58_LF2:
  987  00001a10  8fc20000	lw	r2,(r30)
  988  00001a14  20410001	addi	r1,r2,#1
  989  00001a18  00011020	add	r2,r0,r1
  990  00001a1c  afc20000	sw	(r30),r2
  991  00001a20  0bffffac	j	L55_LF2
  992  00001a24  54000000	nop; delay slot nop
  993  00001a28          	L56_LF2:
  994  00001a28  20010000	addi	r1,r0,#0
  995  00001a2c  08000004	j	L54_LF2
  996  00001a30  54000000	nop; delay slot nop
  997  00001a34          	L54_LF2:
  998  00001a34  8fa20000	lw	r2,0(r29)
  999  00001a38  8fdffff8	lw	r31,-8(r30)
 1000  00001a3c  001ee820	add	r29,r0,r30
 1001  00001a40  8fdefffc	lw	r30,-4(r30)
 1002  00001a44  4be00000	jr	r31
 1003  00001a48  54000000	nop
 1004  00001a4c          	.endproc _dindex
 1005  00001a4c          	.align 2
 1006  00001a4c          	.proc _ditoa
 1007  00001a4c          	.global _ditoa
 1008  00001a4c          	_ditoa:
 1009                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1010  00001a4c  afbefffc	sw	-4(r29),r30; push fp
 1011  00001a50  001df020	add	r30,r0,r29; fp = sp
 1012  00001a54  afbffff8	sw	-8(r29),r31; push ret addr
 1013  00001a58  2fbd0018	subui	r29,r29,#24; alloc local storage
 1014  00001a5c  afa20000	sw	0(r29),r2
 1015  00001a60  afa30004	sw	4(r29),r3
 1016  00001a64  8fc10000	lw	r1,(r30)
 1017  00001a68  68220000	slti	r2,r1,#0
 1018  00001a6c  1040002c	beqz	r2,L60_LF2
 1019  00001a70  54000000	nop; delay slot nop
 1020  00001a74  8fc10004	lw	r1,4(r30)
 1021  00001a78  20220001	addi	r2,r1,#1
 1022  00001a7c  afc20004	sw	4(r30),r2
 1023  00001a80  2002002d	addi	r2,r0,(#0x2d)&0xff
 1024  00001a84  a0220000	sb	(r1),r2
 1025  00001a88  8fc10000	lw	r1,(r30)
 1026  00001a8c  00011022	sub	r2,r0,r1
 1027  00001a90  afc20000	sw	(r30),r2
 1028  00001a94  08000118	j	L61_LF2
 1029  00001a98  54000000	nop; delay slot nop
 1030  00001a9c          	L60_LF2:
 1031  00001a9c  8fc10000	lw	r1,(r30)
 1032  00001aa0  64220000	snei	r2,r1,#0
 1033  00001aa4  14400020	bnez	r2,L62_LF2
 1034  00001aa8  54000000	nop; delay slot nop
 1035  00001aac  8fc10004	lw	r1,4(r30)
 1036  00001ab0  20220001	addi	r2,r1,#1
 1037  00001ab4  afc20004	sw	4(r30),r2
 1038  00001ab8  20020030	addi	r2,r0,(#0x30)&0xff
 1039  00001abc  a0220000	sb	(r1),r2
 1040  00001ac0  080000ec	j	L61_LF2
 1041  00001ac4  54000000	nop; delay slot nop
 1042  00001ac8          	L62_LF2:
 1043  00001ac8  20010001	addi	r1,r0,#1
 1044  00001acc  afc1fff4	sw	-12(r30),r1
 1045  00001ad0          	L64_LF2:
 1046  00001ad0  8fc1fff4	lw	r1,-12(r30)
 1047  00001ad4  8fc20000	lw	r2,(r30)
 1048  00001ad8  0022082c	sle	r1,r1,r2
 1049  00001adc  1420000c	bnez	r1,L66_LF2
 1050  00001ae0  54000000	nop; delay slot nop
 1051  00001ae4  08000024	j	L65_LF2
 1052  00001ae8  54000000	nop; delay slot nop
 1053  00001aec          	L67_LF2:
 1054  00001aec          	L66_LF2:
 1055  00001aec  8fc1fff4	lw	r1,-12(r30)
 1056  00001af0  00011820	add	r3,r0,r1
 1057  00001af4  50620002	slli	r2,r3,#0x2
 1058  00001af8  00411020	add	r2,r2,r1
 1059  00001afc  50410001	slli	r1,r2,#0x1
 1060  00001b00  afc1fff4	sw	-12(r30),r1
 1061  00001b04  0bffffc8	j	L64_LF2
 1062  00001b08  54000000	nop; delay slot nop
 1063  00001b0c          	L65_LF2:
 1064  00001b0c  54000000	nop
 1065  00001b10          	L68_LF2:
 1066  00001b10  8fc1fff4	lw	r1,-12(r30)
 1067  00001b14  2002000a	addi	r2,r0,#10
 1068  00001b18  00200035	movi2fp	f0,r1
 1069  00001b1c  00400835	movi2fp	f1,r2
 1070  00001b20  0401000f	div	f0,f0,f1
 1071  00001b24  00000834	movfp2i	r1,f0
 1072  00001b28  afc1fff4	sw	-12(r30),r1
 1073  00001b2c  8fc10004	lw	r1,4(r30)
 1074  00001b30  20220001	addi	r2,r1,#1
 1075  00001b34  afc20004	sw	4(r30),r2
 1076  00001b38  8fc20000	lw	r2,(r30)
 1077  00001b3c  8fc3fff4	lw	r3,-12(r30)
 1078  00001b40  00400035	movi2fp	f0,r2
 1079  00001b44  00600835	movi2fp	f1,r3
 1080  00001b48  0401000f	div	f0,f0,f1
 1081  00001b4c  00001034	movfp2i	r2,f0
 1082  00001b50  00021820	add	r3,r0,r2
 1083  00001b54  20620030	addi	r2,r3,#48
 1084  00001b58  a0220000	sb	(r1),r2
 1085  00001b5c  8fc10000	lw	r1,(r30)
 1086  00001b60  8fc3fff4	lw	r3,-12(r30)
 1087  00001b64  00200035	movi2fp	f0,r1
 1088  00001b68  00600835	movi2fp	f1,r3
 1089  00001b6c  0401000f	div	f0,f0,f1
 1090  00001b70  00001034	movfp2i	r2,f0
 1091  00001b74  8fc3fff4	lw	r3,-12(r30)
 1092  00001b78  00400035	movi2fp	f0,r2
 1093  00001b7c  00600835	movi2fp	f1,r3
 1094  00001b80  0401000e	mult	f0,f0,f1
 1095  00001b84  00001034	movfp2i	r2,f0
 1096  00001b88  00220822	sub	r1,r1,r2
 1097  00001b8c  afc10000	sw	(r30),r1
 1098  00001b90          	L70_LF2:
 1099  00001b90  8fc1fff4	lw	r1,-12(r30)
 1100  00001b94  6c220001	sgti	r2,r1,#1
 1101  00001b98  1440000c	bnez	r2,L71_LF2
 1102  00001b9c  54000000	nop; delay slot nop
 1103  00001ba0  0800000c	j	L61_LF2
 1104  00001ba4  54000000	nop; delay slot nop
 1105  00001ba8          	L71_LF2:
 1106  00001ba8  0bffff64	j	L68_LF2
 1107  00001bac  54000000	nop; delay slot nop
 1108  00001bb0          	L69_LF2:
 1109  00001bb0          	L63_LF2:
 1110  00001bb0          	L61_LF2:
 1111  00001bb0  8fc10004	lw	r1,4(r30)
 1112  00001bb4  20020000	addi	r2,r0,(#0x0)&0xff
 1113  00001bb8  a0220000	sb	(r1),r2
 1114  00001bbc          	L59_LF2:
 1115  00001bbc  8fa20000	lw	r2,0(r29)
 1116  00001bc0  8fa30004	lw	r3,4(r29)
 1117  00001bc4  8fdffff8	lw	r31,-8(r30)
 1118  00001bc8  001ee820	add	r29,r0,r30
 1119  00001bcc  8fdefffc	lw	r30,-4(r30)
 1120  00001bd0  4be00000	jr	r31
 1121  00001bd4  54000000	nop
 1122  00001bd8          	.endproc _ditoa
 1123  00001bd8          	.align 2
 1124  00001bd8          	.proc _dstrtol
 1125  00001bd8          	.global _dstrtol
 1126  00001bd8          	_dstrtol:
 1127                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1128  00001bd8  afbefffc	sw	-4(r29),r30; push fp
 1129  00001bdc  001df020	add	r30,r0,r29; fp = sp
 1130  00001be0  afbffff8	sw	-8(r29),r31; push ret addr
 1131  00001be4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1132  00001be8  afa20000	sw	0(r29),r2
 1133  00001bec  20010000	addi	r1,r0,#0
 1134  00001bf0  afc1fff4	sw	-12(r30),r1
 1135  00001bf4          	L73_LF2:
 1136  00001bf4  8fc10000	lw	r1,(r30)
 1137  00001bf8  90220000	lbu	r2,(r1)
 1138  00001bfc  60410020	seqi	r1,r2,#32
 1139  00001c00  14200034	bnez	r1,L75_LF2
 1140  00001c04  54000000	nop; delay slot nop
 1141  00001c08  8fc10000	lw	r1,(r30)
 1142  00001c0c  90220000	lbu	r2,(r1)
 1143  00001c10  60410009	seqi	r1,r2,#9
 1144  00001c14  14200020	bnez	r1,L75_LF2
 1145  00001c18  54000000	nop; delay slot nop
 1146  00001c1c  8fc10000	lw	r1,(r30)
 1147  00001c20  90220000	lbu	r2,(r1)
 1148  00001c24  6041000a	seqi	r1,r2,#10
 1149  00001c28  1420000c	bnez	r1,L75_LF2
 1150  00001c2c  54000000	nop; delay slot nop
 1151  00001c30  0800001c	j	L74_LF2
 1152  00001c34  54000000	nop; delay slot nop
 1153  00001c38          	L75_LF2:
 1154  00001c38  8fc20000	lw	r2,(r30)
 1155  00001c3c  20410001	addi	r1,r2,#1
 1156  00001c40  00011020	add	r2,r0,r1
 1157  00001c44  afc20000	sw	(r30),r2
 1158  00001c48  0bffffa8	j	L73_LF2
 1159  00001c4c  54000000	nop; delay slot nop
 1160  00001c50          	L74_LF2:
 1161  00001c50  8fc10004	lw	r1,4(r30)
 1162  00001c54  64220000	snei	r2,r1,#0
 1163  00001c58  10400010	beqz	r2,L76_LF2
 1164  00001c5c  54000000	nop; delay slot nop
 1165  00001c60  8fc10004	lw	r1,4(r30)
 1166  00001c64  8fc20000	lw	r2,(r30)
 1167  00001c68  ac220000	sw	(r1),r2
 1168  00001c6c          	L76_LF2:
 1169  00001c6c  8fc10000	lw	r1,(r30)
 1170  00001c70  90220000	lbu	r2,(r1)
 1171  00001c74  64410000	snei	r1,r2,#0
 1172  00001c78  14200010	bnez	r1,L77_LF2
 1173  00001c7c  54000000	nop; delay slot nop
 1174  00001c80  8fc1fff4	lw	r1,-12(r30)
 1175  00001c84  08000294	j	L72_LF2
 1176  00001c88  54000000	nop; delay slot nop
 1177  00001c8c          	L77_LF2:
 1178  00001c8c  8fc10000	lw	r1,(r30)
 1179  00001c90  90220000	lbu	r2,(r1)
 1180  00001c94  6041002d	seqi	r1,r2,#45
 1181  00001c98  10200024	beqz	r1,L78_LF2
 1182  00001c9c  54000000	nop; delay slot nop
 1183  00001ca0  2001ffff	addi	r1,r0,#-1
 1184  00001ca4  afc1ffec	sw	-20(r30),r1
 1185  00001ca8  8fc20000	lw	r2,(r30)
 1186  00001cac  20410001	addi	r1,r2,#1
 1187  00001cb0  00011020	add	r2,r0,r1
 1188  00001cb4  afc20000	sw	(r30),r2
 1189  00001cb8  0800000c	j	L79_LF2
 1190  00001cbc  54000000	nop; delay slot nop
 1191  00001cc0          	L78_LF2:
 1192  00001cc0  20010001	addi	r1,r0,#1
 1193  00001cc4  afc1ffec	sw	-20(r30),r1
 1194  00001cc8          	L79_LF2:
 1195  00001cc8  8fc10008	lw	r1,8(r30)
 1196  00001ccc  64220000	snei	r2,r1,#0
 1197  00001cd0  14400090	bnez	r2,L80_LF2
 1198  00001cd4  54000000	nop; delay slot nop
 1199  00001cd8  8fc10000	lw	r1,(r30)
 1200  00001cdc  90220000	lbu	r2,(r1)
 1201  00001ce0  60410030	seqi	r1,r2,#48
 1202  00001ce4  10200074	beqz	r1,L81_LF2
 1203  00001ce8  54000000	nop; delay slot nop
 1204  00001cec  8fc20000	lw	r2,(r30)
 1205  00001cf0  20410001	addi	r1,r2,#1
 1206  00001cf4  00011020	add	r2,r0,r1
 1207  00001cf8  afc20000	sw	(r30),r2
 1208  00001cfc  8fc10000	lw	r1,(r30)
 1209  00001d00  90220000	lbu	r2,(r1)
 1210  00001d04  60410078	seqi	r1,r2,#120
 1211  00001d08  14200020	bnez	r1,L83_LF2
 1212  00001d0c  54000000	nop; delay slot nop
 1213  00001d10  8fc10000	lw	r1,(r30)
 1214  00001d14  90220000	lbu	r2,(r1)
 1215  00001d18  60410058	seqi	r1,r2,#88
 1216  00001d1c  1420000c	bnez	r1,L83_LF2
 1217  00001d20  54000000	nop; delay slot nop
 1218  00001d24  08000024	j	L82_LF2
 1219  00001d28  54000000	nop; delay slot nop
 1220  00001d2c          	L83_LF2:
 1221  00001d2c  20010010	addi	r1,r0,#16
 1222  00001d30  afc10008	sw	8(r30),r1
 1223  00001d34  8fc20000	lw	r2,(r30)
 1224  00001d38  20410001	addi	r1,r2,#1
 1225  00001d3c  00011020	add	r2,r0,r1
 1226  00001d40  afc20000	sw	(r30),r2
 1227  00001d44  0800000c	j	L84_LF2
 1228  00001d48  54000000	nop; delay slot nop
 1229  00001d4c          	L82_LF2:
 1230  00001d4c  20010008	addi	r1,r0,#8
 1231  00001d50  afc10008	sw	8(r30),r1
 1232  00001d54          	L84_LF2:
 1233  00001d54  0800000c	j	L80_LF2
 1234  00001d58  54000000	nop; delay slot nop
 1235  00001d5c          	L81_LF2:
 1236  00001d5c  2001000a	addi	r1,r0,#10
 1237  00001d60  afc10008	sw	8(r30),r1
 1238  00001d64          	L85_LF2:
 1239  00001d64          	L80_LF2:
 1240  00001d64  8fc10008	lw	r1,8(r30)
 1241  00001d68  70220000	slei	r2,r1,#0
 1242  00001d6c  1440001c	bnez	r2,L87_LF2
 1243  00001d70  54000000	nop; delay slot nop
 1244  00001d74  8fc10008	lw	r1,8(r30)
 1245  00001d78  6c220010	sgti	r2,r1,#16
 1246  00001d7c  1440000c	bnez	r2,L87_LF2
 1247  00001d80  54000000	nop; delay slot nop
 1248  00001d84  08000010	j	L86_LF2
 1249  00001d88  54000000	nop; delay slot nop
 1250  00001d8c          	L87_LF2:
 1251  00001d8c  8fc1fff4	lw	r1,-12(r30)
 1252  00001d90  08000188	j	L72_LF2
 1253  00001d94  54000000	nop; delay slot nop
 1254  00001d98          	L86_LF2:
 1255  00001d98  54000000	nop
 1256  00001d9c          	L88_LF2:
 1257  00001d9c  8fc10000	lw	r1,(r30)
 1258  00001da0  90220000	lbu	r2,(r1)
 1259  00001da4  6c41002f	sgtui	r1,r2,#47
 1260  00001da8  10200030	beqz	r1,L91_LF2
 1261  00001dac  54000000	nop; delay slot nop
 1262  00001db0  8fc10000	lw	r1,(r30)
 1263  00001db4  90220000	lbu	r2,(r1)
 1264  00001db8  70410039	sleui	r1,r2,#57
 1265  00001dbc  1020001c	beqz	r1,L91_LF2
 1266  00001dc0  54000000	nop; delay slot nop
 1267  00001dc4  8fc10000	lw	r1,(r30)
 1268  00001dc8  90220000	lbu	r2,(r1)
 1269  00001dcc  2041ffd0	addi	r1,r2,#-48
 1270  00001dd0  afc1fff0	sw	-16(r30),r1
 1271  00001dd4  0800008c	j	L92_LF2
 1272  00001dd8  54000000	nop; delay slot nop
 1273  00001ddc          	L91_LF2:
 1274  00001ddc  8fc10000	lw	r1,(r30)
 1275  00001de0  90220000	lbu	r2,(r1)
 1276  00001de4  6c410060	sgtui	r1,r2,#96
 1277  00001de8  10200030	beqz	r1,L93_LF2
 1278  00001dec  54000000	nop; delay slot nop
 1279  00001df0  8fc10000	lw	r1,(r30)
 1280  00001df4  90220000	lbu	r2,(r1)
 1281  00001df8  7041007a	sleui	r1,r2,#122
 1282  00001dfc  1020001c	beqz	r1,L93_LF2
 1283  00001e00  54000000	nop; delay slot nop
 1284  00001e04  8fc10000	lw	r1,(r30)
 1285  00001e08  90220000	lbu	r2,(r1)
 1286  00001e0c  2041ffa9	addi	r1,r2,#-87
 1287  00001e10  afc1fff0	sw	-16(r30),r1
 1288  00001e14  0800004c	j	L92_LF2
 1289  00001e18  54000000	nop; delay slot nop
 1290  00001e1c          	L93_LF2:
 1291  00001e1c  8fc10000	lw	r1,(r30)
 1292  00001e20  90220000	lbu	r2,(r1)
 1293  00001e24  6c410040	sgtui	r1,r2,#64
 1294  00001e28  10200030	beqz	r1,L95_LF2
 1295  00001e2c  54000000	nop; delay slot nop
 1296  00001e30  8fc10000	lw	r1,(r30)
 1297  00001e34  90220000	lbu	r2,(r1)
 1298  00001e38  7041005a	sleui	r1,r2,#90
 1299  00001e3c  1020001c	beqz	r1,L95_LF2
 1300  00001e40  54000000	nop; delay slot nop
 1301  00001e44  8fc10000	lw	r1,(r30)
 1302  00001e48  90220000	lbu	r2,(r1)
 1303  00001e4c  2041ffc9	addi	r1,r2,#-55
 1304  00001e50  afc1fff0	sw	-16(r30),r1
 1305  00001e54  0800000c	j	L92_LF2
 1306  00001e58  54000000	nop; delay slot nop
 1307  00001e5c          	L95_LF2:
 1308  00001e5c  200103e8	addi	r1,r0,#1000
 1309  00001e60  afc1fff0	sw	-16(r30),r1
 1310  00001e64          	L96_LF2:
 1311  00001e64          	L94_LF2:
 1312  00001e64          	L92_LF2:
 1313  00001e64  8fc1fff0	lw	r1,-16(r30)
 1314  00001e68  8fc20008	lw	r2,8(r30)
 1315  00001e6c  0022082a	slt	r1,r1,r2
 1316  00001e70  10200040	beqz	r1,L90_LF2
 1317  00001e74  54000000	nop; delay slot nop
 1318  00001e78  8fc1fff4	lw	r1,-12(r30)
 1319  00001e7c  8fc20008	lw	r2,8(r30)
 1320  00001e80  00200035	movi2fp	f0,r1
 1321  00001e84  00400835	movi2fp	f1,r2
 1322  00001e88  0401000e	mult	f0,f0,f1
 1323  00001e8c  00000834	movfp2i	r1,f0
 1324  00001e90  afc1fff4	sw	-12(r30),r1
 1325  00001e94  8fc1fff4	lw	r1,-12(r30)
 1326  00001e98  8fc2fff0	lw	r2,-16(r30)
 1327  00001e9c  00220820	add	r1,r1,r2
 1328  00001ea0  afc1fff4	sw	-12(r30),r1
 1329  00001ea4  8fc20000	lw	r2,(r30)
 1330  00001ea8  20410001	addi	r1,r2,#1
 1331  00001eac  00011020	add	r2,r0,r1
 1332  00001eb0  afc20000	sw	(r30),r2
 1333  00001eb4          	L97_LF2:
 1334  00001eb4          	L90_LF2:
 1335  00001eb4  8fc1fff0	lw	r1,-16(r30)
 1336  00001eb8  8fc20008	lw	r2,8(r30)
 1337  00001ebc  0022082a	slt	r1,r1,r2
 1338  00001ec0  1420000c	bnez	r1,L98_LF2
 1339  00001ec4  54000000	nop; delay slot nop
 1340  00001ec8  0800000c	j	L89_LF2
 1341  00001ecc  54000000	nop; delay slot nop
 1342  00001ed0          	L98_LF2:
 1343  00001ed0  0bfffec8	j	L88_LF2
 1344  00001ed4  54000000	nop; delay slot nop
 1345  00001ed8          	L89_LF2:
 1346  00001ed8  8fc10004	lw	r1,4(r30)
 1347  00001edc  64220000	snei	r2,r1,#0
 1348  00001ee0  10400010	beqz	r2,L99_LF2
 1349  00001ee4  54000000	nop; delay slot nop
 1350  00001ee8  8fc10004	lw	r1,4(r30)
 1351  00001eec  8fc20000	lw	r2,(r30)
 1352  00001ef0  ac220000	sw	(r1),r2
 1353  00001ef4          	L99_LF2:
 1354  00001ef4  8fc1fff4	lw	r1,-12(r30)
 1355  00001ef8  8fc2ffec	lw	r2,-20(r30)
 1356  00001efc  00200035	movi2fp	f0,r1
 1357  00001f00  00400835	movi2fp	f1,r2
 1358  00001f04  0401000e	mult	f0,f0,f1
 1359  00001f08  00000834	movfp2i	r1,f0
 1360  00001f0c  afc1fff4	sw	-12(r30),r1
 1361  00001f10  8fc1fff4	lw	r1,-12(r30)
 1362  00001f14  08000004	j	L72_LF2
 1363  00001f18  54000000	nop; delay slot nop
 1364  00001f1c          	L72_LF2:
 1365  00001f1c  8fa20000	lw	r2,0(r29)
 1366  00001f20  8fdffff8	lw	r31,-8(r30)
 1367  00001f24  001ee820	add	r29,r0,r30
 1368  00001f28  8fdefffc	lw	r30,-4(r30)
 1369  00001f2c  4be00000	jr	r31
 1370  00001f30  54000000	nop
 1371  00001f34          	.endproc _dstrtol
 1372  00001f34          	.align 2
 1373  00001f34          	.proc _bcopy
 1374  00001f34          	.global _bcopy
 1375  00001f34          	_bcopy:
 1376                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1377  00001f34  afbefffc	sw	-4(r29),r30; push fp
 1378  00001f38  001df020	add	r30,r0,r29; fp = sp
 1379  00001f3c  afbffff8	sw	-8(r29),r31; push ret addr
 1380  00001f40  2fbd0010	subui	r29,r29,#16; alloc local storage
 1381  00001f44  afa20000	sw	0(r29),r2
 1382  00001f48  afa30004	sw	4(r29),r3
 1383  00001f4c  54000000	nop
 1384  00001f50          	L101_LF2:
 1385  00001f50  8fc10008	lw	r1,8(r30)
 1386  00001f54  2022ffff	addi	r2,r1,#-1
 1387  00001f58  afc20008	sw	8(r30),r2
 1388  00001f5c  6c210000	sgti	r1,r1,#0
 1389  00001f60  1420000c	bnez	r1,L103_LF2
 1390  00001f64  54000000	nop; delay slot nop
 1391  00001f68  0800002c	j	L102_LF2
 1392  00001f6c  54000000	nop; delay slot nop
 1393  00001f70          	L103_LF2:
 1394  00001f70  8fc10004	lw	r1,4(r30)
 1395  00001f74  20220001	addi	r2,r1,#1
 1396  00001f78  afc20004	sw	4(r30),r2
 1397  00001f7c  8fc20000	lw	r2,(r30)
 1398  00001f80  20430001	addi	r3,r2,#1
 1399  00001f84  afc30000	sw	(r30),r3
 1400  00001f88  80420000	lb	r2,(r2)
 1401  00001f8c  a0220000	sb	(r1),r2
 1402  00001f90  0bffffbc	j	L101_LF2
 1403  00001f94  54000000	nop; delay slot nop
 1404  00001f98          	L102_LF2:
 1405  00001f98          	L100_LF2:
 1406  00001f98  8fa20000	lw	r2,0(r29)
 1407  00001f9c  8fa30004	lw	r3,4(r29)
 1408  00001fa0  8fdffff8	lw	r31,-8(r30)
 1409  00001fa4  001ee820	add	r29,r0,r30
 1410  00001fa8  8fdefffc	lw	r30,-4(r30)
 1411  00001fac  4be00000	jr	r31
 1412  00001fb0  54000000	nop
 1413  00001fb4          	.endproc _bcopy
 1414  00001fb4          	.align 2
 1415  00001fb4          	.proc _bzero
 1416  00001fb4          	.global _bzero
 1417  00001fb4          	_bzero:
 1418                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1419  00001fb4  afbefffc	sw	-4(r29),r30; push fp
 1420  00001fb8  001df020	add	r30,r0,r29; fp = sp
 1421  00001fbc  afbffff8	sw	-8(r29),r31; push ret addr
 1422  00001fc0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1423  00001fc4  afa20000	sw	0(r29),r2
 1424  00001fc8  54000000	nop
 1425  00001fcc          	L105_LF2:
 1426  00001fcc  8fc10004	lw	r1,4(r30)
 1427  00001fd0  2022ffff	addi	r2,r1,#-1
 1428  00001fd4  afc20004	sw	4(r30),r2
 1429  00001fd8  6c210000	sgti	r1,r1,#0
 1430  00001fdc  1420000c	bnez	r1,L107_LF2
 1431  00001fe0  54000000	nop; delay slot nop
 1432  00001fe4  08000020	j	L106_LF2
 1433  00001fe8  54000000	nop; delay slot nop
 1434  00001fec          	L107_LF2:
 1435  00001fec  8fc10000	lw	r1,(r30)
 1436  00001ff0  20220001	addi	r2,r1,#1
 1437  00001ff4  afc20000	sw	(r30),r2
 1438  00001ff8  20020000	addi	r2,r0,(#0x0)&0xff
 1439  00001ffc  a0220000	sb	(r1),r2
 1440  00002000  0bffffc8	j	L105_LF2
 1441  00002004  54000000	nop; delay slot nop
 1442  00002008          	L106_LF2:
 1443  00002008          	L104_LF2:
 1444  00002008  8fa20000	lw	r2,0(r29)
 1445  0000200c  8fdffff8	lw	r31,-8(r30)
 1446  00002010  001ee820	add	r29,r0,r30
 1447  00002014  8fdefffc	lw	r30,-4(r30)
 1448  00002018  4be00000	jr	r31
 1449  0000201c  54000000	nop
 1450  00002020          	.endproc _bzero
 1451  00002020          	.align 2
 1452  00002020          	.proc _min
 1453  00002020          	.global _min
 1454  00002020          	_min:
 1455                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1456  00002020  afbefffc	sw	-4(r29),r30; push fp
 1457  00002024  001df020	add	r30,r0,r29; fp = sp
 1458  00002028  afbffff8	sw	-8(r29),r31; push ret addr
 1459  0000202c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1460  00002030  afa20000	sw	0(r29),r2
 1461  00002034  afa30004	sw	4(r29),r3
 1462  00002038  8fc10000	lw	r1,(r30)
 1463  0000203c  8fc20004	lw	r2,4(r30)
 1464  00002040  0022182c	sle	r3,r1,r2
 1465  00002044  14600008	bnez	r3,L109_LF2
 1466  00002048  54000000	nop; delay slot nop
 1467  0000204c  8fc10004	lw	r1,4(r30)
 1468  00002050          	L109_LF2:
 1469  00002050  08000004	j	L108_LF2
 1470  00002054  54000000	nop; delay slot nop
 1471  00002058          	L108_LF2:
 1472  00002058  8fa20000	lw	r2,0(r29)
 1473  0000205c  8fa30004	lw	r3,4(r29)
 1474  00002060  8fdffff8	lw	r31,-8(r30)
 1475  00002064  001ee820	add	r29,r0,r30
 1476  00002068  8fdefffc	lw	r30,-4(r30)
 1477  0000206c  4be00000	jr	r31
 1478  00002070  54000000	nop
 1479  00002074          	.endproc _min
 1480  00002074          	.align 2
 1481  00002074          	.proc _max
 1482  00002074          	.global _max
 1483  00002074          	_max:
 1484                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1485  00002074  afbefffc	sw	-4(r29),r30; push fp
 1486  00002078  001df020	add	r30,r0,r29; fp = sp
 1487  0000207c  afbffff8	sw	-8(r29),r31; push ret addr
 1488  00002080  2fbd0010	subui	r29,r29,#16; alloc local storage
 1489  00002084  afa20000	sw	0(r29),r2
 1490  00002088  afa30004	sw	4(r29),r3
 1491  0000208c  8fc10000	lw	r1,(r30)
 1492  00002090  8fc20004	lw	r2,4(r30)
 1493  00002094  0022182d	sge	r3,r1,r2
 1494  00002098  14600008	bnez	r3,L111_LF2
 1495  0000209c  54000000	nop; delay slot nop
 1496  000020a0  8fc10004	lw	r1,4(r30)
 1497  000020a4          	L111_LF2:
 1498  000020a4  08000004	j	L110_LF2
 1499  000020a8  54000000	nop; delay slot nop
 1500  000020ac          	L110_LF2:
 1501  000020ac  8fa20000	lw	r2,0(r29)
 1502  000020b0  8fa30004	lw	r3,4(r29)
 1503  000020b4  8fdffff8	lw	r31,-8(r30)
 1504  000020b8  001ee820	add	r29,r0,r30
 1505  000020bc  8fdefffc	lw	r30,-4(r30)
 1506  000020c0  4be00000	jr	r31
 1507  000020c4  54000000	nop
 1508  000020c8          	.endproc _max
 1509                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1510                      ;;;
 1511                      ;;; Most of the traps are called in files from libtraps.
 1514  000020c8          	.align 2
 1515  000020c8          	.proc _exit
 1516  000020c8          	.global _exit
 1517  000020c8          	_exit:
 1518  000020c8  44000300	trap	#0x300
 1519  000020cc  4be00000	jr	r31
 1520  000020d0  54000000	nop
 1521  000020d4          	.endproc _exit
 1523                      ; for the benefit of gcc.
 1524  000020d4          	.proc ___main
 1525  000020d4          	.global ___main
 1526  000020d4          	___main:
 1527  000020d4  4be00000	jr	r31
 1528  000020d8  54000000	nop
 1529  000020dc          	.endproc ___main
 1530  000020dc          	.text
 1531  000020dc          	.global _etext
 1532  000020dc          	_etext:
 1533  000020dc          	.align 3
 1534  000020e0          	.data
 1535  00003056          	.global _edata
 1536  00003056          	_edata:
