 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 226
    4                      ; Text size: 4460
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
   85  0000300c  70726f63	
   85  00003010  73202825	
   85  00003014  64293a20	
   85  00003018  42616420	
   85  0000301c  73656d5f	
   85  00003020  63726561	
   85  00003024  74650a00	
   86  00003028          	.align 2
   87  00003028          	LC2_LF0:
   88  00003028  74657374	.ascii "test.dlx.obj\000"
   88  0000302c  2e646c78	
   88  00003030  2e6f626a	
   88  00003034  00      	
   89  00003035          	.align 2
   90  00003038          	LC3_LF0:
   91  00003038  6d616b65	.ascii "makeprocs (%d): Bad sem test\n\000"
   91  0000303c  70726f63	
   91  00003040  73202825	
   91  00003044  64293a20	
   91  00003048  42616420	
   91  0000304c  73656d20	
   91  00003050  74657374	
   91  00003054  0a00    	
   92  00003056          	.align 2
   93  00003058          	LC4_LF0:
   94  00003058  2d2d2d2d	.ascii "----------------------------------------------------------------\n\000"
   94  0000305c  2d2d2d2d	
   94  00003060  2d2d2d2d	
   94  00003064  2d2d2d2d	
   94  00003068  2d2d2d2d	
   94  0000306c  2d2d2d2d	
   94  00003070  2d2d2d2d	
   94  00003074  2d2d2d2d	
   94  00003078  2d2d2d2d	
   94  0000307c  2d2d2d2d	
   94  00003080  2d2d2d2d	
   94  00003084  2d2d2d2d	
   94  00003088  2d2d2d2d	
   94  0000308c  2d2d2d2d	
   94  00003090  2d2d2d2d	
   94  00003094  2d2d2d2d	
   94  00003098  0a00    	
   95  0000309a          	.align 2
   96  0000309c          	LC5_LF0:
   97  0000309c  6d616b65	.ascii "makeprocs (%d): All other processes completed, exiting main process.\n"
   97  000030a0  70726f63	
   97  000030a4  73202825	
   97  000030a8  64293a20	
   97  000030ac  416c6c20	
   97  000030b0  6f746865	
   97  000030b4  72207072	
   97  000030b8  6f636573	
   97  000030bc  73657320	
   97  000030c0  636f6d70	
   97  000030c4  6c657465	
   97  000030c8  642c2065	
   97  000030cc  78697469	
   97  000030d0  6e67206d	
   97  000030d4  61696e20	
   97  000030d8  70726f63	
   97  000030dc  6573732e	
   97  000030e0  0a      	
   98  000030e1  00      	.ascii "\000"
   99  000030e2          	.text
  100  000010d4          	.align 2
  101  000010d4          	.proc _main
  102  000010d4          	.global _main
  103  000010d4          	_main:
  104                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  105  000010d4  afbefffc	sw	-4(r29),r30; push fp
  106  000010d8  001df020	add	r30,r0,r29; fp = sp
  107  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  108  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  109  000010e4  8fc20000	lw	r2,(r30)
  110  000010e8  8fc30004	lw	r3,4(r30)
  111  000010ec  0c001074	jal	___main
  112  000010f0  54000000	nop; not filled.
  113  000010f4  64410001	snei	r1,r2,#1
  114  000010f8  10200030	beqz	r1,L14_LF0
  115  000010fc  54000000	nop; not filled.
  116  00001100  23bdfff8	addi	r29,r29,#-8
  117  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  118  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  119  0000110c  afa40000	sw	(r29),r4
  120  00001110  8c610000	lw	r1,(r3)
  121  00001114  afa10004	sw	4(r29),r1
  122  00001118  0c00017c	jal	_Printf
  123  0000111c  54000000	nop; not filled.
  124  00001120  0c000288	jal	_Exit
  125  00001124  54000000	nop; not filled.
  126  00001128  23bd0008	addi	r29,r29,#8
  127  0000112c          	L14_LF0:
  128  0000112c  23bdfff8	addi	r29,r29,#-8
  129  00001130  2004ffff	addi	r4,r0,#-1
  130  00001134  afa40000	sw	(r29),r4
  131  00001138  0c0001a4	jal	_sem_create
  132  0000113c  54000000	nop; not filled.
  133  00001140  00011820	add	r3,r0,r1
  134  00001144  23bd0008	addi	r29,r29,#8
  135  00001148  6061ffff	seqi	r1,r3,#-1
  136  0000114c  10200034	beqz	r1,L15_LF0
  137  00001150  54000000	nop; not filled.
  138  00001154  0c000158	jal	_getpid
  139  00001158  54000000	nop; not filled.
  140  0000115c  23bdfff8	addi	r29,r29,#-8
  141  00001160  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  142  00001164  24843008	addui	r4,r4,(LC1_LF0)&0xffff
  143  00001168  afa40000	sw	(r29),r4
  144  0000116c  afa10004	sw	4(r29),r1
  145  00001170  0c000124	jal	_Printf
  146  00001174  54000000	nop; not filled.
  147  00001178  0c000230	jal	_Exit
  148  0000117c  54000000	nop; not filled.
  149  00001180  23bd0008	addi	r29,r29,#8
  150  00001184          	L15_LF0:
  151  00001184  23bdfff8	addi	r29,r29,#-8
  152  00001188  afa30000	sw	(r29),r3
  153  0000118c  23c2ffe8	addi	r2,r30,#-24
  154  00001190  afa20004	sw	4(r29),r2
  155  00001194  0c000944	jal	_ditoa
  156  00001198  54000000	nop; not filled.
  157  0000119c  23bdfff8	addi	r29,r29,#-8
  158  000011a0  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  159  000011a4  24843028	addui	r4,r4,(LC2_LF0)&0xffff
  160  000011a8  afa40000	sw	(r29),r4
  161  000011ac  afa20004	sw	4(r29),r2
  162  000011b0  20040000	addi	r4,r0,#0
  163  000011b4  afa40008	sw	8(r29),r4
  164  000011b8  0c000100	jal	_process_create
  165  000011bc  54000000	nop; not filled.
  166  000011c0  afa30000	sw	(r29),r3
  167  000011c4  0c000124	jal	_sem_wait
  168  000011c8  54000000	nop; not filled.
  169  000011cc  23bd0010	addi	r29,r29,#16
  170  000011d0  64210001	snei	r1,r1,#1
  171  000011d4  10200034	beqz	r1,L16_LF0
  172  000011d8  54000000	nop; not filled.
  173  000011dc  0c0000d0	jal	_getpid
  174  000011e0  54000000	nop; not filled.
  175  000011e4  23bdfff8	addi	r29,r29,#-8
  176  000011e8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  177  000011ec  24843038	addui	r4,r4,(LC3_LF0)&0xffff
  178  000011f0  afa40000	sw	(r29),r4
  179  000011f4  afa10004	sw	4(r29),r1
  180  000011f8  0c00009c	jal	_Printf
  181  000011fc  54000000	nop; not filled.
  182  00001200  0c0001a8	jal	_Exit
  183  00001204  54000000	nop; not filled.
  184  00001208  23bd0008	addi	r29,r29,#8
  185  0000120c          	L16_LF0:
  186  0000120c  23bdfff8	addi	r29,r29,#-8
  187  00001210  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  188  00001214  24843058	addui	r4,r4,(LC4_LF0)&0xffff
  189  00001218  afa40000	sw	(r29),r4
  190  0000121c  0c000078	jal	_Printf
  191  00001220  54000000	nop; not filled.
  192  00001224  0c000088	jal	_getpid
  193  00001228  54000000	nop; not filled.
  194  0000122c  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  195  00001230  2484309c	addui	r4,r4,(LC5_LF0)&0xffff
  196  00001234  afa40000	sw	(r29),r4
  197  00001238  afa10004	sw	4(r29),r1
  198  0000123c  0c000058	jal	_Printf
  199  00001240  54000000	nop; not filled.
  200  00001244  23bd0008	addi	r29,r29,#8
  201  00001248  0c000f0c	jal	_exit
  202  0000124c  54000000	nop
  203  00001250          	.endproc _main
  204                      ;;;
  205                      ;;; Stub functions for DLX traps.
  206                      ;;;
  207                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  208                      ;;;
  209                      ;;; The traps such as Open and Close
  210                      ;;; (note the capital letters) are for use by user programs.  The traps
  211                      ;;; with names such as open and close (lower case) are for use by the OS.
  212                      ;;;
  215  00001250          	.align 2
  217                      ;;; The following are the traps to be used by user-level programs
  218                      ;;;
  220  00001250          	.align 2
  221  00001250          	.proc _Open
  222  00001250          	.global _Open
  223  00001250          	_Open:
  224                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  225                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  226                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  227  00001250  44000213	trap	#0x213
  228  00001254  4be00000	jr	r31
  229  00001258  54000000	nop
  230  0000125c          	.endproc _Open
  232  0000125c          	.proc _Close
  233  0000125c          	.global _Close
  234  0000125c          	_Close:
  235  0000125c  44000214	trap	#0x214
  236  00001260  4be00000	jr	r31
  237  00001264  54000000	nop
  238  00001268          	.endproc _Close
  240  00001268          	.proc _Read
  241  00001268          	.global _Read
  242  00001268          	_Read:
  243  00001268  44000210	trap	#0x210
  244  0000126c  4be00000	jr	r31
  245  00001270  54000000	nop
  246  00001274          	.endproc _Read
  248  00001274          	.proc _Write
  249  00001274          	.global _Write
  250  00001274          	_Write:
  251  00001274  44000211	trap	#0x211
  252  00001278  4be00000	jr	r31
  253  0000127c  54000000	nop
  254  00001280          	.endproc _Write
  256  00001280          	.proc _Lseek
  257  00001280          	.global _Lseek
  258  00001280          	_Lseek:
  259  00001280  44000212	trap	#0x212
  260  00001284  4be00000	jr	r31
  261  00001288  54000000	nop
  262  0000128c          	.endproc _Lseek
  264  0000128c          	.proc _Putchar
  265  0000128c          	.global _Putchar
  266  0000128c          	_Putchar:
  267  0000128c  44000280	trap	#0x280
  268  00001290  4be00000	jr	r31
  269  00001294  54000000	nop
  270  00001298          	.endproc _Putchar
  272  00001298          	.proc _Printf
  273  00001298          	.global _Printf
  274  00001298          	_Printf:
  275  00001298  44000201	trap	#0x201
  276  0000129c  4be00000	jr	r31
  277  000012a0  54000000	nop
  278  000012a4          	.endproc _Printf
  280  000012a4          	.proc _fork
  281  000012a4          	.global _fork
  282  000012a4          	_fork:
  283  000012a4  44000430	trap	#0x430
  284  000012a8  4be00000	jr	r31
  285  000012ac  54000000	nop
  286  000012b0          	.endproc _fork
  288  000012b0          	.proc _getpid
  289  000012b0          	.global _getpid
  290  000012b0          	_getpid:
  291  000012b0  44000431	trap	#0x431
  292  000012b4  4be00000	jr	r31
  293  000012b8  54000000	nop
  294  000012bc          	.endproc _getpid
  296  000012bc          	.proc _process_create
  297  000012bc          	.global _process_create
  298  000012bc          	_process_create:
  299  000012bc  44000432	trap	#0x432
  300  000012c0  4be00000	jr	r31
  301  000012c4  54000000	nop
  302  000012c8          	.endproc _process_create
  304  000012c8          	.proc _shmget
  305  000012c8          	.global _shmget
  306  000012c8          	_shmget:
  307  000012c8  44000440	trap	#0x440
  308  000012cc  4be00000	jr	r31
  309  000012d0  54000000	nop
  310  000012d4          	.endproc _shmget
  312  000012d4          	.proc _shmat
  313  000012d4          	.global _shmat
  314  000012d4          	_shmat:
  315  000012d4  44000441	trap	#0x441
  316  000012d8  4be00000	jr	r31
  317  000012dc  54000000	nop
  318  000012e0          	.endproc _shmat
  320  000012e0          	.proc _sem_create
  321  000012e0          	.global _sem_create
  322  000012e0          	_sem_create:
  323  000012e0  44000450	trap	#0x450
  324  000012e4  4be00000	jr	r31
  325  000012e8  54000000	nop
  326  000012ec          	.endproc _sem_create
  328  000012ec          	.proc _sem_wait
  329  000012ec          	.global _sem_wait
  330  000012ec          	_sem_wait:
  331  000012ec  44000451	trap	#0x451
  332  000012f0  4be00000	jr	r31
  333  000012f4  54000000	nop
  334  000012f8          	.endproc _sem_wait
  336  000012f8          	.proc _sem_signal
  337  000012f8          	.global _sem_signal
  338  000012f8          	_sem_signal:
  339  000012f8  44000452	trap	#0x452
  340  000012fc  4be00000	jr	r31
  341  00001300  54000000	nop
  342  00001304          	.endproc _sem_signal
  344  00001304          	.proc _lock_create
  345  00001304          	.global _lock_create
  346  00001304          	_lock_create:
  347  00001304  44000453	trap	#0x453
  348  00001308  4be00000	jr	r31
  349  0000130c  54000000	nop
  350  00001310          	.endproc _lock_create
  352  00001310          	.proc _lock_acquire
  353  00001310          	.global _lock_acquire
  354  00001310          	_lock_acquire:
  355  00001310  44000454	trap	#0x454
  356  00001314  4be00000	jr	r31
  357  00001318  54000000	nop
  358  0000131c          	.endproc _lock_acquire
  360  0000131c          	.proc _lock_release
  361  0000131c          	.global _lock_release
  362  0000131c          	_lock_release:
  363  0000131c  44000455	trap	#0x455
  364  00001320  4be00000	jr	r31
  365  00001324  54000000	nop
  366  00001328          	.endproc _lock_release
  368  00001328          	.proc _cond_create
  369  00001328          	.global _cond_create
  370  00001328          	_cond_create:
  371  00001328  44000456	trap	#0x456
  372  0000132c  4be00000	jr	r31
  373  00001330  54000000	nop
  374  00001334          	.endproc _cond_create
  376  00001334          	.proc _cond_wait
  377  00001334          	.global _cond_wait
  378  00001334          	_cond_wait:
  379  00001334  44000457	trap	#0x457
  380  00001338  4be00000	jr	r31
  381  0000133c  54000000	nop
  382  00001340          	.endproc _cond_wait
  384  00001340          	.proc _cond_signal
  385  00001340          	.global _cond_signal
  386  00001340          	_cond_signal:
  387  00001340  44000458	trap	#0x458
  388  00001344  4be00000	jr	r31
  389  00001348  54000000	nop
  390  0000134c          	.endproc _cond_signal
  392  0000134c          	.proc _cond_broadcast
  393  0000134c          	.global _cond_broadcast
  394  0000134c          	_cond_broadcast:
  395  0000134c  44000459	trap	#0x459
  396  00001350  4be00000	jr	r31
  397  00001354  54000000	nop
  398  00001358          	.endproc _cond_broadcast
  400  00001358          	.proc _mbox_create
  401  00001358          	.global _mbox_create
  402  00001358          	_mbox_create:
  403  00001358  44000460	trap	#0x460
  404  0000135c  4be00000	jr	r31
  405  00001360  54000000	nop
  406  00001364          	.endproc _mbox_create
  408  00001364          	.proc _mbox_open
  409  00001364          	.global _mbox_open
  410  00001364          	_mbox_open:
  411  00001364  44000461	trap	#0x461
  412  00001368  4be00000	jr	r31
  413  0000136c  54000000	nop
  414  00001370          	.endproc _mbox_open
  416  00001370          	.proc _mbox_close
  417  00001370          	.global _mbox_close
  418  00001370          	_mbox_close:
  419  00001370  44000462	trap	#0x462
  420  00001374  4be00000	jr	r31
  421  00001378  54000000	nop
  422  0000137c          	.endproc _mbox_close
  424  0000137c          	.proc _mbox_send
  425  0000137c          	.global _mbox_send
  426  0000137c          	_mbox_send:
  427  0000137c  44000463	trap	#0x463
  428  00001380  4be00000	jr	r31
  429  00001384  54000000	nop
  430  00001388          	.endproc _mbox_send
  432  00001388          	.proc _mbox_recv
  433  00001388          	.global _mbox_recv
  434  00001388          	_mbox_recv:
  435  00001388  44000464	trap	#0x464
  436  0000138c  4be00000	jr	r31
  437  00001390  54000000	nop
  438  00001394          	.endproc _mbox_recv
  440  00001394          	.proc _sleep
  441  00001394          	.global _sleep
  442  00001394          	_sleep:
  443  00001394  44000465	trap	#0x465
  444  00001398  4be00000	jr	r31
  445  0000139c  54000000	nop
  446  000013a0          	.endproc _sleep
  448  000013a0          	.proc _yield
  449  000013a0          	.global _yield
  450  000013a0          	_yield:
  451  000013a0  44000466	trap	#0x466
  452  000013a4  4be00000	jr	r31
  453  000013a8  54000000	nop
  454  000013ac          	.endproc _yield
  457  000013ac          	.proc _Exit
  458  000013ac          	.global _Exit
  459  000013ac          	_Exit:
  460  000013ac  44000500	trap	#0x500
  461  000013b0  4be00000	jr	r31
  462  000013b4  54000000	nop
  463  000013b8          	.endproc _Exit
  466  000013b8          	.proc _malloc
  467  000013b8          	.global _malloc
  468  000013b8          	_malloc:
  469  000013b8  44000467	trap	#0x467
  470  000013bc  4be00000	jr	r31
  471  000013c0          	.endproc _malloc
  474  000013c0          	.proc _mfree
  475  000013c0          	.global _mfree
  476  000013c0          	_mfree:
  477  000013c0  44000468	trap	#0x468
  478  000013c4  4be00000	jr	r31
  479  000013c8          	.endproc _mfree
  480                      ; Compiled by GCC
  482  000013c8          	.align 2
  483  000013c8          	.proc _isspace
  484  000013c8          	.global _isspace
  485  000013c8          	_isspace:
  486                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  487  000013c8  afbefffc	sw	-4(r29),r30; push fp
  488  000013cc  001df020	add	r30,r0,r29; fp = sp
  489  000013d0  afbffff8	sw	-8(r29),r31; push ret addr
  490  000013d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  491  000013d8  afa20000	sw	0(r29),r2
  492  000013dc  afa30004	sw	4(r29),r3
  493  000013e0  afa40008	sw	8(r29),r4
  494  000013e4  83c20003	lb	r2,3(r30)
  495  000013e8  20010000	addi	r1,r0,#0
  496  000013ec  304300ff	andi	r3,r2,#0x00ff
  497  000013f0  60640020	seqi	r4,r3,#32
  498  000013f4  1480002c	bnez	r4,L3_LF2
  499  000013f8  54000000	nop; delay slot nop
  500  000013fc  304300ff	andi	r3,r2,#0x00ff
  501  00001400  60640009	seqi	r4,r3,#9
  502  00001404  1480001c	bnez	r4,L3_LF2
  503  00001408  54000000	nop; delay slot nop
  504  0000140c  304300ff	andi	r3,r2,#0x00ff
  505  00001410  6064000a	seqi	r4,r3,#10
  506  00001414  1480000c	bnez	r4,L3_LF2
  507  00001418  54000000	nop; delay slot nop
  508  0000141c  08000008	j	L2_LF2
  509  00001420  54000000	nop; delay slot nop
  510  00001424          	L3_LF2:
  511  00001424  20010001	addi	r1,r0,#1
  512  00001428          	L2_LF2:
  513  00001428  08000004	j	L1_LF2
  514  0000142c  54000000	nop; delay slot nop
  515  00001430          	L1_LF2:
  516  00001430  8fa20000	lw	r2,0(r29)
  517  00001434  8fa30004	lw	r3,4(r29)
  518  00001438  8fa40008	lw	r4,8(r29)
  519  0000143c  8fdffff8	lw	r31,-8(r30)
  520  00001440  001ee820	add	r29,r0,r30
  521  00001444  8fdefffc	lw	r30,-4(r30)
  522  00001448  4be00000	jr	r31
  523  0000144c  54000000	nop
  524  00001450          	.endproc _isspace
  525  00001450          	.align 2
  526  00001450          	.proc _isxdigit
  527  00001450          	.global _isxdigit
  528  00001450          	_isxdigit:
  529                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  530  00001450  afbefffc	sw	-4(r29),r30; push fp
  531  00001454  001df020	add	r30,r0,r29; fp = sp
  532  00001458  afbffff8	sw	-8(r29),r31; push ret addr
  533  0000145c  2fbd0018	subui	r29,r29,#24; alloc local storage
  534  00001460  afa20000	sw	0(r29),r2
  535  00001464  afa30004	sw	4(r29),r3
  536  00001468  afa40008	sw	8(r29),r4
  537  0000146c  83c20003	lb	r2,3(r30)
  538  00001470  20010000	addi	r1,r0,#0
  539  00001474  304300ff	andi	r3,r2,#0x00ff
  540  00001478  6c64002f	sgtui	r4,r3,#47
  541  0000147c  1080001c	beqz	r4,L7_LF2
  542  00001480  54000000	nop; delay slot nop
  543  00001484  304300ff	andi	r3,r2,#0x00ff
  544  00001488  70640039	sleui	r4,r3,#57
  545  0000148c  1480005c	bnez	r4,L6_LF2
  546  00001490  54000000	nop; delay slot nop
  547  00001494  08000004	j	L7_LF2
  548  00001498  54000000	nop; delay slot nop
  549  0000149c          	L7_LF2:
  550  0000149c  304300ff	andi	r3,r2,#0x00ff
  551  000014a0  6c640060	sgtui	r4,r3,#96
  552  000014a4  1080001c	beqz	r4,L8_LF2
  553  000014a8  54000000	nop; delay slot nop
  554  000014ac  304300ff	andi	r3,r2,#0x00ff
  555  000014b0  70640066	sleui	r4,r3,#102
  556  000014b4  14800034	bnez	r4,L6_LF2
  557  000014b8  54000000	nop; delay slot nop
  558  000014bc  08000004	j	L8_LF2
  559  000014c0  54000000	nop; delay slot nop
  560  000014c4          	L8_LF2:
  561  000014c4  304300ff	andi	r3,r2,#0x00ff
  562  000014c8  6c640040	sgtui	r4,r3,#64
  563  000014cc  10800020	beqz	r4,L5_LF2
  564  000014d0  54000000	nop; delay slot nop
  565  000014d4  304300ff	andi	r3,r2,#0x00ff
  566  000014d8  70640041	sleui	r4,r3,#65
  567  000014dc  1480000c	bnez	r4,L6_LF2
  568  000014e0  54000000	nop; delay slot nop
  569  000014e4  08000008	j	L5_LF2
  570  000014e8  54000000	nop; delay slot nop
  571  000014ec          	L6_LF2:
  572  000014ec  20010001	addi	r1,r0,#1
  573  000014f0          	L5_LF2:
  574  000014f0  08000004	j	L4_LF2
  575  000014f4  54000000	nop; delay slot nop
  576  000014f8          	L4_LF2:
  577  000014f8  8fa20000	lw	r2,0(r29)
  578  000014fc  8fa30004	lw	r3,4(r29)
  579  00001500  8fa40008	lw	r4,8(r29)
  580  00001504  8fdffff8	lw	r31,-8(r30)
  581  00001508  001ee820	add	r29,r0,r30
  582  0000150c  8fdefffc	lw	r30,-4(r30)
  583  00001510  4be00000	jr	r31
  584  00001514  54000000	nop
  585  00001518          	.endproc _isxdigit
  586  00001518          	.align 2
  587  00001518          	.proc _dstrcpy
  588  00001518          	.global _dstrcpy
  589  00001518          	_dstrcpy:
  590                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  591  00001518  afbefffc	sw	-4(r29),r30; push fp
  592  0000151c  001df020	add	r30,r0,r29; fp = sp
  593  00001520  afbffff8	sw	-8(r29),r31; push ret addr
  594  00001524  2fbd0018	subui	r29,r29,#24; alloc local storage
  595  00001528  afa20000	sw	0(r29),r2
  596  0000152c  afa30004	sw	4(r29),r3
  597  00001530  8fc10000	lw	r1,(r30)
  598  00001534  afc1fff4	sw	-12(r30),r1
  599  00001538          	L10_LF2:
  600  00001538  8fc10000	lw	r1,(r30)
  601  0000153c  20220001	addi	r2,r1,#1
  602  00001540  afc20000	sw	(r30),r2
  603  00001544  8fc20004	lw	r2,4(r30)
  604  00001548  20430001	addi	r3,r2,#1
  605  0000154c  afc30004	sw	4(r30),r3
  606  00001550  80420000	lb	r2,(r2)
  607  00001554  a0220000	sb	(r1),r2
  608  00001558  a3c2fff3	sb	-13(r30),r2
  609  0000155c          	L12_LF2:
  610  0000155c  93c1fff3	lbu	r1,-13(r30)
  611  00001560  64220000	snei	r2,r1,#0
  612  00001564  1440000c	bnez	r2,L13_LF2
  613  00001568  54000000	nop; delay slot nop
  614  0000156c  0800000c	j	L11_LF2
  615  00001570  54000000	nop; delay slot nop
  616  00001574          	L13_LF2:
  617  00001574  0bffffc0	j	L10_LF2
  618  00001578  54000000	nop; delay slot nop
  619  0000157c          	L11_LF2:
  620  0000157c  8fc1fff4	lw	r1,-12(r30)
  621  00001580  08000004	j	L9_LF2
  622  00001584  54000000	nop; delay slot nop
  623  00001588          	L9_LF2:
  624  00001588  8fa20000	lw	r2,0(r29)
  625  0000158c  8fa30004	lw	r3,4(r29)
  626  00001590  8fdffff8	lw	r31,-8(r30)
  627  00001594  001ee820	add	r29,r0,r30
  628  00001598  8fdefffc	lw	r30,-4(r30)
  629  0000159c  4be00000	jr	r31
  630  000015a0  54000000	nop
  631  000015a4          	.endproc _dstrcpy
  632  000015a4          	.align 2
  633  000015a4          	.proc _dstrncpy
  634  000015a4          	.global _dstrncpy
  635  000015a4          	_dstrncpy:
  636                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  637  000015a4  afbefffc	sw	-4(r29),r30; push fp
  638  000015a8  001df020	add	r30,r0,r29; fp = sp
  639  000015ac  afbffff8	sw	-8(r29),r31; push ret addr
  640  000015b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  641  000015b4  afa20000	sw	0(r29),r2
  642  000015b8  afa30004	sw	4(r29),r3
  643  000015bc  8fc10000	lw	r1,(r30)
  644  000015c0  afc1fff4	sw	-12(r30),r1
  645  000015c4          	L15_LF2:
  646  000015c4  8fc10008	lw	r1,8(r30)
  647  000015c8  2022ffff	addi	r2,r1,#-1
  648  000015cc  afc20008	sw	8(r30),r2
  649  000015d0  70210000	slei	r1,r1,#0
  650  000015d4  1020000c	beqz	r1,L18_LF2
  651  000015d8  54000000	nop; delay slot nop
  652  000015dc  08000048	j	L16_LF2
  653  000015e0  54000000	nop; delay slot nop
  654  000015e4          	L18_LF2:
  655  000015e4  8fc10000	lw	r1,(r30)
  656  000015e8  20220001	addi	r2,r1,#1
  657  000015ec  afc20000	sw	(r30),r2
  658  000015f0  8fc20004	lw	r2,4(r30)
  659  000015f4  20430001	addi	r3,r2,#1
  660  000015f8  afc30004	sw	4(r30),r3
  661  000015fc  80420000	lb	r2,(r2)
  662  00001600  a0220000	sb	(r1),r2
  663  00001604  a3c2fff3	sb	-13(r30),r2
  664  00001608          	L17_LF2:
  665  00001608  93c1fff3	lbu	r1,-13(r30)
  666  0000160c  64220000	snei	r2,r1,#0
  667  00001610  1440000c	bnez	r2,L19_LF2
  668  00001614  54000000	nop; delay slot nop
  669  00001618  0800000c	j	L16_LF2
  670  0000161c  54000000	nop; delay slot nop
  671  00001620          	L19_LF2:
  672  00001620  0bffffa0	j	L15_LF2
  673  00001624  54000000	nop; delay slot nop
  674  00001628          	L16_LF2:
  675  00001628  8fc1fff4	lw	r1,-12(r30)
  676  0000162c  08000004	j	L14_LF2
  677  00001630  54000000	nop; delay slot nop
  678  00001634          	L14_LF2:
  679  00001634  8fa20000	lw	r2,0(r29)
  680  00001638  8fa30004	lw	r3,4(r29)
  681  0000163c  8fdffff8	lw	r31,-8(r30)
  682  00001640  001ee820	add	r29,r0,r30
  683  00001644  8fdefffc	lw	r30,-4(r30)
  684  00001648  4be00000	jr	r31
  685  0000164c  54000000	nop
  686  00001650          	.endproc _dstrncpy
  687  00001650          	.align 2
  688  00001650          	.proc _dstrcat
  689  00001650          	.global _dstrcat
  690  00001650          	_dstrcat:
  691                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  692  00001650  afbefffc	sw	-4(r29),r30; push fp
  693  00001654  001df020	add	r30,r0,r29; fp = sp
  694  00001658  afbffff8	sw	-8(r29),r31; push ret addr
  695  0000165c  2fbd0018	subui	r29,r29,#24; alloc local storage
  696  00001660  afa20000	sw	0(r29),r2
  697  00001664  8fc10000	lw	r1,(r30)
  698  00001668  afc1fff4	sw	-12(r30),r1
  699  0000166c          	L21_LF2:
  700  0000166c  8fc10000	lw	r1,(r30)
  701  00001670  90220000	lbu	r2,(r1)
  702  00001674  64410000	snei	r1,r2,#0
  703  00001678  1420000c	bnez	r1,L23_LF2
  704  0000167c  54000000	nop; delay slot nop
  705  00001680  0800001c	j	L22_LF2
  706  00001684  54000000	nop; delay slot nop
  707  00001688          	L23_LF2:
  708  00001688  8fc20000	lw	r2,(r30)
  709  0000168c  20410001	addi	r1,r2,#1
  710  00001690  00011020	add	r2,r0,r1
  711  00001694  afc20000	sw	(r30),r2
  712  00001698  0bffffd0	j	L21_LF2
  713  0000169c  54000000	nop; delay slot nop
  714  000016a0          	L22_LF2:
  715  000016a0  23bdfff8	addi	r29,r29,#-8
  716  000016a4  001d0820	add	r1,r0,r29
  717  000016a8  8fc20000	lw	r2,(r30)
  718  000016ac  ac220000	sw	(r1),r2
  719  000016b0  8fc20004	lw	r2,4(r30)
  720  000016b4  ac220004	sw	4(r1),r2
  721  000016b8  0ffffe5c	jal	_dstrcpy
  722  000016bc  54000000	nop; delay slot nop
  723  000016c0  23bd0008	addi	r29,r29,#8
  724  000016c4  8fc1fff4	lw	r1,-12(r30)
  725  000016c8  08000004	j	L20_LF2
  726  000016cc  54000000	nop; delay slot nop
  727  000016d0          	L20_LF2:
  728  000016d0  8fa20000	lw	r2,0(r29)
  729  000016d4  8fdffff8	lw	r31,-8(r30)
  730  000016d8  001ee820	add	r29,r0,r30
  731  000016dc  8fdefffc	lw	r30,-4(r30)
  732  000016e0  4be00000	jr	r31
  733  000016e4  54000000	nop
  734  000016e8          	.endproc _dstrcat
  735  000016e8          	.align 2
  736  000016e8          	.proc _dstrncmp
  737  000016e8          	.global _dstrncmp
  738  000016e8          	_dstrncmp:
  739                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  740  000016e8  afbefffc	sw	-4(r29),r30; push fp
  741  000016ec  001df020	add	r30,r0,r29; fp = sp
  742  000016f0  afbffff8	sw	-8(r29),r31; push ret addr
  743  000016f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  744  000016f8  afa20000	sw	0(r29),r2
  745  000016fc  afa30004	sw	4(r29),r3
  746  00001700  54000000	nop
  747  00001704  20010000	addi	r1,r0,#0
  748  00001708  afc1fff4	sw	-12(r30),r1
  749  0000170c          	L25_LF2:
  750  0000170c  8fc1fff4	lw	r1,-12(r30)
  751  00001710  8fc20008	lw	r2,8(r30)
  752  00001714  0022082a	slt	r1,r1,r2
  753  00001718  1420000c	bnez	r1,L28_LF2
  754  0000171c  54000000	nop; delay slot nop
  755  00001720  08000088	j	L26_LF2
  756  00001724  54000000	nop; delay slot nop
  757  00001728          	L28_LF2:
  758  00001728  8fc10004	lw	r1,4(r30)
  759  0000172c  90220000	lbu	r2,(r1)
  760  00001730  64410000	snei	r1,r2,#0
  761  00001734  14200018	bnez	r1,L29_LF2
  762  00001738  54000000	nop; delay slot nop
  763  0000173c  20010000	addi	r1,r0,#0
  764  00001740  080000d8	j	L24_LF2
  765  00001744  54000000	nop; delay slot nop
  766  00001748  08000028	j	L30_LF2
  767  0000174c  54000000	nop; delay slot nop
  768  00001750          	L29_LF2:
  769  00001750  8fc10000	lw	r1,(r30)
  770  00001754  8fc20004	lw	r2,4(r30)
  771  00001758  90210000	lbu	r1,(r1)
  772  0000175c  90420000	lbu	r2,(r2)
  773  00001760  00220829	sne	r1,r1,r2
  774  00001764  1020000c	beqz	r1,L30_LF2
  775  00001768  54000000	nop; delay slot nop
  776  0000176c  0800003c	j	L26_LF2
  777  00001770  54000000	nop; delay slot nop
  778  00001774          	L31_LF2:
  779  00001774          	L30_LF2:
  780  00001774  8fc20000	lw	r2,(r30)
  781  00001778  20410001	addi	r1,r2,#1
  782  0000177c  00011020	add	r2,r0,r1
  783  00001780  afc20000	sw	(r30),r2
  784  00001784  8fc20004	lw	r2,4(r30)
  785  00001788  20410001	addi	r1,r2,#1
  786  0000178c  00011020	add	r2,r0,r1
  787  00001790  afc20004	sw	4(r30),r2
  788  00001794          	L27_LF2:
  789  00001794  8fc2fff4	lw	r2,-12(r30)
  790  00001798  20410001	addi	r1,r2,#1
  791  0000179c  00011020	add	r2,r0,r1
  792  000017a0  afc2fff4	sw	-12(r30),r2
  793  000017a4  0bffff64	j	L25_LF2
  794  000017a8  54000000	nop; delay slot nop
  795  000017ac          	L26_LF2:
  796  000017ac  8fc1fff4	lw	r1,-12(r30)
  797  000017b0  8fc20008	lw	r2,8(r30)
  798  000017b4  00220828	seq	r1,r1,r2
  799  000017b8  10200018	beqz	r1,L32_LF2
  800  000017bc  54000000	nop; delay slot nop
  801  000017c0  20010000	addi	r1,r0,#0
  802  000017c4  08000054	j	L24_LF2
  803  000017c8  54000000	nop; delay slot nop
  804  000017cc  0800004c	j	L33_LF2
  805  000017d0  54000000	nop; delay slot nop
  806  000017d4          	L32_LF2:
  807  000017d4  8fc20000	lw	r2,(r30)
  808  000017d8  90410000	lbu	r1,(r2)
  809  000017dc  8fc20004	lw	r2,4(r30)
  810  000017e0  90430000	lbu	r3,(r2)
  811  000017e4  00230822	sub	r1,r1,r3
  812  000017e8  74220000	sgei	r2,r1,#0
  813  000017ec  10400020	beqz	r2,L34_LF2
  814  000017f0  54000000	nop; delay slot nop
  815  000017f4  8fc10000	lw	r1,(r30)
  816  000017f8  8fc20004	lw	r2,4(r30)
  817  000017fc  90210000	lbu	r1,(r1)
  818  00001800  90420000	lbu	r2,(r2)
  819  00001804  00220829	sne	r1,r1,r2
  820  00001808  08000008	j	L35_LF2
  821  0000180c  54000000	nop; delay slot nop
  822  00001810          	L34_LF2:
  823  00001810  2001ffff	addi	r1,r0,#-1
  824  00001814          	L35_LF2:
  825  00001814  08000004	j	L24_LF2
  826  00001818  54000000	nop; delay slot nop
  827  0000181c          	L33_LF2:
  828  0000181c          	L24_LF2:
  829  0000181c  8fa20000	lw	r2,0(r29)
  830  00001820  8fa30004	lw	r3,4(r29)
  831  00001824  8fdffff8	lw	r31,-8(r30)
  832  00001828  001ee820	add	r29,r0,r30
  833  0000182c  8fdefffc	lw	r30,-4(r30)
  834  00001830  4be00000	jr	r31
  835  00001834  54000000	nop
  836  00001838          	.endproc _dstrncmp
  837  00001838          	.align 2
  838  00001838          	.proc _dstrlen
  839  00001838          	.global _dstrlen
  840  00001838          	_dstrlen:
  841                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  842  00001838  afbefffc	sw	-4(r29),r30; push fp
  843  0000183c  001df020	add	r30,r0,r29; fp = sp
  844  00001840  afbffff8	sw	-8(r29),r31; push ret addr
  845  00001844  2fbd0018	subui	r29,r29,#24; alloc local storage
  846  00001848  afa20000	sw	0(r29),r2
  847  0000184c  20010000	addi	r1,r0,#0
  848  00001850  afc1fff4	sw	-12(r30),r1
  849  00001854          	L37_LF2:
  850  00001854  8fc10000	lw	r1,(r30)
  851  00001858  20220001	addi	r2,r1,#1
  852  0000185c  afc20000	sw	(r30),r2
  853  00001860  90210000	lbu	r1,(r1)
  854  00001864  64220000	snei	r2,r1,#0
  855  00001868  1440000c	bnez	r2,L39_LF2
  856  0000186c  54000000	nop; delay slot nop
  857  00001870  0800001c	j	L38_LF2
  858  00001874  54000000	nop; delay slot nop
  859  00001878          	L39_LF2:
  860  00001878  8fc2fff4	lw	r2,-12(r30)
  861  0000187c  20410001	addi	r1,r2,#1
  862  00001880  00011020	add	r2,r0,r1
  863  00001884  afc2fff4	sw	-12(r30),r2
  864  00001888  0bffffc8	j	L37_LF2
  865  0000188c  54000000	nop; delay slot nop
  866  00001890          	L38_LF2:
  867  00001890  8fc1fff4	lw	r1,-12(r30)
  868  00001894  08000004	j	L36_LF2
  869  00001898  54000000	nop; delay slot nop
  870  0000189c          	L36_LF2:
  871  0000189c  8fa20000	lw	r2,0(r29)
  872  000018a0  8fdffff8	lw	r31,-8(r30)
  873  000018a4  001ee820	add	r29,r0,r30
  874  000018a8  8fdefffc	lw	r30,-4(r30)
  875  000018ac  4be00000	jr	r31
  876  000018b0  54000000	nop
  877  000018b4          	.endproc _dstrlen
  878  000018b4          	.align 2
  879  000018b4          	.proc _dstrstr
  880  000018b4          	.global _dstrstr
  881  000018b4          	_dstrstr:
  882                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  883  000018b4  afbefffc	sw	-4(r29),r30; push fp
  884  000018b8  001df020	add	r30,r0,r29; fp = sp
  885  000018bc  afbffff8	sw	-8(r29),r31; push ret addr
  886  000018c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  887  000018c4  afa20000	sw	0(r29),r2
  888  000018c8  23bdfff8	addi	r29,r29,#-8
  889  000018cc  001d0820	add	r1,r0,r29
  890  000018d0  8fc20004	lw	r2,4(r30)
  891  000018d4  ac220000	sw	(r1),r2
  892  000018d8  0fffff5c	jal	_dstrlen
  893  000018dc  54000000	nop; delay slot nop
  894  000018e0  23bd0008	addi	r29,r29,#8
  895  000018e4  afc1fff4	sw	-12(r30),r1
  896  000018e8          	L41_LF2:
  897  000018e8  8fc10000	lw	r1,(r30)
  898  000018ec  90220000	lbu	r2,(r1)
  899  000018f0  64410000	snei	r1,r2,#0
  900  000018f4  1420000c	bnez	r1,L43_LF2
  901  000018f8  54000000	nop; delay slot nop
  902  000018fc  08000060	j	L42_LF2
  903  00001900  54000000	nop; delay slot nop
  904  00001904          	L43_LF2:
  905  00001904  23bdfff0	addi	r29,r29,#-16
  906  00001908  001d0820	add	r1,r0,r29
  907  0000190c  8fc20000	lw	r2,(r30)
  908  00001910  ac220000	sw	(r1),r2
  909  00001914  8fc20004	lw	r2,4(r30)
  910  00001918  ac220004	sw	4(r1),r2
  911  0000191c  8fc2fff4	lw	r2,-12(r30)
  912  00001920  ac220008	sw	8(r1),r2
  913  00001924  0ffffdc0	jal	_dstrncmp
  914  00001928  54000000	nop; delay slot nop
  915  0000192c  23bd0010	addi	r29,r29,#16
  916  00001930  64220000	snei	r2,r1,#0
  917  00001934  14400010	bnez	r2,L44_LF2
  918  00001938  54000000	nop; delay slot nop
  919  0000193c  8fc10000	lw	r1,(r30)
  920  00001940  08000028	j	L40_LF2
  921  00001944  54000000	nop; delay slot nop
  922  00001948          	L44_LF2:
  923  00001948  8fc20000	lw	r2,(r30)
  924  0000194c  20410001	addi	r1,r2,#1
  925  00001950  00011020	add	r2,r0,r1
  926  00001954  afc20000	sw	(r30),r2
  927  00001958  0bffff8c	j	L41_LF2
  928  0000195c  54000000	nop; delay slot nop
  929  00001960          	L42_LF2:
  930  00001960  20010000	addi	r1,r0,#0
  931  00001964  08000004	j	L40_LF2
  932  00001968  54000000	nop; delay slot nop
  933  0000196c          	L40_LF2:
  934  0000196c  8fa20000	lw	r2,0(r29)
  935  00001970  8fdffff8	lw	r31,-8(r30)
  936  00001974  001ee820	add	r29,r0,r30
  937  00001978  8fdefffc	lw	r30,-4(r30)
  938  0000197c  4be00000	jr	r31
  939  00001980  54000000	nop
  940  00001984          	.endproc _dstrstr
  941  00001984          	.align 2
  942  00001984          	.proc _dmindex
  943  00001984          	.global _dmindex
  944  00001984          	_dmindex:
  945                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  946  00001984  afbefffc	sw	-4(r29),r30; push fp
  947  00001988  001df020	add	r30,r0,r29; fp = sp
  948  0000198c  afbffff8	sw	-8(r29),r31; push ret addr
  949  00001990  2fbd0018	subui	r29,r29,#24; alloc local storage
  950  00001994  afa20000	sw	0(r29),r2
  951  00001998  54000000	nop
  952  0000199c          	L46_LF2:
  953  0000199c  8fc10000	lw	r1,(r30)
  954  000019a0  90220000	lbu	r2,(r1)
  955  000019a4  64410000	snei	r1,r2,#0
  956  000019a8  1420000c	bnez	r1,L48_LF2
  957  000019ac  54000000	nop; delay slot nop
  958  000019b0  08000070	j	L47_LF2
  959  000019b4  54000000	nop; delay slot nop
  960  000019b8          	L48_LF2:
  961  000019b8  8fc10004	lw	r1,4(r30)
  962  000019bc  afc1fff4	sw	-12(r30),r1
  963  000019c0          	L49_LF2:
  964  000019c0  8fc1fff4	lw	r1,-12(r30)
  965  000019c4  90220000	lbu	r2,(r1)
  966  000019c8  64410000	snei	r1,r2,#0
  967  000019cc  1420000c	bnez	r1,L52_LF2
  968  000019d0  54000000	nop; delay slot nop
  969  000019d4  08000044	j	L50_LF2
  970  000019d8  54000000	nop; delay slot nop
  971  000019dc          	L52_LF2:
  972  000019dc  8fc10000	lw	r1,(r30)
  973  000019e0  8fc2fff4	lw	r2,-12(r30)
  974  000019e4  90210000	lbu	r1,(r1)
  975  000019e8  90420000	lbu	r2,(r2)
  976  000019ec  00220828	seq	r1,r1,r2
  977  000019f0  10200010	beqz	r1,L51_LF2
  978  000019f4  54000000	nop; delay slot nop
  979  000019f8  8fc10000	lw	r1,(r30)
  980  000019fc  08000030	j	L45_LF2
  981  00001a00  54000000	nop; delay slot nop
  982  00001a04          	L53_LF2:
  983  00001a04          	L51_LF2:
  984  00001a04  8fc2fff4	lw	r2,-12(r30)
  985  00001a08  20410001	addi	r1,r2,#1
  986  00001a0c  00011020	add	r2,r0,r1
  987  00001a10  afc2fff4	sw	-12(r30),r2
  988  00001a14  0bffffa8	j	L49_LF2
  989  00001a18  54000000	nop; delay slot nop
  990  00001a1c          	L50_LF2:
  991  00001a1c  0bffff7c	j	L46_LF2
  992  00001a20  54000000	nop; delay slot nop
  993  00001a24          	L47_LF2:
  994  00001a24  20010000	addi	r1,r0,#0
  995  00001a28  08000004	j	L45_LF2
  996  00001a2c  54000000	nop; delay slot nop
  997  00001a30          	L45_LF2:
  998  00001a30  8fa20000	lw	r2,0(r29)
  999  00001a34  8fdffff8	lw	r31,-8(r30)
 1000  00001a38  001ee820	add	r29,r0,r30
 1001  00001a3c  8fdefffc	lw	r30,-4(r30)
 1002  00001a40  4be00000	jr	r31
 1003  00001a44  54000000	nop
 1004  00001a48          	.endproc _dmindex
 1005  00001a48          	.align 2
 1006  00001a48          	.proc _dindex
 1007  00001a48          	.global _dindex
 1008  00001a48          	_dindex:
 1009                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1010  00001a48  afbefffc	sw	-4(r29),r30; push fp
 1011  00001a4c  001df020	add	r30,r0,r29; fp = sp
 1012  00001a50  afbffff8	sw	-8(r29),r31; push ret addr
 1013  00001a54  2fbd0010	subui	r29,r29,#16; alloc local storage
 1014  00001a58  afa20000	sw	0(r29),r2
 1015  00001a5c  54000000	nop
 1016  00001a60          	L55_LF2:
 1017  00001a60  8fc10000	lw	r1,(r30)
 1018  00001a64  90220000	lbu	r2,(r1)
 1019  00001a68  64410000	snei	r1,r2,#0
 1020  00001a6c  1420000c	bnez	r1,L57_LF2
 1021  00001a70  54000000	nop; delay slot nop
 1022  00001a74  08000040	j	L56_LF2
 1023  00001a78  54000000	nop; delay slot nop
 1024  00001a7c          	L57_LF2:
 1025  00001a7c  8fc10000	lw	r1,(r30)
 1026  00001a80  90220000	lbu	r2,(r1)
 1027  00001a84  8fc10004	lw	r1,4(r30)
 1028  00001a88  00411028	seq	r2,r2,r1
 1029  00001a8c  10400010	beqz	r2,L58_LF2
 1030  00001a90  54000000	nop; delay slot nop
 1031  00001a94  8fc10000	lw	r1,(r30)
 1032  00001a98  08000028	j	L54_LF2
 1033  00001a9c  54000000	nop; delay slot nop
 1034  00001aa0          	L58_LF2:
 1035  00001aa0  8fc20000	lw	r2,(r30)
 1036  00001aa4  20410001	addi	r1,r2,#1
 1037  00001aa8  00011020	add	r2,r0,r1
 1038  00001aac  afc20000	sw	(r30),r2
 1039  00001ab0  0bffffac	j	L55_LF2
 1040  00001ab4  54000000	nop; delay slot nop
 1041  00001ab8          	L56_LF2:
 1042  00001ab8  20010000	addi	r1,r0,#0
 1043  00001abc  08000004	j	L54_LF2
 1044  00001ac0  54000000	nop; delay slot nop
 1045  00001ac4          	L54_LF2:
 1046  00001ac4  8fa20000	lw	r2,0(r29)
 1047  00001ac8  8fdffff8	lw	r31,-8(r30)
 1048  00001acc  001ee820	add	r29,r0,r30
 1049  00001ad0  8fdefffc	lw	r30,-4(r30)
 1050  00001ad4  4be00000	jr	r31
 1051  00001ad8  54000000	nop
 1052  00001adc          	.endproc _dindex
 1053  00001adc          	.align 2
 1054  00001adc          	.proc _ditoa
 1055  00001adc          	.global _ditoa
 1056  00001adc          	_ditoa:
 1057                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1058  00001adc  afbefffc	sw	-4(r29),r30; push fp
 1059  00001ae0  001df020	add	r30,r0,r29; fp = sp
 1060  00001ae4  afbffff8	sw	-8(r29),r31; push ret addr
 1061  00001ae8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1062  00001aec  afa20000	sw	0(r29),r2
 1063  00001af0  afa30004	sw	4(r29),r3
 1064  00001af4  8fc10000	lw	r1,(r30)
 1065  00001af8  68220000	slti	r2,r1,#0
 1066  00001afc  1040002c	beqz	r2,L60_LF2
 1067  00001b00  54000000	nop; delay slot nop
 1068  00001b04  8fc10004	lw	r1,4(r30)
 1069  00001b08  20220001	addi	r2,r1,#1
 1070  00001b0c  afc20004	sw	4(r30),r2
 1071  00001b10  2002002d	addi	r2,r0,(#0x2d)&0xff
 1072  00001b14  a0220000	sb	(r1),r2
 1073  00001b18  8fc10000	lw	r1,(r30)
 1074  00001b1c  00011022	sub	r2,r0,r1
 1075  00001b20  afc20000	sw	(r30),r2
 1076  00001b24  08000118	j	L61_LF2
 1077  00001b28  54000000	nop; delay slot nop
 1078  00001b2c          	L60_LF2:
 1079  00001b2c  8fc10000	lw	r1,(r30)
 1080  00001b30  64220000	snei	r2,r1,#0
 1081  00001b34  14400020	bnez	r2,L62_LF2
 1082  00001b38  54000000	nop; delay slot nop
 1083  00001b3c  8fc10004	lw	r1,4(r30)
 1084  00001b40  20220001	addi	r2,r1,#1
 1085  00001b44  afc20004	sw	4(r30),r2
 1086  00001b48  20020030	addi	r2,r0,(#0x30)&0xff
 1087  00001b4c  a0220000	sb	(r1),r2
 1088  00001b50  080000ec	j	L61_LF2
 1089  00001b54  54000000	nop; delay slot nop
 1090  00001b58          	L62_LF2:
 1091  00001b58  20010001	addi	r1,r0,#1
 1092  00001b5c  afc1fff4	sw	-12(r30),r1
 1093  00001b60          	L64_LF2:
 1094  00001b60  8fc1fff4	lw	r1,-12(r30)
 1095  00001b64  8fc20000	lw	r2,(r30)
 1096  00001b68  0022082c	sle	r1,r1,r2
 1097  00001b6c  1420000c	bnez	r1,L66_LF2
 1098  00001b70  54000000	nop; delay slot nop
 1099  00001b74  08000024	j	L65_LF2
 1100  00001b78  54000000	nop; delay slot nop
 1101  00001b7c          	L67_LF2:
 1102  00001b7c          	L66_LF2:
 1103  00001b7c  8fc1fff4	lw	r1,-12(r30)
 1104  00001b80  00011820	add	r3,r0,r1
 1105  00001b84  50620002	slli	r2,r3,#0x2
 1106  00001b88  00411020	add	r2,r2,r1
 1107  00001b8c  50410001	slli	r1,r2,#0x1
 1108  00001b90  afc1fff4	sw	-12(r30),r1
 1109  00001b94  0bffffc8	j	L64_LF2
 1110  00001b98  54000000	nop; delay slot nop
 1111  00001b9c          	L65_LF2:
 1112  00001b9c  54000000	nop
 1113  00001ba0          	L68_LF2:
 1114  00001ba0  8fc1fff4	lw	r1,-12(r30)
 1115  00001ba4  2002000a	addi	r2,r0,#10
 1116  00001ba8  00200035	movi2fp	f0,r1
 1117  00001bac  00400835	movi2fp	f1,r2
 1118  00001bb0  0401000f	div	f0,f0,f1
 1119  00001bb4  00000834	movfp2i	r1,f0
 1120  00001bb8  afc1fff4	sw	-12(r30),r1
 1121  00001bbc  8fc10004	lw	r1,4(r30)
 1122  00001bc0  20220001	addi	r2,r1,#1
 1123  00001bc4  afc20004	sw	4(r30),r2
 1124  00001bc8  8fc20000	lw	r2,(r30)
 1125  00001bcc  8fc3fff4	lw	r3,-12(r30)
 1126  00001bd0  00400035	movi2fp	f0,r2
 1127  00001bd4  00600835	movi2fp	f1,r3
 1128  00001bd8  0401000f	div	f0,f0,f1
 1129  00001bdc  00001034	movfp2i	r2,f0
 1130  00001be0  00021820	add	r3,r0,r2
 1131  00001be4  20620030	addi	r2,r3,#48
 1132  00001be8  a0220000	sb	(r1),r2
 1133  00001bec  8fc10000	lw	r1,(r30)
 1134  00001bf0  8fc3fff4	lw	r3,-12(r30)
 1135  00001bf4  00200035	movi2fp	f0,r1
 1136  00001bf8  00600835	movi2fp	f1,r3
 1137  00001bfc  0401000f	div	f0,f0,f1
 1138  00001c00  00001034	movfp2i	r2,f0
 1139  00001c04  8fc3fff4	lw	r3,-12(r30)
 1140  00001c08  00400035	movi2fp	f0,r2
 1141  00001c0c  00600835	movi2fp	f1,r3
 1142  00001c10  0401000e	mult	f0,f0,f1
 1143  00001c14  00001034	movfp2i	r2,f0
 1144  00001c18  00220822	sub	r1,r1,r2
 1145  00001c1c  afc10000	sw	(r30),r1
 1146  00001c20          	L70_LF2:
 1147  00001c20  8fc1fff4	lw	r1,-12(r30)
 1148  00001c24  6c220001	sgti	r2,r1,#1
 1149  00001c28  1440000c	bnez	r2,L71_LF2
 1150  00001c2c  54000000	nop; delay slot nop
 1151  00001c30  0800000c	j	L61_LF2
 1152  00001c34  54000000	nop; delay slot nop
 1153  00001c38          	L71_LF2:
 1154  00001c38  0bffff64	j	L68_LF2
 1155  00001c3c  54000000	nop; delay slot nop
 1156  00001c40          	L69_LF2:
 1157  00001c40          	L63_LF2:
 1158  00001c40          	L61_LF2:
 1159  00001c40  8fc10004	lw	r1,4(r30)
 1160  00001c44  20020000	addi	r2,r0,(#0x0)&0xff
 1161  00001c48  a0220000	sb	(r1),r2
 1162  00001c4c          	L59_LF2:
 1163  00001c4c  8fa20000	lw	r2,0(r29)
 1164  00001c50  8fa30004	lw	r3,4(r29)
 1165  00001c54  8fdffff8	lw	r31,-8(r30)
 1166  00001c58  001ee820	add	r29,r0,r30
 1167  00001c5c  8fdefffc	lw	r30,-4(r30)
 1168  00001c60  4be00000	jr	r31
 1169  00001c64  54000000	nop
 1170  00001c68          	.endproc _ditoa
 1171  00001c68          	.align 2
 1172  00001c68          	.proc _dstrtol
 1173  00001c68          	.global _dstrtol
 1174  00001c68          	_dstrtol:
 1175                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1176  00001c68  afbefffc	sw	-4(r29),r30; push fp
 1177  00001c6c  001df020	add	r30,r0,r29; fp = sp
 1178  00001c70  afbffff8	sw	-8(r29),r31; push ret addr
 1179  00001c74  2fbd0020	subui	r29,r29,#32; alloc local storage
 1180  00001c78  afa20000	sw	0(r29),r2
 1181  00001c7c  20010000	addi	r1,r0,#0
 1182  00001c80  afc1fff4	sw	-12(r30),r1
 1183  00001c84          	L73_LF2:
 1184  00001c84  8fc10000	lw	r1,(r30)
 1185  00001c88  90220000	lbu	r2,(r1)
 1186  00001c8c  60410020	seqi	r1,r2,#32
 1187  00001c90  14200034	bnez	r1,L75_LF2
 1188  00001c94  54000000	nop; delay slot nop
 1189  00001c98  8fc10000	lw	r1,(r30)
 1190  00001c9c  90220000	lbu	r2,(r1)
 1191  00001ca0  60410009	seqi	r1,r2,#9
 1192  00001ca4  14200020	bnez	r1,L75_LF2
 1193  00001ca8  54000000	nop; delay slot nop
 1194  00001cac  8fc10000	lw	r1,(r30)
 1195  00001cb0  90220000	lbu	r2,(r1)
 1196  00001cb4  6041000a	seqi	r1,r2,#10
 1197  00001cb8  1420000c	bnez	r1,L75_LF2
 1198  00001cbc  54000000	nop; delay slot nop
 1199  00001cc0  0800001c	j	L74_LF2
 1200  00001cc4  54000000	nop; delay slot nop
 1201  00001cc8          	L75_LF2:
 1202  00001cc8  8fc20000	lw	r2,(r30)
 1203  00001ccc  20410001	addi	r1,r2,#1
 1204  00001cd0  00011020	add	r2,r0,r1
 1205  00001cd4  afc20000	sw	(r30),r2
 1206  00001cd8  0bffffa8	j	L73_LF2
 1207  00001cdc  54000000	nop; delay slot nop
 1208  00001ce0          	L74_LF2:
 1209  00001ce0  8fc10004	lw	r1,4(r30)
 1210  00001ce4  64220000	snei	r2,r1,#0
 1211  00001ce8  10400010	beqz	r2,L76_LF2
 1212  00001cec  54000000	nop; delay slot nop
 1213  00001cf0  8fc10004	lw	r1,4(r30)
 1214  00001cf4  8fc20000	lw	r2,(r30)
 1215  00001cf8  ac220000	sw	(r1),r2
 1216  00001cfc          	L76_LF2:
 1217  00001cfc  8fc10000	lw	r1,(r30)
 1218  00001d00  90220000	lbu	r2,(r1)
 1219  00001d04  64410000	snei	r1,r2,#0
 1220  00001d08  14200010	bnez	r1,L77_LF2
 1221  00001d0c  54000000	nop; delay slot nop
 1222  00001d10  8fc1fff4	lw	r1,-12(r30)
 1223  00001d14  08000294	j	L72_LF2
 1224  00001d18  54000000	nop; delay slot nop
 1225  00001d1c          	L77_LF2:
 1226  00001d1c  8fc10000	lw	r1,(r30)
 1227  00001d20  90220000	lbu	r2,(r1)
 1228  00001d24  6041002d	seqi	r1,r2,#45
 1229  00001d28  10200024	beqz	r1,L78_LF2
 1230  00001d2c  54000000	nop; delay slot nop
 1231  00001d30  2001ffff	addi	r1,r0,#-1
 1232  00001d34  afc1ffec	sw	-20(r30),r1
 1233  00001d38  8fc20000	lw	r2,(r30)
 1234  00001d3c  20410001	addi	r1,r2,#1
 1235  00001d40  00011020	add	r2,r0,r1
 1236  00001d44  afc20000	sw	(r30),r2
 1237  00001d48  0800000c	j	L79_LF2
 1238  00001d4c  54000000	nop; delay slot nop
 1239  00001d50          	L78_LF2:
 1240  00001d50  20010001	addi	r1,r0,#1
 1241  00001d54  afc1ffec	sw	-20(r30),r1
 1242  00001d58          	L79_LF2:
 1243  00001d58  8fc10008	lw	r1,8(r30)
 1244  00001d5c  64220000	snei	r2,r1,#0
 1245  00001d60  14400090	bnez	r2,L80_LF2
 1246  00001d64  54000000	nop; delay slot nop
 1247  00001d68  8fc10000	lw	r1,(r30)
 1248  00001d6c  90220000	lbu	r2,(r1)
 1249  00001d70  60410030	seqi	r1,r2,#48
 1250  00001d74  10200074	beqz	r1,L81_LF2
 1251  00001d78  54000000	nop; delay slot nop
 1252  00001d7c  8fc20000	lw	r2,(r30)
 1253  00001d80  20410001	addi	r1,r2,#1
 1254  00001d84  00011020	add	r2,r0,r1
 1255  00001d88  afc20000	sw	(r30),r2
 1256  00001d8c  8fc10000	lw	r1,(r30)
 1257  00001d90  90220000	lbu	r2,(r1)
 1258  00001d94  60410078	seqi	r1,r2,#120
 1259  00001d98  14200020	bnez	r1,L83_LF2
 1260  00001d9c  54000000	nop; delay slot nop
 1261  00001da0  8fc10000	lw	r1,(r30)
 1262  00001da4  90220000	lbu	r2,(r1)
 1263  00001da8  60410058	seqi	r1,r2,#88
 1264  00001dac  1420000c	bnez	r1,L83_LF2
 1265  00001db0  54000000	nop; delay slot nop
 1266  00001db4  08000024	j	L82_LF2
 1267  00001db8  54000000	nop; delay slot nop
 1268  00001dbc          	L83_LF2:
 1269  00001dbc  20010010	addi	r1,r0,#16
 1270  00001dc0  afc10008	sw	8(r30),r1
 1271  00001dc4  8fc20000	lw	r2,(r30)
 1272  00001dc8  20410001	addi	r1,r2,#1
 1273  00001dcc  00011020	add	r2,r0,r1
 1274  00001dd0  afc20000	sw	(r30),r2
 1275  00001dd4  0800000c	j	L84_LF2
 1276  00001dd8  54000000	nop; delay slot nop
 1277  00001ddc          	L82_LF2:
 1278  00001ddc  20010008	addi	r1,r0,#8
 1279  00001de0  afc10008	sw	8(r30),r1
 1280  00001de4          	L84_LF2:
 1281  00001de4  0800000c	j	L80_LF2
 1282  00001de8  54000000	nop; delay slot nop
 1283  00001dec          	L81_LF2:
 1284  00001dec  2001000a	addi	r1,r0,#10
 1285  00001df0  afc10008	sw	8(r30),r1
 1286  00001df4          	L85_LF2:
 1287  00001df4          	L80_LF2:
 1288  00001df4  8fc10008	lw	r1,8(r30)
 1289  00001df8  70220000	slei	r2,r1,#0
 1290  00001dfc  1440001c	bnez	r2,L87_LF2
 1291  00001e00  54000000	nop; delay slot nop
 1292  00001e04  8fc10008	lw	r1,8(r30)
 1293  00001e08  6c220010	sgti	r2,r1,#16
 1294  00001e0c  1440000c	bnez	r2,L87_LF2
 1295  00001e10  54000000	nop; delay slot nop
 1296  00001e14  08000010	j	L86_LF2
 1297  00001e18  54000000	nop; delay slot nop
 1298  00001e1c          	L87_LF2:
 1299  00001e1c  8fc1fff4	lw	r1,-12(r30)
 1300  00001e20  08000188	j	L72_LF2
 1301  00001e24  54000000	nop; delay slot nop
 1302  00001e28          	L86_LF2:
 1303  00001e28  54000000	nop
 1304  00001e2c          	L88_LF2:
 1305  00001e2c  8fc10000	lw	r1,(r30)
 1306  00001e30  90220000	lbu	r2,(r1)
 1307  00001e34  6c41002f	sgtui	r1,r2,#47
 1308  00001e38  10200030	beqz	r1,L91_LF2
 1309  00001e3c  54000000	nop; delay slot nop
 1310  00001e40  8fc10000	lw	r1,(r30)
 1311  00001e44  90220000	lbu	r2,(r1)
 1312  00001e48  70410039	sleui	r1,r2,#57
 1313  00001e4c  1020001c	beqz	r1,L91_LF2
 1314  00001e50  54000000	nop; delay slot nop
 1315  00001e54  8fc10000	lw	r1,(r30)
 1316  00001e58  90220000	lbu	r2,(r1)
 1317  00001e5c  2041ffd0	addi	r1,r2,#-48
 1318  00001e60  afc1fff0	sw	-16(r30),r1
 1319  00001e64  0800008c	j	L92_LF2
 1320  00001e68  54000000	nop; delay slot nop
 1321  00001e6c          	L91_LF2:
 1322  00001e6c  8fc10000	lw	r1,(r30)
 1323  00001e70  90220000	lbu	r2,(r1)
 1324  00001e74  6c410060	sgtui	r1,r2,#96
 1325  00001e78  10200030	beqz	r1,L93_LF2
 1326  00001e7c  54000000	nop; delay slot nop
 1327  00001e80  8fc10000	lw	r1,(r30)
 1328  00001e84  90220000	lbu	r2,(r1)
 1329  00001e88  7041007a	sleui	r1,r2,#122
 1330  00001e8c  1020001c	beqz	r1,L93_LF2
 1331  00001e90  54000000	nop; delay slot nop
 1332  00001e94  8fc10000	lw	r1,(r30)
 1333  00001e98  90220000	lbu	r2,(r1)
 1334  00001e9c  2041ffa9	addi	r1,r2,#-87
 1335  00001ea0  afc1fff0	sw	-16(r30),r1
 1336  00001ea4  0800004c	j	L92_LF2
 1337  00001ea8  54000000	nop; delay slot nop
 1338  00001eac          	L93_LF2:
 1339  00001eac  8fc10000	lw	r1,(r30)
 1340  00001eb0  90220000	lbu	r2,(r1)
 1341  00001eb4  6c410040	sgtui	r1,r2,#64
 1342  00001eb8  10200030	beqz	r1,L95_LF2
 1343  00001ebc  54000000	nop; delay slot nop
 1344  00001ec0  8fc10000	lw	r1,(r30)
 1345  00001ec4  90220000	lbu	r2,(r1)
 1346  00001ec8  7041005a	sleui	r1,r2,#90
 1347  00001ecc  1020001c	beqz	r1,L95_LF2
 1348  00001ed0  54000000	nop; delay slot nop
 1349  00001ed4  8fc10000	lw	r1,(r30)
 1350  00001ed8  90220000	lbu	r2,(r1)
 1351  00001edc  2041ffc9	addi	r1,r2,#-55
 1352  00001ee0  afc1fff0	sw	-16(r30),r1
 1353  00001ee4  0800000c	j	L92_LF2
 1354  00001ee8  54000000	nop; delay slot nop
 1355  00001eec          	L95_LF2:
 1356  00001eec  200103e8	addi	r1,r0,#1000
 1357  00001ef0  afc1fff0	sw	-16(r30),r1
 1358  00001ef4          	L96_LF2:
 1359  00001ef4          	L94_LF2:
 1360  00001ef4          	L92_LF2:
 1361  00001ef4  8fc1fff0	lw	r1,-16(r30)
 1362  00001ef8  8fc20008	lw	r2,8(r30)
 1363  00001efc  0022082a	slt	r1,r1,r2
 1364  00001f00  10200040	beqz	r1,L90_LF2
 1365  00001f04  54000000	nop; delay slot nop
 1366  00001f08  8fc1fff4	lw	r1,-12(r30)
 1367  00001f0c  8fc20008	lw	r2,8(r30)
 1368  00001f10  00200035	movi2fp	f0,r1
 1369  00001f14  00400835	movi2fp	f1,r2
 1370  00001f18  0401000e	mult	f0,f0,f1
 1371  00001f1c  00000834	movfp2i	r1,f0
 1372  00001f20  afc1fff4	sw	-12(r30),r1
 1373  00001f24  8fc1fff4	lw	r1,-12(r30)
 1374  00001f28  8fc2fff0	lw	r2,-16(r30)
 1375  00001f2c  00220820	add	r1,r1,r2
 1376  00001f30  afc1fff4	sw	-12(r30),r1
 1377  00001f34  8fc20000	lw	r2,(r30)
 1378  00001f38  20410001	addi	r1,r2,#1
 1379  00001f3c  00011020	add	r2,r0,r1
 1380  00001f40  afc20000	sw	(r30),r2
 1381  00001f44          	L97_LF2:
 1382  00001f44          	L90_LF2:
 1383  00001f44  8fc1fff0	lw	r1,-16(r30)
 1384  00001f48  8fc20008	lw	r2,8(r30)
 1385  00001f4c  0022082a	slt	r1,r1,r2
 1386  00001f50  1420000c	bnez	r1,L98_LF2
 1387  00001f54  54000000	nop; delay slot nop
 1388  00001f58  0800000c	j	L89_LF2
 1389  00001f5c  54000000	nop; delay slot nop
 1390  00001f60          	L98_LF2:
 1391  00001f60  0bfffec8	j	L88_LF2
 1392  00001f64  54000000	nop; delay slot nop
 1393  00001f68          	L89_LF2:
 1394  00001f68  8fc10004	lw	r1,4(r30)
 1395  00001f6c  64220000	snei	r2,r1,#0
 1396  00001f70  10400010	beqz	r2,L99_LF2
 1397  00001f74  54000000	nop; delay slot nop
 1398  00001f78  8fc10004	lw	r1,4(r30)
 1399  00001f7c  8fc20000	lw	r2,(r30)
 1400  00001f80  ac220000	sw	(r1),r2
 1401  00001f84          	L99_LF2:
 1402  00001f84  8fc1fff4	lw	r1,-12(r30)
 1403  00001f88  8fc2ffec	lw	r2,-20(r30)
 1404  00001f8c  00200035	movi2fp	f0,r1
 1405  00001f90  00400835	movi2fp	f1,r2
 1406  00001f94  0401000e	mult	f0,f0,f1
 1407  00001f98  00000834	movfp2i	r1,f0
 1408  00001f9c  afc1fff4	sw	-12(r30),r1
 1409  00001fa0  8fc1fff4	lw	r1,-12(r30)
 1410  00001fa4  08000004	j	L72_LF2
 1411  00001fa8  54000000	nop; delay slot nop
 1412  00001fac          	L72_LF2:
 1413  00001fac  8fa20000	lw	r2,0(r29)
 1414  00001fb0  8fdffff8	lw	r31,-8(r30)
 1415  00001fb4  001ee820	add	r29,r0,r30
 1416  00001fb8  8fdefffc	lw	r30,-4(r30)
 1417  00001fbc  4be00000	jr	r31
 1418  00001fc0  54000000	nop
 1419  00001fc4          	.endproc _dstrtol
 1420  00001fc4          	.align 2
 1421  00001fc4          	.proc _bcopy
 1422  00001fc4          	.global _bcopy
 1423  00001fc4          	_bcopy:
 1424                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1425  00001fc4  afbefffc	sw	-4(r29),r30; push fp
 1426  00001fc8  001df020	add	r30,r0,r29; fp = sp
 1427  00001fcc  afbffff8	sw	-8(r29),r31; push ret addr
 1428  00001fd0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1429  00001fd4  afa20000	sw	0(r29),r2
 1430  00001fd8  afa30004	sw	4(r29),r3
 1431  00001fdc  54000000	nop
 1432  00001fe0          	L101_LF2:
 1433  00001fe0  8fc10008	lw	r1,8(r30)
 1434  00001fe4  2022ffff	addi	r2,r1,#-1
 1435  00001fe8  afc20008	sw	8(r30),r2
 1436  00001fec  6c210000	sgti	r1,r1,#0
 1437  00001ff0  1420000c	bnez	r1,L103_LF2
 1438  00001ff4  54000000	nop; delay slot nop
 1439  00001ff8  0800002c	j	L102_LF2
 1440  00001ffc  54000000	nop; delay slot nop
 1441  00002000          	L103_LF2:
 1442  00002000  8fc10004	lw	r1,4(r30)
 1443  00002004  20220001	addi	r2,r1,#1
 1444  00002008  afc20004	sw	4(r30),r2
 1445  0000200c  8fc20000	lw	r2,(r30)
 1446  00002010  20430001	addi	r3,r2,#1
 1447  00002014  afc30000	sw	(r30),r3
 1448  00002018  80420000	lb	r2,(r2)
 1449  0000201c  a0220000	sb	(r1),r2
 1450  00002020  0bffffbc	j	L101_LF2
 1451  00002024  54000000	nop; delay slot nop
 1452  00002028          	L102_LF2:
 1453  00002028          	L100_LF2:
 1454  00002028  8fa20000	lw	r2,0(r29)
 1455  0000202c  8fa30004	lw	r3,4(r29)
 1456  00002030  8fdffff8	lw	r31,-8(r30)
 1457  00002034  001ee820	add	r29,r0,r30
 1458  00002038  8fdefffc	lw	r30,-4(r30)
 1459  0000203c  4be00000	jr	r31
 1460  00002040  54000000	nop
 1461  00002044          	.endproc _bcopy
 1462  00002044          	.align 2
 1463  00002044          	.proc _bzero
 1464  00002044          	.global _bzero
 1465  00002044          	_bzero:
 1466                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1467  00002044  afbefffc	sw	-4(r29),r30; push fp
 1468  00002048  001df020	add	r30,r0,r29; fp = sp
 1469  0000204c  afbffff8	sw	-8(r29),r31; push ret addr
 1470  00002050  2fbd0010	subui	r29,r29,#16; alloc local storage
 1471  00002054  afa20000	sw	0(r29),r2
 1472  00002058  54000000	nop
 1473  0000205c          	L105_LF2:
 1474  0000205c  8fc10004	lw	r1,4(r30)
 1475  00002060  2022ffff	addi	r2,r1,#-1
 1476  00002064  afc20004	sw	4(r30),r2
 1477  00002068  6c210000	sgti	r1,r1,#0
 1478  0000206c  1420000c	bnez	r1,L107_LF2
 1479  00002070  54000000	nop; delay slot nop
 1480  00002074  08000020	j	L106_LF2
 1481  00002078  54000000	nop; delay slot nop
 1482  0000207c          	L107_LF2:
 1483  0000207c  8fc10000	lw	r1,(r30)
 1484  00002080  20220001	addi	r2,r1,#1
 1485  00002084  afc20000	sw	(r30),r2
 1486  00002088  20020000	addi	r2,r0,(#0x0)&0xff
 1487  0000208c  a0220000	sb	(r1),r2
 1488  00002090  0bffffc8	j	L105_LF2
 1489  00002094  54000000	nop; delay slot nop
 1490  00002098          	L106_LF2:
 1491  00002098          	L104_LF2:
 1492  00002098  8fa20000	lw	r2,0(r29)
 1493  0000209c  8fdffff8	lw	r31,-8(r30)
 1494  000020a0  001ee820	add	r29,r0,r30
 1495  000020a4  8fdefffc	lw	r30,-4(r30)
 1496  000020a8  4be00000	jr	r31
 1497  000020ac  54000000	nop
 1498  000020b0          	.endproc _bzero
 1499  000020b0          	.align 2
 1500  000020b0          	.proc _min
 1501  000020b0          	.global _min
 1502  000020b0          	_min:
 1503                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1504  000020b0  afbefffc	sw	-4(r29),r30; push fp
 1505  000020b4  001df020	add	r30,r0,r29; fp = sp
 1506  000020b8  afbffff8	sw	-8(r29),r31; push ret addr
 1507  000020bc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1508  000020c0  afa20000	sw	0(r29),r2
 1509  000020c4  afa30004	sw	4(r29),r3
 1510  000020c8  8fc10000	lw	r1,(r30)
 1511  000020cc  8fc20004	lw	r2,4(r30)
 1512  000020d0  0022182c	sle	r3,r1,r2
 1513  000020d4  14600008	bnez	r3,L109_LF2
 1514  000020d8  54000000	nop; delay slot nop
 1515  000020dc  8fc10004	lw	r1,4(r30)
 1516  000020e0          	L109_LF2:
 1517  000020e0  08000004	j	L108_LF2
 1518  000020e4  54000000	nop; delay slot nop
 1519  000020e8          	L108_LF2:
 1520  000020e8  8fa20000	lw	r2,0(r29)
 1521  000020ec  8fa30004	lw	r3,4(r29)
 1522  000020f0  8fdffff8	lw	r31,-8(r30)
 1523  000020f4  001ee820	add	r29,r0,r30
 1524  000020f8  8fdefffc	lw	r30,-4(r30)
 1525  000020fc  4be00000	jr	r31
 1526  00002100  54000000	nop
 1527  00002104          	.endproc _min
 1528  00002104          	.align 2
 1529  00002104          	.proc _max
 1530  00002104          	.global _max
 1531  00002104          	_max:
 1532                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1533  00002104  afbefffc	sw	-4(r29),r30; push fp
 1534  00002108  001df020	add	r30,r0,r29; fp = sp
 1535  0000210c  afbffff8	sw	-8(r29),r31; push ret addr
 1536  00002110  2fbd0010	subui	r29,r29,#16; alloc local storage
 1537  00002114  afa20000	sw	0(r29),r2
 1538  00002118  afa30004	sw	4(r29),r3
 1539  0000211c  8fc10000	lw	r1,(r30)
 1540  00002120  8fc20004	lw	r2,4(r30)
 1541  00002124  0022182d	sge	r3,r1,r2
 1542  00002128  14600008	bnez	r3,L111_LF2
 1543  0000212c  54000000	nop; delay slot nop
 1544  00002130  8fc10004	lw	r1,4(r30)
 1545  00002134          	L111_LF2:
 1546  00002134  08000004	j	L110_LF2
 1547  00002138  54000000	nop; delay slot nop
 1548  0000213c          	L110_LF2:
 1549  0000213c  8fa20000	lw	r2,0(r29)
 1550  00002140  8fa30004	lw	r3,4(r29)
 1551  00002144  8fdffff8	lw	r31,-8(r30)
 1552  00002148  001ee820	add	r29,r0,r30
 1553  0000214c  8fdefffc	lw	r30,-4(r30)
 1554  00002150  4be00000	jr	r31
 1555  00002154  54000000	nop
 1556  00002158          	.endproc _max
 1557                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1558                      ;;;
 1559                      ;;; Most of the traps are called in files from libtraps.
 1562  00002158          	.align 2
 1563  00002158          	.proc _exit
 1564  00002158          	.global _exit
 1565  00002158          	_exit:
 1566  00002158  44000300	trap	#0x300
 1567  0000215c  4be00000	jr	r31
 1568  00002160  54000000	nop
 1569  00002164          	.endproc _exit
 1571                      ; for the benefit of gcc.
 1572  00002164          	.proc ___main
 1573  00002164          	.global ___main
 1574  00002164          	___main:
 1575  00002164  4be00000	jr	r31
 1576  00002168  54000000	nop
 1577  0000216c          	.endproc ___main
 1578  0000216c          	.text
 1579  0000216c          	.global _etext
 1580  0000216c          	_etext:
 1581  0000216c          	.align 3
 1582  00002170          	.data
 1583  000030e2          	.global _edata
 1584  000030e2          	_edata:
